{"ast":null,"code":"import { css } from 'goober';\nimport React, { useRef, useEffect, useState, useCallback, useMemo } from 'react';\n\nvar debounce = function debounce(func, wait) {\n  var timeout;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      func.apply(null, args);\n    }, wait);\n  };\n};\n/**\r\n * Filters React Select options and sorts by similarity to a search filter.\r\n * Handles partial matches, eg. searching for \"Waberg High\" will find \"Raoul\r\n * Wallenberg Traditional High School\". Case insensitive. Ignores\r\n * non-alphanumeric characters.\r\n *\r\n * @param  options  An unfiltered list of Options.\r\n * @param? filter  A string to compare against Option labels.\r\n * @param? substitutions  Strings with multiple spellings or variations that we\r\n *           expect to match, eg. accented characters or abbreviated words.\r\n *\r\n * @return A filtered and sorted array of Options.\r\n */\n\n\nfunction filterOptions(options, filter, substitutions) {\n  // If the filter is blank, return the full list of Options.\n  if (!filter) {\n    return options;\n  }\n\n  var cleanFilter = cleanUpText(filter, substitutions);\n  return options // Filter out undefined or null Options.\n  .filter(function (_ref) {\n    var label = _ref.label,\n        value = _ref.value;\n    return label != null && value != null;\n  }) // Create a {score, Option} pair for each Option based on its label's\n  // similarity to the filter text.\n  .map(function (option) {\n    return {\n      option: option,\n      score: typeaheadSimilarity(cleanUpText(option.label, substitutions), cleanFilter)\n    };\n  }) // Only include matches of the entire substring, with a slight\n  // affordance for transposition or extra characters.\n  .filter(function (pair) {\n    return pair.score >= cleanFilter.length - 2;\n  }) // Sort 'em by order of their score.\n  .sort(function (a, b) {\n    return b.score - a.score;\n  }) // …and grab the original Options back from their pairs.\n  .map(function (pair) {\n    return pair.option;\n  });\n}\n/**\r\n * Scores the similarity between two strings by returning the length of the\r\n * longest common subsequence. Intended for comparing strings of different\r\n * lengths; eg. when matching a typeahead search input with a school name.\r\n\n * Meant for use in an instant search box where results are being fetched\r\n * as a user is typing.\r\n *\r\n * @param  a  The longer string (though, we flip them if it's shorter).\r\n * @param  b  The shorter string, eg. a typeahead search input.\r\n *\r\n * @return The length of the longest common subsequence. Higher scores indicate\r\n *           closer matches.\r\n */\n\n\nfunction typeaheadSimilarity(a, b) {\n  var aLength = a.length;\n  var bLength = b.length;\n  var table = [];\n\n  if (!aLength || !bLength) {\n    return 0;\n  } // Ensure `a` isn't shorter than `b`.\n\n\n  if (aLength < bLength) {\n    var _ref2 = [b, a];\n    a = _ref2[0];\n    b = _ref2[1];\n  } // Early exit if `a` includes `b`; these will be scored higher than any\n  // other options with the same `b` (filter string), with a preference for\n  // shorter `a` strings (option labels).\n\n\n  if (a.indexOf(b) !== -1) {\n    return bLength + 1 / aLength;\n  } // Initialize the table axes:\n  //\n  //    0 0 0 0 ... bLength\n  //    0\n  //    0\n  //\n  //   ...\n  //\n  // aLength\n  //\n\n\n  for (var x = 0; x <= aLength; ++x) {\n    table[x] = [0];\n  }\n\n  for (var y = 0; y <= bLength; ++y) {\n    table[0][y] = 0;\n  } // Populate the rest of the table with a dynamic programming algorithm.\n\n\n  for (var _x = 1; _x <= aLength; ++_x) {\n    for (var _y = 1; _y <= bLength; ++_y) {\n      table[_x][_y] = a[_x - 1] === b[_y - 1] ? 1 + table[_x - 1][_y - 1] : Math.max(table[_x][_y - 1], table[_x - 1][_y]);\n    }\n  }\n\n  return table[aLength][bLength];\n}\n/**\r\n * Apply string substitutions, remove non-alphanumeric characters, and convert\r\n * all letters to uppercase.\r\n *\r\n * eg. 'Scoil Bhríde Primary School' may become 'SCOILBHRIDEPRIMARYSCHOOL'.\r\n *\r\n * @param  input  An unsanitized input string.\r\n * @param  substitutions  Strings with multiple spellings or variations that we\r\n *          expect to match, for example accented characters or abbreviated\r\n *          words.\r\n *\r\n * @return The sanitized text.\r\n */\n\n\nfunction cleanUpText(input, substitutions) {\n  if (!input) {\n    return \"\";\n  } // Uppercase and remove all non-alphanumeric, non-accented characters.\n  // Also remove underscores.\n\n\n  input = input.toUpperCase().replace(/((?=[^\\u00E0-\\u00FC])\\W)|_/g, \"\");\n\n  if (!substitutions) {\n    return input;\n  }\n\n  var safeSubstitutions = substitutions; // For Flow.\n  // Replace all strings in `safeSubstitutions` with their standardized\n  // counterparts.\n\n  return Object.keys(safeSubstitutions).reduce(function (output, substitution) {\n    var unsubbed = new RegExp(substitution, \"g\");\n    return output.replace(unsubbed, safeSubstitutions[substitution]);\n  }, input);\n}\n\nvar strings = {\n  selectSomeItems: \"Select...\",\n  allItemsAreSelected: \"All items are selected.\",\n  selectAll: \"Select All\",\n  search: \"Search\",\n  clearSearch: \"Clear Search\",\n  clearSelected: \"Clear Selected\"\n};\n\nfunction getString(key, overrideStrings) {\n  return (overrideStrings == null ? void 0 : overrideStrings[key]) || strings[key];\n}\n\nvar Cross = function Cross() {\n  return React.createElement(\"svg\", {\n    width: \"24\",\n    height: \"24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\",\n    className: \"dropdown-search-clear-icon gray\"\n  }, React.createElement(\"line\", {\n    x1: \"18\",\n    y1: \"6\",\n    x2: \"6\",\n    y2: \"18\"\n  }), React.createElement(\"line\", {\n    x1: \"6\",\n    y1: \"6\",\n    x2: \"18\",\n    y2: \"18\"\n  }));\n};\n\nvar DefaultRenderer = /*#__PURE__*/css({\n  \"& input,& span\": {\n    verticalAlign: \"middle\",\n    margin: 0\n  },\n  span: {\n    display: \"inline-block\",\n    paddingLeft: \"5px\"\n  },\n  \"&.disabled\": {\n    opacity: 0.5\n  }\n});\n\nvar DefaultItemRenderer = function DefaultItemRenderer(_ref) {\n  var checked = _ref.checked,\n      option = _ref.option,\n      onClick = _ref.onClick,\n      disabled = _ref.disabled;\n  return React.createElement(\"div\", {\n    className: DefaultRenderer + \" item-renderer \" + (disabled && \"disabled\")\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: onClick,\n    checked: checked,\n    tabIndex: -1,\n    disabled: disabled\n  }), React.createElement(\"span\", null, option.label));\n};\n/**\r\n * This component represents an individual item in the multi-select drop-down\r\n */\n\n\nvar ItemContainer = /*#__PURE__*/css({\n  boxSizing: \"border-box\",\n  cursor: \"pointer\",\n  display: \"block\",\n  padding: \"var(--rmsc-p)\",\n  outline: 0,\n  \"&:hover,&:focus\": {\n    background: \"var(--rmsc-hover)\"\n  },\n  \"&.selected\": {\n    background: \"var(--rmsc-selected)\"\n  }\n});\n\nvar SelectItem = function SelectItem(_ref) {\n  var _ref$itemRenderer = _ref.itemRenderer,\n      ItemRenderer = _ref$itemRenderer === void 0 ? DefaultItemRenderer : _ref$itemRenderer,\n      option = _ref.option,\n      checked = _ref.checked,\n      focused = _ref.focused,\n      tabIndex = _ref.tabIndex,\n      disabled = _ref.disabled,\n      onSelectionChanged = _ref.onSelectionChanged,\n      onClick = _ref.onClick;\n  var itemRef = useRef();\n  useEffect(function () {\n    updateFocus(); // eslint-disable-next-line\n  }, [focused]);\n\n  var toggleChecked = function toggleChecked() {\n    onSelectionChanged(!checked);\n  };\n\n  var handleClick = function handleClick(e) {\n    toggleChecked();\n    onClick(e);\n  };\n\n  var updateFocus = function updateFocus() {\n    if (focused && !disabled && itemRef) {\n      itemRef.current.focus();\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(e) {\n    switch (e.which) {\n      case 13: // Enter\n\n      case 32:\n        // Space\n        toggleChecked();\n        break;\n\n      default:\n        return;\n    }\n\n    e.preventDefault();\n  };\n\n  return React.createElement(\"label\", {\n    className: ItemContainer + \" select-item \" + (checked && \"selected\"),\n    role: \"option\",\n    \"aria-selected\": checked,\n    tabIndex: tabIndex,\n    ref: itemRef,\n    onKeyDown: handleKeyDown\n  }, React.createElement(ItemRenderer, {\n    option: option,\n    checked: checked,\n    onClick: handleClick,\n    disabled: disabled\n  }));\n};\n/**\r\n * This component represents an unadorned list of SelectItem (s).\r\n */\n\n\nvar SelectListUl = /*#__PURE__*/css({\n  margin: 0,\n  paddingLeft: 0,\n  li: {\n    listStyle: \"none\",\n    margin: 0\n  }\n});\nvar skipIndex = 2;\n\nvar SelectList = function SelectList(_ref) {\n  var value = _ref.value,\n      onChange = _ref.onChange,\n      disabled = _ref.disabled,\n      ItemRenderer = _ref.ItemRenderer,\n      options = _ref.options,\n      focusIndex = _ref.focusIndex,\n      _onClick = _ref.onClick;\n\n  var handleSelectionChanged = function handleSelectionChanged(option, checked) {\n    if (disabled) {\n      return;\n    }\n\n    onChange(checked ? [].concat(value, [option]) : value.filter(function (o) {\n      return o.value !== option.value;\n    }));\n  };\n\n  return React.createElement(\"ul\", {\n    className: SelectListUl\n  }, options.map(function (o, i) {\n    var tabIndex = i + skipIndex;\n    return React.createElement(\"li\", {\n      key: o.hasOwnProperty(\"key\") ? o.key : i\n    }, React.createElement(SelectItem, {\n      focused: focusIndex === tabIndex,\n      tabIndex: tabIndex,\n      option: o,\n      onSelectionChanged: function onSelectionChanged(c) {\n        return handleSelectionChanged(o, c);\n      },\n      checked: value.find(function (s) {\n        return s.value === o.value;\n      }) ? true : false,\n      onClick: function onClick(e) {\n        return _onClick(e, tabIndex);\n      },\n      itemRenderer: ItemRenderer,\n      disabled: o.disabled || disabled\n    }));\n  }));\n};\n/**\r\n * This component represents the entire panel which gets dropped down when the\r\n * user selects the component.  It encapsulates the search filter, the\r\n * Select-all item, and the list of options.\r\n */\n\n\nvar FocusType;\n\n(function (FocusType) {\n  FocusType[FocusType[\"SEARCH\"] = -1] = \"SEARCH\";\n  FocusType[FocusType[\"NONE\"] = 1] = \"NONE\";\n})(FocusType || (FocusType = {}));\n\nvar SelectSearchContainer = /*#__PURE__*/css({\n  width: \"100%\",\n  position: \"relative\",\n  borderBottom: \"1px solid var(--rmsc-border)\",\n  input: {\n    height: \"var(--rmsc-h)\",\n    padding: \"0 var(--rmsc-p)\",\n    width: \"100%\",\n    outline: 0,\n    border: 0\n  }\n});\nvar SearchClearButton = /*#__PURE__*/css({\n  cursor: \"pointer\",\n  position: \"absolute\",\n  top: 0,\n  right: 0,\n  bottom: 0,\n  background: \"none\",\n  border: 0,\n  padding: \"0 calc(var(--rmsc-p)/2)\",\n  \"[hidden]\": {\n    display: \"none\"\n  }\n});\n\nvar SelectPanel = function SelectPanel(props) {\n  var onChange = props.onChange,\n      options = props.options,\n      value = props.value,\n      customFilterOptions = props.filterOptions,\n      selectAllLabel = props.selectAllLabel,\n      ItemRenderer = props.ItemRenderer,\n      disabled = props.disabled,\n      disableSearch = props.disableSearch,\n      focusSearchOnOpen = props.focusSearchOnOpen,\n      hasSelectAll = props.hasSelectAll,\n      overrideStrings = props.overrideStrings,\n      ClearIcon = props.ClearIcon,\n      debounceDuration = props.debounceDuration;\n\n  var _useState = useState(\"\"),\n      searchText = _useState[0],\n      setSearchText = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      searchTextForFilter = _useState2[0],\n      setSearchTextForFilter = _useState2[1];\n\n  var _useState3 = useState(focusSearchOnOpen && !disableSearch ? FocusType.SEARCH : FocusType.NONE),\n      focusIndex = _useState3[0],\n      setFocusIndex = _useState3[1];\n\n  var debouncedSearch = useCallback(debounce(function (query) {\n    return setSearchTextForFilter(query);\n  }, debounceDuration), []);\n  var selectAllOption = {\n    label: selectAllLabel || getString(\"selectAll\", overrideStrings),\n    value: \"\"\n  };\n\n  var selectAllValues = function selectAllValues(checked) {\n    var filteredValues = filteredOptions().filter(function (o) {\n      return !o.disabled;\n    }).map(function (o) {\n      return o.value;\n    });\n\n    if (checked) {\n      var selectedValues = value.map(function (o) {\n        return o.value;\n      });\n      var finalSelectedValues = [].concat(selectedValues, filteredValues);\n      return options.filter(function (_ref) {\n        var value = _ref.value;\n        return finalSelectedValues.includes(value);\n      });\n    }\n\n    return value.filter(function (o) {\n      return !filteredValues.includes(o.value);\n    });\n  };\n\n  var selectAllChanged = function selectAllChanged(checked) {\n    var newOptions = selectAllValues(checked);\n    onChange(newOptions);\n  };\n\n  var handleSearchChange = function handleSearchChange(e) {\n    debouncedSearch(e.target.value);\n    setSearchText(e.target.value);\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  var handleClear = function handleClear() {\n    setSearchTextForFilter(\"\");\n    setSearchText(\"\");\n  };\n\n  var handleItemClicked = function handleItemClicked(index) {\n    return setFocusIndex(index);\n  };\n\n  var handleKeyDown = function handleKeyDown(e) {\n    switch (e.which) {\n      case 38:\n        // Up Arrow\n        if (e.altKey) {\n          return;\n        }\n\n        updateFocus(-1);\n        break;\n\n      case 40:\n        // Down Arrow\n        if (e.altKey) {\n          return;\n        }\n\n        updateFocus(1);\n        break;\n\n      default:\n        return;\n    }\n\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  var handleSearchFocus = function handleSearchFocus() {\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  var filteredOptions = function filteredOptions() {\n    return customFilterOptions ? customFilterOptions(options, searchTextForFilter) : filterOptions(options, searchTextForFilter);\n  };\n\n  var updateFocus = function updateFocus(offset) {\n    var newFocus = focusIndex + offset;\n    newFocus = Math.max(1, newFocus);\n    newFocus = Math.min(newFocus, options.length);\n    setFocusIndex(newFocus);\n  };\n\n  var _useMemo = useMemo(function () {\n    var filteredOptionsList = filteredOptions().filter(function (o) {\n      return !o.disabled;\n    });\n    return [filteredOptionsList.every(function (o) {\n      return value.findIndex(function (v) {\n        return v.value === o.value;\n      }) !== -1;\n    }), filteredOptionsList.length !== 0]; // eslint-disable-next-line\n  }, [searchText, value]),\n      isAllOptionSelected = _useMemo[0],\n      hasSelectableOptions = _useMemo[1];\n\n  return React.createElement(\"div\", {\n    className: \"select-panel\",\n    role: \"listbox\",\n    onKeyDown: handleKeyDown\n  }, !disableSearch && React.createElement(\"div\", {\n    className: SelectSearchContainer\n  }, React.createElement(\"input\", {\n    autoFocus: focusSearchOnOpen,\n    placeholder: getString(\"search\", overrideStrings),\n    type: \"text\",\n    \"aria-describedby\": getString(\"search\", overrideStrings),\n    onKeyDown: function onKeyDown(e) {\n      return e.stopPropagation();\n    },\n    onChange: handleSearchChange,\n    onFocus: handleSearchFocus,\n    value: searchText\n  }), React.createElement(\"button\", {\n    className: SearchClearButton + \" search-clear-button\",\n    hidden: !searchText,\n    onClick: handleClear,\n    \"aria-label\": getString(\"clearSearch\", overrideStrings)\n  }, ClearIcon || React.createElement(Cross, null))), hasSelectAll && hasSelectableOptions && React.createElement(SelectItem, {\n    focused: focusIndex === 1,\n    tabIndex: 1,\n    checked: isAllOptionSelected,\n    option: selectAllOption,\n    onSelectionChanged: selectAllChanged,\n    onClick: function onClick() {\n      return handleItemClicked(0);\n    },\n    itemRenderer: ItemRenderer,\n    disabled: disabled\n  }), React.createElement(SelectList, Object.assign({}, props, {\n    options: filteredOptions(),\n    focusIndex: focusIndex,\n    onClick: function onClick(_e, index) {\n      return handleItemClicked(index);\n    },\n    ItemRenderer: ItemRenderer,\n    disabled: disabled\n  })));\n};\n\nfunction Arrow(_ref) {\n  var expanded = _ref.expanded;\n  return React.createElement(\"svg\", {\n    width: \"24\",\n    height: \"24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\",\n    className: \"dropdown-heading-dropdown-arrow gray\"\n  }, React.createElement(\"path\", {\n    d: expanded ? \"M18 15 12 9 6 15\" : \"M6 9L12 15 18 9\"\n  }));\n}\n\nvar Spinner = /*#__PURE__*/css({\n  animation: \"rotate 2s linear infinite\",\n  \"& .path\": {\n    stroke: \"var(--rmsc-border)\",\n    strokeWidth: \"4px\",\n    strokeLinecap: \"round\",\n    animation: \"dash 1.5s ease-in-out infinite\"\n  },\n  \"@keyframes rotate\": {\n    \"100%\": {\n      transform: \"rotate(360deg)\"\n    }\n  },\n  \"@keyframes dash\": {\n    \"0%\": {\n      strokeDasharray: \"1,150\",\n      strokeDashoffset: 0\n    },\n    \"50%\": {\n      strokeDasharray: \"90,150\",\n      strokeDashoffset: \"-35\"\n    },\n    \"100%\": {\n      strokeDasharray: \"90,150\",\n      strokeDashoffset: \"-124\"\n    }\n  }\n});\n\nfunction Loading(_ref) {\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size;\n  return React.createElement(\"span\", {\n    style: {\n      width: size,\n      marginRight: \"0.2rem\"\n    }\n  }, React.createElement(\"svg\", {\n    width: size,\n    height: size,\n    className: Spinner,\n    viewBox: \"0 0 50 50\",\n    style: {\n      display: \"inline\",\n      verticalAlign: \"middle\"\n    }\n  }, React.createElement(\"circle\", {\n    cx: \"25\",\n    cy: \"25\",\n    r: \"20\",\n    fill: \"none\",\n    className: \"path\"\n  })));\n}\n/**\r\n * A generic dropdown component.  It takes the children of the component\r\n * and hosts it in the component.  When the component is selected, it\r\n * drops-down the contentComponent and applies the contentProps.\r\n */\n\n\nvar PanelContainer = /*#__PURE__*/css({\n  position: \"absolute\",\n  zIndex: 1,\n  top: \"100%\",\n  width: \"100%\",\n  paddingTop: \"8px\",\n  \".panel-content\": {\n    maxHeight: \"300px\",\n    overflowY: \"auto\",\n    borderRadius: \"var(--rmsc-radius)\",\n    background: \"var(--rmsc-bg)\",\n    boxShadow: \"0 0 0 1px rgba(0, 0, 0, 0.1), 0 4px 11px rgba(0, 0, 0, 0.1)\"\n  }\n});\nvar DropdownContainer = /*#__PURE__*/css({\n  position: \"relative\",\n  outline: 0,\n  backgroundColor: \"var(--rmsc-bg)\",\n  border: \"1px solid var(--rmsc-border)\",\n  borderRadius: \"var(--rmsc-radius)\",\n  \"&:focus-within\": {\n    boxShadow: \"var(--rmsc-main) 0 0 0 1px\",\n    borderColor: \"var(--rmsc-main)\"\n  }\n});\nvar DropdownHeading = /*#__PURE__*/css({\n  position: \"relative\",\n  padding: \"0 var(--rmsc-p)\",\n  display: \"flex\",\n  alignItems: \"center\",\n  width: \"100%\",\n  height: \"var(--rmsc-h)\",\n  cursor: \"default\",\n  outline: 0,\n  \".dropdown-heading-value\": {\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n    flex: 1\n  }\n});\nvar ClearSelectedButton = /*#__PURE__*/css({\n  cursor: \"pointer\",\n  background: \"none\",\n  border: 0,\n  padding: 0\n});\n\nvar Dropdown = function Dropdown(_ref) {\n  var children = _ref.children,\n      ContentComponent = _ref.contentComponent,\n      contentProps = _ref.contentProps,\n      isLoading = _ref.isLoading,\n      disabled = _ref.disabled,\n      shouldToggleOnHover = _ref.shouldToggleOnHover,\n      labelledBy = _ref.labelledBy,\n      onMenuToggle = _ref.onMenuToggle,\n      ArrowRenderer = _ref.ArrowRenderer,\n      ClearSelectedIcon = _ref.ClearSelectedIcon;\n\n  var _useState = useState(false),\n      expanded = _useState[0],\n      setExpanded = _useState[1];\n\n  var _useState2 = useState(false),\n      hasFocus = _useState2[0],\n      setHasFocus = _useState2[1];\n\n  var FinalArrow = ArrowRenderer || Arrow;\n  var wrapper = useRef();\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  useEffect(function () {\n    onMenuToggle && onMenuToggle(expanded);\n  }, [expanded]);\n\n  var handleKeyDown = function handleKeyDown(e) {\n    var _wrapper$current;\n\n    switch (e.which) {\n      case 27: // Escape\n\n      case 38:\n        // Up Arrow\n        setExpanded(false);\n        wrapper == null ? void 0 : (_wrapper$current = wrapper.current) == null ? void 0 : _wrapper$current.focus();\n        break;\n\n      case 32: // Space\n\n      case 13: // Enter Key\n\n      case 40:\n        // Down Arrow\n        setExpanded(true);\n        break;\n\n      default:\n        return;\n    }\n\n    e.preventDefault();\n  };\n\n  var handleHover = function handleHover(iexpanded) {\n    shouldToggleOnHover && setExpanded(iexpanded);\n  };\n\n  var handleFocus = function handleFocus() {\n    return !hasFocus && setHasFocus(true);\n  };\n\n  var handleBlur = function handleBlur(e) {\n    if (!e.currentTarget.contains(e.relatedTarget)) {\n      setHasFocus(false);\n      setExpanded(false);\n    }\n  };\n\n  var handleMouseEnter = function handleMouseEnter() {\n    return handleHover(true);\n  };\n\n  var handleMouseLeave = function handleMouseLeave() {\n    return handleHover(false);\n  };\n\n  var toggleExpanded = function toggleExpanded() {\n    return setExpanded(isLoading || disabled ? false : !expanded);\n  };\n\n  var handleClearSelected = function handleClearSelected(e) {\n    e.stopPropagation();\n    contentProps[\"onChange\"]([]);\n  };\n\n  return React.createElement(\"div\", {\n    tabIndex: 0,\n    className: DropdownContainer + \" dropdown-container\",\n    \"aria-labelledby\": labelledBy,\n    \"aria-expanded\": expanded,\n    \"aria-readonly\": true,\n    \"aria-disabled\": disabled,\n    ref: wrapper,\n    onKeyDown: handleKeyDown,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave\n  }, React.createElement(\"div\", {\n    className: DropdownHeading + \" dropdown-heading\",\n    onClick: toggleExpanded\n  }, React.createElement(\"div\", {\n    className: \"dropdown-heading-value\"\n  }, children), isLoading && React.createElement(Loading, null), contentProps[\"value\"].length > 0 && React.createElement(\"button\", {\n    type: \"button\",\n    className: ClearSelectedButton + \" clear-selected-button\",\n    onClick: handleClearSelected,\n    \"aria-label\": getString(\"clearSelected\", contentProps[\"overrideStrings\"])\n  }, ClearSelectedIcon || React.createElement(Cross, null)), React.createElement(FinalArrow, {\n    expanded: expanded\n  })), expanded && React.createElement(\"div\", {\n    className: PanelContainer + \" dropdown-content\"\n  }, React.createElement(\"div\", {\n    className: \"panel-content\"\n  }, React.createElement(ContentComponent, Object.assign({}, contentProps)))));\n};\n\nvar DropdownHeader = function DropdownHeader(_ref) {\n  var value = _ref.value,\n      options = _ref.options,\n      valueRenderer = _ref.valueRenderer,\n      overrideStrings = _ref.overrideStrings;\n  var noneSelected = value.length === 0;\n  var allSelected = value.length === options.length;\n  var customText = valueRenderer && valueRenderer(value, options);\n\n  var getSelectedText = function getSelectedText() {\n    return value.map(function (s) {\n      return s.label;\n    }).join(\", \");\n  };\n\n  return noneSelected ? React.createElement(\"span\", {\n    className: \"gray\"\n  }, customText || getString(\"selectSomeItems\", overrideStrings)) : React.createElement(\"span\", null, customText || (allSelected ? getString(\"allItemsAreSelected\", overrideStrings) : getSelectedText()));\n};\n\nvar MultiSelectBox = /*#__PURE__*/css({\n  \"--rmscMain\": \"#4285f4\",\n  \"--rmscHover\": \"#f1f3f5\",\n  \"--rmscSelected\": \"#e2e6ea\",\n  \"--rmscBorder\": \"#ccc\",\n  \"--rmscGray\": \"#aaa\",\n  \"--rmscBg\": \"#fff\",\n  \"--rmscP\": \"10px\",\n  \"--rmscRadius\": \"4px\",\n  \"--rmscH\": \"38px\",\n  \"*\": {\n    boxSizing: \"border-box\",\n    transition: \"all 0.2s ease\"\n  },\n  \".gray\": {\n    color: \"var(--rmsc-gray)\"\n  }\n});\n\nvar MultiSelect = function MultiSelect(_ref) {\n  var _ref$focusSearchOnOpe = _ref.focusSearchOnOpen,\n      focusSearchOnOpen = _ref$focusSearchOnOpe === void 0 ? true : _ref$focusSearchOnOpe,\n      _ref$hasSelectAll = _ref.hasSelectAll,\n      hasSelectAll = _ref$hasSelectAll === void 0 ? true : _ref$hasSelectAll,\n      shouldToggleOnHover = _ref.shouldToggleOnHover,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? \"multi-select\" : _ref$className,\n      options = _ref.options,\n      value = _ref.value,\n      valueRenderer = _ref.valueRenderer,\n      overrideStrings = _ref.overrideStrings,\n      onChange = _ref.onChange,\n      disabled = _ref.disabled,\n      ItemRenderer = _ref.ItemRenderer,\n      ArrowRenderer = _ref.ArrowRenderer,\n      selectAllLabel = _ref.selectAllLabel,\n      isLoading = _ref.isLoading,\n      disableSearch = _ref.disableSearch,\n      filterOptions = _ref.filterOptions,\n      labelledBy = _ref.labelledBy,\n      onMenuToggle = _ref.onMenuToggle,\n      ClearIcon = _ref.ClearIcon,\n      _ref$debounceDuration = _ref.debounceDuration,\n      debounceDuration = _ref$debounceDuration === void 0 ? 300 : _ref$debounceDuration,\n      ClearSelectedIcon = _ref.ClearSelectedIcon;\n  var nvalue = value || [];\n  return React.createElement(\"div\", {\n    className: MultiSelectBox + \" \" + className\n  }, React.createElement(Dropdown, {\n    isLoading: isLoading,\n    contentComponent: SelectPanel,\n    shouldToggleOnHover: shouldToggleOnHover,\n    contentProps: {\n      ItemRenderer: ItemRenderer,\n      options: options,\n      value: nvalue,\n      hasSelectAll: hasSelectAll,\n      selectAllLabel: selectAllLabel,\n      onChange: onChange,\n      disabled: disabled,\n      disableSearch: disableSearch,\n      focusSearchOnOpen: focusSearchOnOpen,\n      filterOptions: filterOptions,\n      overrideStrings: overrideStrings,\n      ClearIcon: ClearIcon,\n      debounceDuration: debounceDuration\n    },\n    disabled: disabled,\n    labelledBy: labelledBy,\n    onMenuToggle: onMenuToggle,\n    ArrowRenderer: ArrowRenderer,\n    ClearSelectedIcon: ClearSelectedIcon\n  }, React.createElement(DropdownHeader, {\n    value: nvalue,\n    options: options,\n    valueRenderer: valueRenderer,\n    overrideStrings: overrideStrings\n  })));\n};\n\nexport default MultiSelect;\nexport { Dropdown, SelectItem, SelectPanel };","map":{"version":3,"sources":["../src/lib/debounce.tsx","../src/lib/fuzzy-match-utils.tsx","../src/lib/get-string.tsx","../src/select-panel/cross.tsx","../src/select-panel/default-item.tsx","../src/select-panel/select-item.tsx","../src/select-panel/select-list.tsx","../src/select-panel/index.tsx","../src/multi-select/arrow.tsx","../src/multi-select/loading.tsx","../src/multi-select/dropdown.tsx","../src/multi-select/header.tsx","../src/multi-select/index.tsx"],"names":["debounce","args","clearTimeout","timeout","setTimeout","func","filterOptions","options","filter","substitutions","cleanFilter","cleanUpText","label","value","option","score","typeaheadSimilarity","pair","b","a","aLength","bLength","table","x","y","Math","input","safeSubstitutions","unsubbed","output","strings","selectSomeItems","allItemsAreSelected","selectAll","search","clearSearch","clearSelected","getString","key","overrideStrings","Cross","width","height","fill","stroke","strokeWidth","className","x1","y1","x2","y2","DefaultRenderer","css","verticalAlign","margin","span","display","paddingLeft","opacity","DefaultItemRenderer","checked","onClick","disabled","type","onChange","tabIndex","React","ItemContainer","boxSizing","cursor","padding","outline","background","SelectItem","itemRenderer","ItemRenderer","focused","onSelectionChanged","itemRef","useRef","useEffect","updateFocus","toggleChecked","handleClick","handleKeyDown","e","role","ref","onKeyDown","SelectListUl","li","listStyle","skipIndex","SelectList","focusIndex","handleSelectionChanged","o","i","s","FocusType","SelectSearchContainer","position","borderBottom","border","SearchClearButton","top","right","bottom","SelectPanel","customFilterOptions","selectAllLabel","disableSearch","focusSearchOnOpen","hasSelectAll","ClearIcon","debounceDuration","props","searchText","setSearchText","useState","searchTextForFilter","setSearchTextForFilter","setFocusIndex","debouncedSearch","useCallback","selectAllOption","selectAllValues","filteredValues","selectedValues","finalSelectedValues","selectAllChanged","newOptions","handleSearchChange","handleClear","handleItemClicked","handleSearchFocus","filteredOptions","newFocus","isAllOptionSelected","hasSelectableOptions","useMemo","filteredOptionsList","v","autoFocus","placeholder","onFocus","hidden","Arrow","expanded","d","Spinner","animation","strokeLinecap","transform","strokeDasharray","strokeDashoffset","size","style","marginRight","viewBox","cx","cy","r","PanelContainer","zIndex","paddingTop","maxHeight","overflowY","borderRadius","boxShadow","DropdownContainer","backgroundColor","borderColor","DropdownHeading","alignItems","overflow","textOverflow","whiteSpace","flex","ClearSelectedButton","Dropdown","children","contentComponent","ContentComponent","contentProps","isLoading","shouldToggleOnHover","labelledBy","onMenuToggle","ArrowRenderer","ClearSelectedIcon","setExpanded","hasFocus","setHasFocus","FinalArrow","wrapper","handleHover","handleFocus","handleBlur","handleMouseEnter","handleMouseLeave","toggleExpanded","handleClearSelected","onBlur","onMouseEnter","onMouseLeave","DropdownHeader","valueRenderer","noneSelected","allSelected","customText","getSelectedText","MultiSelectBox","transition","color","MultiSelect","nvalue"],"mappings":"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","sourcesContent":["export const debounce = (func, wait) => {\n  let timeout;\n  return function (...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      func.apply(null, args);\n    }, wait);\n  };\n};\n","import { Option } from \"./interfaces\";\n\n/**\n * A collection of string matching algorithms built with React Select in mind.\n */\n\n// Option type from React Select and similar libraries.\ntype MapOfStrings = { [key: string]: string };\n\n/**\n * Filters React Select options and sorts by similarity to a search filter.\n * Handles partial matches, eg. searching for \"Waberg High\" will find \"Raoul\n * Wallenberg Traditional High School\". Case insensitive. Ignores\n * non-alphanumeric characters.\n *\n * @param  options  An unfiltered list of Options.\n * @param? filter  A string to compare against Option labels.\n * @param? substitutions  Strings with multiple spellings or variations that we\n *           expect to match, eg. accented characters or abbreviated words.\n *\n * @return A filtered and sorted array of Options.\n */\nexport function filterOptions(\n  options: Option[],\n  filter?: string,\n  substitutions?: MapOfStrings\n): Option[] {\n  // If the filter is blank, return the full list of Options.\n  if (!filter) {\n    return options;\n  }\n\n  const cleanFilter = cleanUpText(filter, substitutions);\n  return (\n    options\n      // Filter out undefined or null Options.\n      .filter(({ label, value }) => label != null && value != null)\n      // Create a {score, Option} pair for each Option based on its label's\n      // similarity to the filter text.\n      .map((option) => ({\n        option: option,\n        score: typeaheadSimilarity(\n          cleanUpText(option.label, substitutions),\n          cleanFilter\n        ),\n      }))\n      // Only include matches of the entire substring, with a slight\n      // affordance for transposition or extra characters.\n      .filter((pair) => pair.score >= cleanFilter.length - 2)\n      // Sort 'em by order of their score.\n      .sort((a, b) => b.score - a.score)\n      // …and grab the original Options back from their pairs.\n      .map((pair) => pair.option)\n  );\n}\n\n/**\n * Scores the similarity between two strings by returning the length of the\n * longest common subsequence. Intended for comparing strings of different\n * lengths; eg. when matching a typeahead search input with a school name.\n\n * Meant for use in an instant search box where results are being fetched\n * as a user is typing.\n *\n * @param  a  The longer string (though, we flip them if it's shorter).\n * @param  b  The shorter string, eg. a typeahead search input.\n *\n * @return The length of the longest common subsequence. Higher scores indicate\n *           closer matches.\n */\nexport function typeaheadSimilarity(a: string, b: string): number {\n  const aLength = a.length;\n  const bLength = b.length;\n  const table: any[] = [];\n\n  if (!aLength || !bLength) {\n    return 0;\n  }\n\n  // Ensure `a` isn't shorter than `b`.\n  if (aLength < bLength) {\n    [a, b] = [b, a];\n  }\n\n  // Early exit if `a` includes `b`; these will be scored higher than any\n  // other options with the same `b` (filter string), with a preference for\n  // shorter `a` strings (option labels).\n  if (a.indexOf(b) !== -1) {\n    return bLength + 1 / aLength;\n  }\n\n  // Initialize the table axes:\n  //\n  //    0 0 0 0 ... bLength\n  //    0\n  //    0\n  //\n  //   ...\n  //\n  // aLength\n  //\n  for (let x = 0; x <= aLength; ++x) {\n    table[x] = [0];\n  }\n  for (let y = 0; y <= bLength; ++y) {\n    table[0][y] = 0;\n  }\n\n  // Populate the rest of the table with a dynamic programming algorithm.\n  for (let x = 1; x <= aLength; ++x) {\n    for (let y = 1; y <= bLength; ++y) {\n      table[x][y] =\n        a[x - 1] === b[y - 1]\n          ? 1 + table[x - 1][y - 1]\n          : Math.max(table[x][y - 1], table[x - 1][y]);\n    }\n  }\n\n  return table[aLength][bLength];\n}\n\n/**\n * Apply string substitutions, remove non-alphanumeric characters, and convert\n * all letters to uppercase.\n *\n * eg. 'Scoil Bhríde Primary School' may become 'SCOILBHRIDEPRIMARYSCHOOL'.\n *\n * @param  input  An unsanitized input string.\n * @param  substitutions  Strings with multiple spellings or variations that we\n *          expect to match, for example accented characters or abbreviated\n *          words.\n *\n * @return The sanitized text.\n */\nexport function cleanUpText(\n  input?: string,\n  substitutions?: MapOfStrings\n): string {\n  if (!input) {\n    return \"\";\n  }\n\n  // Uppercase and remove all non-alphanumeric, non-accented characters.\n  // Also remove underscores.\n  input = input.toUpperCase().replace(/((?=[^\\u00E0-\\u00FC])\\W)|_/g, \"\");\n\n  if (!substitutions) {\n    return input;\n  }\n  const safeSubstitutions: MapOfStrings = substitutions; // For Flow.\n\n  // Replace all strings in `safeSubstitutions` with their standardized\n  // counterparts.\n  return Object.keys(safeSubstitutions).reduce((output, substitution) => {\n    const unsubbed = new RegExp(substitution, \"g\");\n    return output.replace(unsubbed, safeSubstitutions[substitution]);\n  }, input);\n}\n","const strings = {\n  selectSomeItems: \"Select...\",\n  allItemsAreSelected: \"All items are selected.\",\n  selectAll: \"Select All\",\n  search: \"Search\",\n  clearSearch: \"Clear Search\",\n  clearSelected: \"Clear Selected\",\n};\n\nexport default function getString(key: string, overrideStrings?): string {\n  return overrideStrings?.[key] || strings[key];\n}\n","import React from \"react\";\n\nconst Cross = () => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    className=\"dropdown-search-clear-icon gray\"\n  >\n    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n  </svg>\n);\n\nexport default Cross;\n","import { css } from \"goober\";\nimport React from \"react\";\n\nimport { Option } from \"../lib/interfaces\";\n\ninterface IDefaultItemRendererProps {\n  checked: boolean;\n  option: Option;\n  disabled?: boolean;\n  onClick;\n}\n\nconst DefaultRenderer = css({\n  \"& input,& span\": {\n    verticalAlign: \"middle\",\n    margin: 0,\n  },\n  span: {\n    display: \"inline-block\",\n    paddingLeft: \"5px\",\n  },\n  \"&.disabled\": {\n    opacity: 0.5,\n  },\n});\n\nconst DefaultItemRenderer = ({\n  checked,\n  option,\n  onClick,\n  disabled,\n}: IDefaultItemRendererProps) => {\n  return (\n    <div\n      className={`${DefaultRenderer} item-renderer ${disabled && \"disabled\"}`}\n    >\n      <input\n        type=\"checkbox\"\n        onChange={onClick}\n        checked={checked}\n        tabIndex={-1}\n        disabled={disabled}\n      />\n      <span>{option.label}</span>\n    </div>\n  );\n};\n\nexport default DefaultItemRenderer;\n","/**\n * This component represents an individual item in the multi-select drop-down\n */\nimport { css } from \"goober\";\nimport React, { useEffect, useRef } from \"react\";\n\nimport { Option } from \"../lib/interfaces\";\nimport DefaultItemRenderer from \"./default-item\";\n\ninterface ISelectItemProps {\n  itemRenderer;\n  option: Option;\n  checked: boolean;\n  focused?: boolean;\n  tabIndex?: number;\n  disabled?: boolean;\n  onSelectionChanged: (checked: boolean) => void;\n  onClick;\n}\n\nconst ItemContainer = css({\n  boxSizing: \"border-box\",\n  cursor: \"pointer\",\n  display: \"block\",\n  padding: \"var(--rmsc-p)\",\n  outline: 0,\n  \"&:hover,&:focus\": {\n    background: \"var(--rmsc-hover)\",\n  },\n  \"&.selected\": {\n    background: \"var(--rmsc-selected)\",\n  },\n});\n\nconst SelectItem = ({\n  itemRenderer: ItemRenderer = DefaultItemRenderer,\n  option,\n  checked,\n  focused,\n  tabIndex,\n  disabled,\n  onSelectionChanged,\n  onClick,\n}: ISelectItemProps) => {\n  const itemRef: any = useRef();\n\n  useEffect(() => {\n    updateFocus();\n    // eslint-disable-next-line\n  }, [focused]);\n\n  const toggleChecked = () => {\n    onSelectionChanged(!checked);\n  };\n\n  const handleClick = (e) => {\n    toggleChecked();\n    onClick(e);\n  };\n\n  const updateFocus = () => {\n    if (focused && !disabled && itemRef) {\n      itemRef.current.focus();\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    switch (e.which) {\n      case 13: // Enter\n      case 32: // Space\n        toggleChecked();\n        break;\n      default:\n        return;\n    }\n    e.preventDefault();\n  };\n\n  return (\n    <label\n      className={`${ItemContainer} select-item ${checked && \"selected\"}`}\n      role=\"option\"\n      aria-selected={checked}\n      tabIndex={tabIndex}\n      ref={itemRef}\n      onKeyDown={handleKeyDown}\n    >\n      <ItemRenderer\n        option={option}\n        checked={checked}\n        onClick={handleClick}\n        disabled={disabled}\n      />\n    </label>\n  );\n};\n\nexport default SelectItem;\n","/**\n * This component represents an unadorned list of SelectItem (s).\n */\nimport { css } from \"goober\";\nimport React from \"react\";\n\nimport { Option } from \"../lib/interfaces\";\nimport SelectItem from \"./select-item\";\n\ninterface ISelectListProps {\n  focusIndex: number;\n  ItemRenderer?: Function;\n  options: Option[];\n  value: Option[];\n  onChange: (selected: Option[]) => void;\n  onClick: Function;\n  disabled?: boolean;\n}\n\nconst SelectListUl = css({\n  margin: 0,\n  paddingLeft: 0,\n  li: {\n    listStyle: \"none\",\n    margin: 0,\n  },\n});\n\nconst skipIndex = 2;\n\nconst SelectList = ({\n  value,\n  onChange,\n  disabled,\n  ItemRenderer,\n  options,\n  focusIndex,\n  onClick,\n}: ISelectListProps) => {\n  const handleSelectionChanged = (option: Option, checked: boolean) => {\n    if (disabled) {\n      return;\n    }\n    onChange(\n      checked\n        ? [...value, option]\n        : value.filter((o: any) => o.value !== option.value)\n    );\n  };\n\n  return (\n    <ul className={SelectListUl}>\n      {options.map((o: any, i) => {\n        const tabIndex = i + skipIndex;\n        return (\n          <li key={o.hasOwnProperty(\"key\") ? o.key : i}>\n            <SelectItem\n              focused={focusIndex === tabIndex}\n              tabIndex={tabIndex}\n              option={o}\n              onSelectionChanged={(c) => handleSelectionChanged(o, c)}\n              checked={value.find((s) => s.value === o.value) ? true : false}\n              onClick={(e) => onClick(e, tabIndex)}\n              itemRenderer={ItemRenderer}\n              disabled={o.disabled || disabled}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default SelectList;\n","/**\n * This component represents the entire panel which gets dropped down when the\n * user selects the component.  It encapsulates the search filter, the\n * Select-all item, and the list of options.\n */\nimport { css } from \"goober\";\nimport React, { useCallback, useMemo, useState } from \"react\";\n\nimport { debounce } from \"../lib/debounce\";\nimport { filterOptions } from \"../lib/fuzzy-match-utils\";\nimport getString from \"../lib/get-string\";\nimport { Option } from \"../lib/interfaces\";\nimport Cross from \"./cross\";\nimport SelectItem from \"./select-item\";\nimport SelectList from \"./select-list\";\n\ninterface ISelectPanelProps {\n  ItemRenderer?: Function;\n  options: Option[];\n  value: Option[];\n  focusSearchOnOpen: boolean;\n  selectAllLabel?: string;\n  onChange: (selected: Option[]) => void;\n  disabled?: boolean;\n  disableSearch?: boolean;\n  hasSelectAll: boolean;\n  filterOptions?: (options: Option[], filter: string) => Option[];\n  overrideStrings?: { [key: string]: string };\n  ClearIcon?;\n  debounceDuration?: number;\n}\n\nenum FocusType {\n  SEARCH = -1,\n  NONE = 1,\n}\n\nconst SelectSearchContainer = css({\n  width: \"100%\",\n  position: \"relative\",\n  borderBottom: \"1px solid var(--rmsc-border)\",\n  input: {\n    height: \"var(--rmsc-h)\",\n    padding: \"0 var(--rmsc-p)\",\n    width: \"100%\",\n    outline: 0,\n    border: 0,\n  },\n});\n\nconst SearchClearButton = css({\n  cursor: \"pointer\",\n  position: \"absolute\",\n  top: 0,\n  right: 0,\n  bottom: 0,\n  background: \"none\",\n  border: 0,\n  padding: \"0 calc(var(--rmsc-p)/2)\",\n  \"[hidden]\": {\n    display: \"none\",\n  },\n});\n\nexport const SelectPanel = (props: ISelectPanelProps) => {\n  const {\n    onChange,\n    options,\n    value,\n    filterOptions: customFilterOptions,\n    selectAllLabel,\n    ItemRenderer,\n    disabled,\n    disableSearch,\n    focusSearchOnOpen,\n    hasSelectAll,\n    overrideStrings,\n    ClearIcon,\n    debounceDuration,\n  } = props;\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchTextForFilter, setSearchTextForFilter] = useState(\"\");\n  const [focusIndex, setFocusIndex] = useState(\n    focusSearchOnOpen && !disableSearch ? FocusType.SEARCH : FocusType.NONE\n  );\n  const debouncedSearch = useCallback(\n    debounce((query) => setSearchTextForFilter(query), debounceDuration),\n    []\n  );\n\n  const selectAllOption = {\n    label: selectAllLabel || getString(\"selectAll\", overrideStrings),\n    value: \"\",\n  };\n\n  const selectAllValues = (checked) => {\n    const filteredValues = filteredOptions()\n      .filter((o) => !o.disabled)\n      .map((o) => o.value);\n\n    if (checked) {\n      const selectedValues = value.map((o) => o.value);\n      const finalSelectedValues = [...selectedValues, ...filteredValues];\n\n      return options.filter(({ value }) => finalSelectedValues.includes(value));\n    }\n\n    return value.filter((o) => !filteredValues.includes(o.value));\n  };\n\n  const selectAllChanged = (checked: boolean) => {\n    const newOptions = selectAllValues(checked);\n    onChange(newOptions);\n  };\n\n  const handleSearchChange = (e) => {\n    debouncedSearch(e.target.value);\n    setSearchText(e.target.value);\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  const handleClear = () => {\n    setSearchTextForFilter(\"\");\n    setSearchText(\"\");\n  };\n\n  const handleItemClicked = (index: number) => setFocusIndex(index);\n\n  const handleKeyDown = (e) => {\n    switch (e.which) {\n      case 38: // Up Arrow\n        if (e.altKey) {\n          return;\n        }\n        updateFocus(-1);\n        break;\n      case 40: // Down Arrow\n        if (e.altKey) {\n          return;\n        }\n        updateFocus(1);\n        break;\n      default:\n        return;\n    }\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  const handleSearchFocus = () => {\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  const filteredOptions = () =>\n    customFilterOptions\n      ? customFilterOptions(options, searchTextForFilter)\n      : filterOptions(options, searchTextForFilter);\n\n  const updateFocus = (offset: number) => {\n    let newFocus = focusIndex + offset;\n    newFocus = Math.max(1, newFocus);\n    newFocus = Math.min(newFocus, options.length);\n    setFocusIndex(newFocus);\n  };\n\n  const [isAllOptionSelected, hasSelectableOptions] = useMemo(() => {\n    const filteredOptionsList = filteredOptions().filter((o) => !o.disabled);\n    return [\n      filteredOptionsList.every(\n        (o) => value.findIndex((v) => v.value === o.value) !== -1\n      ),\n      filteredOptionsList.length !== 0,\n    ];\n    // eslint-disable-next-line\n  }, [searchText, value]);\n\n  return (\n    <div className=\"select-panel\" role=\"listbox\" onKeyDown={handleKeyDown}>\n      {!disableSearch && (\n        <div className={SelectSearchContainer}>\n          <input\n            autoFocus={focusSearchOnOpen}\n            placeholder={getString(\"search\", overrideStrings)}\n            type=\"text\"\n            aria-describedby={getString(\"search\", overrideStrings)}\n            onKeyDown={(e) => e.stopPropagation()}\n            onChange={handleSearchChange}\n            onFocus={handleSearchFocus}\n            value={searchText}\n          />\n          <button\n            className={`${SearchClearButton} search-clear-button`}\n            hidden={!searchText}\n            onClick={handleClear}\n            aria-label={getString(\"clearSearch\", overrideStrings)}\n          >\n            {ClearIcon || <Cross />}\n          </button>\n        </div>\n      )}\n\n      {hasSelectAll && hasSelectableOptions && (\n        <SelectItem\n          focused={focusIndex === 1}\n          tabIndex={1}\n          checked={isAllOptionSelected}\n          option={selectAllOption}\n          onSelectionChanged={selectAllChanged}\n          onClick={() => handleItemClicked(0)}\n          itemRenderer={ItemRenderer}\n          disabled={disabled}\n        />\n      )}\n\n      <SelectList\n        {...props}\n        options={filteredOptions()}\n        focusIndex={focusIndex}\n        onClick={(_e, index) => handleItemClicked(index)}\n        ItemRenderer={ItemRenderer}\n        disabled={disabled}\n      />\n    </div>\n  );\n};\n\nexport default SelectPanel;\n","import React from \"react\";\n\ninterface ArrowProps {\n  expanded?: boolean;\n}\n\nexport default function Arrow({ expanded }: ArrowProps) {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      className=\"dropdown-heading-dropdown-arrow gray\"\n    >\n      <path d={expanded ? \"M18 15 12 9 6 15\" : \"M6 9L12 15 18 9\"} />\n    </svg>\n  );\n}\n","import { css } from \"goober\";\nimport React from \"react\";\n\nconst Spinner = css({\n  animation: \"rotate 2s linear infinite\",\n\n  \"& .path\": {\n    stroke: \"var(--rmsc-border)\",\n    strokeWidth: \"4px\",\n    strokeLinecap: \"round\",\n    animation: \"dash 1.5s ease-in-out infinite\",\n  },\n\n  \"@keyframes rotate\": {\n    \"100%\": {\n      transform: \"rotate(360deg)\",\n    },\n  },\n\n  \"@keyframes dash\": {\n    \"0%\": {\n      strokeDasharray: \"1,150\",\n      strokeDashoffset: 0,\n    },\n    \"50%\": {\n      strokeDasharray: \"90,150\",\n      strokeDashoffset: \"-35\",\n    },\n    \"100%\": {\n      strokeDasharray: \"90,150\",\n      strokeDashoffset: \"-124\",\n    },\n  },\n});\n\nfunction Loading({ size = 24 }) {\n  return (\n    <span\n      style={{\n        width: size,\n        marginRight: \"0.2rem\",\n      }}\n    >\n      <svg\n        width={size}\n        height={size}\n        className={Spinner}\n        viewBox=\"0 0 50 50\"\n        style={{ display: \"inline\", verticalAlign: \"middle\" }}\n      >\n        <circle cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" className=\"path\"></circle>\n      </svg>\n    </span>\n  );\n}\n\nexport default Loading;\n","/**\n * A generic dropdown component.  It takes the children of the component\n * and hosts it in the component.  When the component is selected, it\n * drops-down the contentComponent and applies the contentProps.\n */\nimport { css } from \"goober\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport getString from \"../lib/get-string\";\nimport Cross from \"../select-panel/cross\";\nimport Arrow from \"./arrow\";\nimport Loading from \"./loading\";\n\ninterface IDropdownProps {\n  children?;\n  contentComponent;\n  contentProps: object;\n  isLoading?: boolean;\n  disabled?: boolean;\n  shouldToggleOnHover?: boolean;\n  labelledBy?: string;\n  onMenuToggle?;\n  ArrowRenderer?;\n  ClearSelectedIcon?;\n}\n\nconst PanelContainer = css({\n  position: \"absolute\",\n  zIndex: 1,\n  top: \"100%\",\n  width: \"100%\",\n  paddingTop: \"8px\",\n  \".panel-content\": {\n    maxHeight: \"300px\",\n    overflowY: \"auto\",\n    borderRadius: \"var(--rmsc-radius)\",\n    background: \"var(--rmsc-bg)\",\n    boxShadow: \"0 0 0 1px rgba(0, 0, 0, 0.1), 0 4px 11px rgba(0, 0, 0, 0.1)\",\n  },\n});\n\nconst DropdownContainer = css({\n  position: \"relative\",\n  outline: 0,\n  backgroundColor: \"var(--rmsc-bg)\",\n  border: \"1px solid var(--rmsc-border)\",\n  borderRadius: \"var(--rmsc-radius)\",\n  \"&:focus-within\": {\n    boxShadow: \"var(--rmsc-main) 0 0 0 1px\",\n    borderColor: \"var(--rmsc-main)\",\n  },\n});\n\nconst DropdownHeading = css({\n  position: \"relative\",\n  padding: \"0 var(--rmsc-p)\",\n  display: \"flex\",\n  alignItems: \"center\",\n  width: \"100%\",\n  height: \"var(--rmsc-h)\",\n  cursor: \"default\",\n  outline: 0,\n  \".dropdown-heading-value\": {\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n    flex: 1,\n  },\n});\n\nconst ClearSelectedButton = css({\n  cursor: \"pointer\",\n  background: \"none\",\n  border: 0,\n  padding: 0,\n});\n\nconst Dropdown = ({\n  children,\n  contentComponent: ContentComponent,\n  contentProps,\n  isLoading,\n  disabled,\n  shouldToggleOnHover,\n  labelledBy,\n  onMenuToggle,\n  ArrowRenderer,\n  ClearSelectedIcon,\n}: IDropdownProps) => {\n  const [expanded, setExpanded] = useState(false);\n  const [hasFocus, setHasFocus] = useState(false);\n  const FinalArrow = ArrowRenderer || Arrow;\n\n  const wrapper: any = useRef();\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    onMenuToggle && onMenuToggle(expanded);\n  }, [expanded]);\n\n  const handleKeyDown = (e) => {\n    switch (e.which) {\n      case 27: // Escape\n      case 38: // Up Arrow\n        setExpanded(false);\n        wrapper?.current?.focus();\n        break;\n      case 32: // Space\n      case 13: // Enter Key\n      case 40: // Down Arrow\n        setExpanded(true);\n        break;\n      default:\n        return;\n    }\n    e.preventDefault();\n  };\n\n  const handleHover = (iexpanded: boolean) => {\n    shouldToggleOnHover && setExpanded(iexpanded);\n  };\n\n  const handleFocus = () => !hasFocus && setHasFocus(true);\n\n  const handleBlur = (e) => {\n    if (!e.currentTarget.contains(e.relatedTarget)) {\n      setHasFocus(false);\n      setExpanded(false);\n    }\n  };\n\n  const handleMouseEnter = () => handleHover(true);\n\n  const handleMouseLeave = () => handleHover(false);\n\n  const toggleExpanded = () =>\n    setExpanded(isLoading || disabled ? false : !expanded);\n\n  const handleClearSelected = (e) => {\n    e.stopPropagation();\n    contentProps[\"onChange\"]([]);\n  };\n\n  return (\n    <div\n      tabIndex={0}\n      className={`${DropdownContainer} dropdown-container`}\n      aria-labelledby={labelledBy}\n      aria-expanded={expanded}\n      aria-readonly={true}\n      aria-disabled={disabled}\n      ref={wrapper}\n      onKeyDown={handleKeyDown}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <div\n        className={`${DropdownHeading} dropdown-heading`}\n        onClick={toggleExpanded}\n      >\n        <div className=\"dropdown-heading-value\">{children}</div>\n        {isLoading && <Loading />}\n        {contentProps[\"value\"].length > 0 && (\n          <button\n            type=\"button\"\n            className={`${ClearSelectedButton} clear-selected-button`}\n            onClick={handleClearSelected}\n            aria-label={getString(\n              \"clearSelected\",\n              contentProps[\"overrideStrings\"]\n            )}\n          >\n            {ClearSelectedIcon || <Cross />}\n          </button>\n        )}\n        <FinalArrow expanded={expanded} />\n      </div>\n      {expanded && (\n        <div className={`${PanelContainer} dropdown-content`}>\n          <div className=\"panel-content\">\n            <ContentComponent {...contentProps} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import React from \"react\";\n\nimport getString from \"../lib/get-string\";\n\nconst DropdownHeader = ({ value, options, valueRenderer, overrideStrings }) => {\n  const noneSelected = value.length === 0;\n  const allSelected = value.length === options.length;\n  const customText = valueRenderer && valueRenderer(value, options);\n\n  const getSelectedText = () => value.map((s) => s.label).join(\", \");\n\n  return noneSelected ? (\n    <span className=\"gray\">\n      {customText || getString(\"selectSomeItems\", overrideStrings)}\n    </span>\n  ) : (\n    <span>\n      {customText ||\n        (allSelected\n          ? getString(\"allItemsAreSelected\", overrideStrings)\n          : getSelectedText())}\n    </span>\n  );\n};\n\nexport default DropdownHeader;\n","import { css } from \"goober\";\nimport React from \"react\";\n\nimport { ISelectProps } from \"../lib/interfaces\";\nimport SelectPanel from \"../select-panel\";\nimport Dropdown from \"./dropdown\";\nimport DropdownHeader from \"./header\";\n\nconst MultiSelectBox = css({\n  \"--rmscMain\": \"#4285f4\",\n  \"--rmscHover\": \"#f1f3f5\",\n  \"--rmscSelected\": \"#e2e6ea\",\n  \"--rmscBorder\": \"#ccc\",\n  \"--rmscGray\": \"#aaa\",\n  \"--rmscBg\": \"#fff\",\n  \"--rmscP\": \"10px\",\n  \"--rmscRadius\": \"4px\",\n  \"--rmscH\": \"38px\",\n\n  \"*\": {\n    boxSizing: \"border-box\",\n    transition: \"all 0.2s ease\",\n  },\n  \".gray\": {\n    color: \"var(--rmsc-gray)\",\n  },\n});\n\nconst MultiSelect = ({\n  focusSearchOnOpen = true,\n  hasSelectAll = true,\n  shouldToggleOnHover,\n  className = \"multi-select\",\n  options,\n  value,\n  valueRenderer,\n  overrideStrings,\n  onChange,\n  disabled,\n  ItemRenderer,\n  ArrowRenderer,\n  selectAllLabel,\n  isLoading,\n  disableSearch,\n  filterOptions,\n  labelledBy,\n  onMenuToggle,\n  ClearIcon,\n  debounceDuration = 300,\n  ClearSelectedIcon,\n}: ISelectProps) => {\n  const nvalue = value || [];\n  return (\n    <div className={`${MultiSelectBox} ${className}`}>\n      <Dropdown\n        isLoading={isLoading}\n        contentComponent={SelectPanel}\n        shouldToggleOnHover={shouldToggleOnHover}\n        contentProps={{\n          ItemRenderer,\n          options,\n          value: nvalue,\n          hasSelectAll,\n          selectAllLabel,\n          onChange,\n          disabled,\n          disableSearch,\n          focusSearchOnOpen,\n          filterOptions,\n          overrideStrings,\n          ClearIcon,\n          debounceDuration,\n        }}\n        disabled={disabled}\n        labelledBy={labelledBy}\n        onMenuToggle={onMenuToggle}\n        ArrowRenderer={ArrowRenderer}\n        ClearSelectedIcon={ClearSelectedIcon}\n      >\n        <DropdownHeader\n          value={nvalue}\n          options={options}\n          valueRenderer={valueRenderer}\n          overrideStrings={overrideStrings}\n        />\n      </Dropdown>\n    </div>\n  );\n};\n\nexport default MultiSelect;\n"]},"metadata":{},"sourceType":"module"}