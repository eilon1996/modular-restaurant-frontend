{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nexport const Dishes = (state = {\n  isLoading: true,\n  errmess: null,\n  dishes: []\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_DISHES:\n      return { ...state,\n        isLoading: false,\n        errmess: null,\n        dishes: action.payload\n      };\n\n    case ActionTypes.DISHES_LOADING:\n      // returning a new state (not chaning it) with the values given\n      return { ...state,\n        isLoading: true,\n        errmess: null,\n        dishes: []\n      };\n\n    case ActionTypes.DISHES_FAILED:\n      alert(\"dishes.js- DISHES_FI\"); //return {...state, isLoading:false, errmess: { type: ActionTypes.DISHES_FAILED, payload: \"errmess\"}, dishes: []}\n\n      return { ...state,\n        isLoading: false,\n        errmess: \"action.payload\",\n        dishes: []\n      };\n    // return {...state, isLoading:false, errmess: action.payload, dishes: []}\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion2/src/redux/dishes.js"],"names":["ActionTypes","Dishes","state","isLoading","errmess","dishes","action","type","ADD_DISHES","payload","DISHES_LOADING","DISHES_FAILED","alert"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,KAAK,GAAG;AACHC,EAAAA,SAAS,EAAC,IADP;AAEHC,EAAAA,OAAO,EAAE,IAFN;AAGHC,EAAAA,MAAM,EAAE;AAHL,CAAT,EAIaC,MAJb,KAIwB;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACQ,SAAKP,WAAW,CAACQ,UAAjB;AACI,aAAO,EAAC,GAAGN,KAAJ;AAAWC,QAAAA,SAAS,EAAC,KAArB;AAA4BC,QAAAA,OAAO,EAAC,IAApC;AAA0CC,QAAAA,MAAM,EAAEC,MAAM,CAACG;AAAzD,OAAP;;AAEJ,SAAKT,WAAW,CAACU,cAAjB;AACI;AACA,aAAO,EAAC,GAAGR,KAAJ;AAAWC,QAAAA,SAAS,EAAC,IAArB;AAA2BC,QAAAA,OAAO,EAAC,IAAnC;AAAyCC,QAAAA,MAAM,EAAC;AAAhD,OAAP;;AAEJ,SAAKL,WAAW,CAACW,aAAjB;AACIC,MAAAA,KAAK,CAAC,sBAAD,CAAL,CADJ,CAEI;;AACA,aAAO,EAAC,GAAGV,KAAJ;AAAWC,QAAAA,SAAS,EAAC,KAArB;AAA4BC,QAAAA,OAAO,EAAE,gBAArC;AAAuDC,QAAAA,MAAM,EAAE;AAA/D,OAAP;AACD;;AAKH;AACI,aAAOH,KAAP;AAlBZ;AAoBH,CAzBM","sourcesContent":["import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n                            isLoading:true, \n                            errmess: null,\n                            dishes: []\n                                }, action) => {\n    switch (action.type) {\n            case ActionTypes.ADD_DISHES:\n                return {...state, isLoading:false, errmess:null, dishes: action.payload}\n            \n            case ActionTypes.DISHES_LOADING:\n                // returning a new state (not chaning it) with the values given\n                return {...state, isLoading:true, errmess:null, dishes:[]}\n\n            case ActionTypes.DISHES_FAILED:\n                alert(\"dishes.js- DISHES_FI\");\n                //return {...state, isLoading:false, errmess: { type: ActionTypes.DISHES_FAILED, payload: \"errmess\"}, dishes: []}\n                return {...state, isLoading:false, errmess: \"action.payload\", dishes: []}\n               // return {...state, isLoading:false, errmess: action.payload, dishes: []}\n\n                \n\n          \n            default:\n                return state;\n      }\n};"]},"metadata":{},"sourceType":"module"}