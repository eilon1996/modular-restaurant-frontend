{"ast":null,"code":"var _jsxFileName = \"/home/eilon/programing/full-stack/confusion-new/confusion/src/component/Menu.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardImg, CardImgOverlay, Breadcrumb, BreadcrumbItem, Collapse, CardBody, CardText } from 'reactstrap';\nimport MultiSelect from \"react-multi-select-component\";\nimport { Link } from 'react-router-dom';\nimport Loading from './Loading';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { putContent } from '../redux/ActionCreators';\nimport UploadS3 from './UploadS3';\nimport '../style-css/menu.css';\n\nconst Menu = props => {\n  const {\n    myContent,\n    isLoading\n  } = useSelector(store => store.myContent);\n  const [render, setRender] = useState(0);\n  const dispatch = useDispatch();\n\n  const AddDish = () => {\n    const [showForm, setShowForm] = useState(false);\n    const [title, setTitle] = useState();\n    const [selected, setSelected] = useState([]);\n    const [description, setDescription] = useState();\n    const [imgUrl, setImgUrl] = useState();\n    useEffect(() => {\n      console.log(\"useEffect, \", imgUrl);\n    }, [imgUrl, setImgUrl]);\n    const options = [{\n      label: \"Hot ðŸŒ¶\",\n      value: \"Hot ðŸŒ¶\"\n    }, {\n      label: \"Vegan ðŸŒ±\",\n      value: \"Vegan ðŸŒ±\"\n    }];\n\n    function handleSubmit(event) {\n      const amount = myContent.dishes.length;\n      let newDish = JSON.parse(JSON.stringify(myContent.dishes[amount - 1]));\n      newDish.title.text = title;\n      newDish.label = selected.map(label => label.label).join();\n      newDish.description.text = description;\n      newDish.id = amount;\n      newDish.comments = null;\n      newDish.image = imgUrl;\n      myContent.dishes[amount] = newDish;\n      setShowForm(false);\n      dispatch(putContent(myContent));\n      setTitle(\"\");\n      setSelected([]);\n      setDescription(\"\");\n      setRender(render + 1);\n      event.preventDefault();\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      style: {\n        padding: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      style: {\n        display: showForm ? \"none\" : \"block\"\n      },\n      onClick: () => setShowForm(!showForm),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \"add dish\"), /*#__PURE__*/React.createElement(Collapse, {\n      isOpen: showForm,\n      navbar: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: event => handleSubmit(event),\n      className: \"addDish-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: title,\n      onChange: event => setTitle(event.target.value),\n      name: \"title\",\n      placeholder: \"dish name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(UploadS3, {\n      type: \"dishes\",\n      itemId: Object.keys(myContent.dishes).length,\n      contentId: myContent.id,\n      imgUrl: imgUrl,\n      setImgUrl: setImgUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 37\n      }\n    }, selected && selected.length === 2 ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 82\n      }\n    }, \"Hot \\uD83C\\uDF36 & Vegan \\uD83C\\uDF31\") : null), /*#__PURE__*/React.createElement(MultiSelect, {\n      options: options,\n      value: selected,\n      onChange: event => setSelected(Object.values(event)),\n      labelledBy: \"Select\",\n      selectedValues: selected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      value: description,\n      onChange: event => setDescription(event.target.value),\n      name: \"description\",\n      placeholder: \"dish description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-light\",\n      type: \"button\",\n      onClick: () => setShowForm(!showForm),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 33\n      }\n    }, \"cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }\n    }, \"add\"))))));\n  };\n\n  function deleteDish(id) {\n    let ans = window.confirm(myContent.dishes[id].title.text + \" is going to be deleted\");\n    if (ans === false) return; // do nothing\n\n    let newDishes = [];\n\n    for (let i = 0; i < id; i++) {\n      newDishes.push(myContent.dishes[i]);\n    }\n\n    for (let i = id; i < myContent.dishes.length - 1; i++) {\n      myContent.dishes[i + 1].id = i;\n      newDishes.push(myContent.dishes[i + 1]);\n    }\n\n    myContent.dishes = newDishes;\n    dispatch(putContent(myContent));\n    setRender(render + 1);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(BreadcrumbItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 37\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(BreadcrumbItem, {\n    active: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, \"Menu\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, \"menu\"), \" \", /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 35\n    }\n  }))), isLoading || myContent === null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-md-5 m-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 59\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-md-5 m-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 59\n    }\n  }), \" \")) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, myContent.dishes.map(dish => /*#__PURE__*/React.createElement(Card, {\n    className: \"col-6 col-md-4 menu-card\",\n    key: dish.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/menu/${dish.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardImg, {\n    width: \"100%\",\n    src: dish.image,\n    alt: dish.title.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(CardImgOverlay, {\n    className: \"menu-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    href: `/menu/${dish.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"black\",\n      fontFamily: dish.title.fontFamily,\n      fontSize: dish.title.fontSize\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 66\n    }\n  }, dish.title.text))), /*#__PURE__*/React.createElement(CardImgOverlay, {\n    className: \"menu-overlay-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \" menu-delete-button btn btn-default\",\n    onClick: () => deleteDish(dish.id),\n    style: {\n      marginLeft: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 156\n    }\n  }))))), /*#__PURE__*/React.createElement(AddDish, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default Menu;","map":{"version":3,"sources":["/home/eilon/programing/full-stack/confusion-new/confusion/src/component/Menu.js"],"names":["React","useState","useEffect","Card","CardImg","CardImgOverlay","Breadcrumb","BreadcrumbItem","Collapse","CardBody","CardText","MultiSelect","Link","Loading","useSelector","useDispatch","putContent","UploadS3","Menu","props","myContent","isLoading","store","render","setRender","dispatch","AddDish","showForm","setShowForm","title","setTitle","selected","setSelected","description","setDescription","imgUrl","setImgUrl","console","log","options","label","value","handleSubmit","event","amount","dishes","length","newDish","JSON","parse","stringify","text","map","join","id","comments","image","preventDefault","padding","display","target","Object","keys","values","deleteDish","ans","window","confirm","newDishes","i","push","dish","color","fontFamily","fontSize","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, CardImg, CardImgOverlay, Breadcrumb, BreadcrumbItem, Collapse, CardBody, CardText } from 'reactstrap';\r\nimport MultiSelect from \"react-multi-select-component\";\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from './Loading'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { putContent } from '../redux/ActionCreators';\r\nimport UploadS3 from './UploadS3';\r\n\r\nimport '../style-css/menu.css';\r\n\r\nconst Menu = (props) => {\r\n\r\n    const { myContent, isLoading } = useSelector(store => store.myContent);\r\n    const [render, setRender] = useState(0);\r\n    const dispatch = useDispatch()\r\n\r\n    const AddDish = () => {\r\n\r\n        const [showForm, setShowForm] = useState(false);\r\n        const [title, setTitle] = useState();\r\n        const [selected, setSelected] = useState([]);\r\n        const [description, setDescription] = useState();\r\n        const [imgUrl, setImgUrl] = useState();\r\n\r\n        useEffect(() => {\r\n            console.log(\"useEffect, \", imgUrl);\r\n        }, [imgUrl, setImgUrl])\r\n\r\n        const options = [\r\n            { label: \"Hot ðŸŒ¶\", value: \"Hot ðŸŒ¶\" },\r\n            { label: \"Vegan ðŸŒ±\", value: \"Vegan ðŸŒ±\" }\r\n        ]\r\n\r\n        function handleSubmit(event) {\r\n            const amount = myContent.dishes.length;\r\n            let newDish = JSON.parse(JSON.stringify(myContent.dishes[amount - 1]));\r\n\r\n            newDish.title.text = title;\r\n            newDish.label = selected.map(label => label.label).join();\r\n            newDish.description.text = description;\r\n            newDish.id = amount;\r\n            newDish.comments = null;\r\n            newDish.image = imgUrl;\r\n            myContent.dishes[amount] = newDish;\r\n            setShowForm(false);\r\n            dispatch(putContent(myContent));\r\n            setTitle(\"\");\r\n            setSelected([]);\r\n            setDescription(\"\");\r\n            setRender(render + 1);\r\n            event.preventDefault()\r\n        }\r\n\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\" style={{ padding: \"0px\" }} >\r\n                <button className=\"btn btn-primary\" style={{ display: showForm ? \"none\" : \"block\" }} onClick={() => setShowForm(!showForm)}>add dish</button>\r\n\r\n                <Collapse isOpen={showForm} navbar>\r\n                    <Card>\r\n                        <CardBody>\r\n                            <form onSubmit={(event) => handleSubmit(event)} className=\"addDish-form\">\r\n                                <input value={title} onChange={(event) => setTitle(event.target.value)} name=\"title\" placeholder=\"dish name\" />\r\n                                <UploadS3 type={\"dishes\"} itemId={Object.keys(myContent.dishes).length} contentId={myContent.id} imgUrl={imgUrl} setImgUrl={setImgUrl} />\r\n                                <CardText>\r\n                                    <span>{(selected && selected.length === 2) ? <span>Hot ðŸŒ¶ &amp; Vegan ðŸŒ±</span> : null}</span>\r\n                                    <MultiSelect\r\n                                        options={options}\r\n                                        value={selected}\r\n                                        onChange={(event) => setSelected(Object.values(event))}\r\n                                        labelledBy={\"Select\"}\r\n                                        selectedValues={selected}\r\n                                    />\r\n                                    <textarea value={description} onChange={(event) => setDescription(event.target.value)} name=\"description\" placeholder=\"dish description\" />\r\n                                </CardText>\r\n                                <button className=\"btn btn-light\" type=\"button\" onClick={() => setShowForm(!showForm)}>cancel</button>\r\n                                <button className=\"btn btn-primary\" type=\"submit\">add</button>\r\n                            </form>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Collapse>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function deleteDish(id) {\r\n        let ans = window.confirm(myContent.dishes[id].title.text + \" is going to be deleted\");\r\n        if (ans === false) return; // do nothing\r\n\r\n        let newDishes = [];\r\n        for (let i = 0; i < id; i++) {\r\n            newDishes.push(myContent.dishes[i])\r\n        }\r\n        for (let i = id; i < myContent.dishes.length - 1; i++) {\r\n            myContent.dishes[i + 1].id = i;\r\n            newDishes.push(myContent.dishes[i + 1])\r\n        }\r\n        myContent.dishes = newDishes\r\n        dispatch(putContent(myContent));\r\n        setRender(render + 1);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>menu</h3> <hr />\r\n                </div>\r\n            </div>\r\n            {(isLoading || myContent === null) ?\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\"> <Loading /> </div>\r\n                    <div className=\"col-12 col-md-5 m-1\"> <Loading /> </div>\r\n                </div>\r\n                :\r\n                <div className=\"row\">\r\n                    {myContent.dishes.map((dish) => (\r\n                        <Card className=\"col-6 col-md-4 menu-card\" key={dish.id}>\r\n                            <Link to={`/menu/${dish.id}`}>\r\n                                <CardImg width=\"100%\" src={dish.image} alt={dish.title.text} />\r\n                            </Link>\r\n                            <CardImgOverlay className=\"menu-overlay\">\r\n                                <Link href={`/menu/${dish.id}`}> <span style={{ color: \"black\", fontFamily: dish.title.fontFamily, fontSize: dish.title.fontSize }}>{dish.title.text}</span></Link>\r\n                            </CardImgOverlay>\r\n                            <CardImgOverlay  className=\"menu-overlay-button\">\r\n                                <button className=\" menu-delete-button btn btn-default\" onClick={() => deleteDish(dish.id)} style={{ marginLeft: \"auto\" }}><span className=\"fa fa-times\"></span></button>\r\n                            </CardImgOverlay>\r\n                        </Card>\r\n                    ))}\r\n                    <AddDish />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Menu;"]},"metadata":{},"sourceType":"module"}