{"ast":null,"code":"import * as ActyonTypes from './ActionTypes';\nexport const Leaders = (state = {\n  isLoading: true,\n  errMess: null,\n  dishes: []\n}, action) => {\n  switch (action.type) {\n    case ActyonTypes.ADD_LEADERS:\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        leaders: action.payload\n      };\n\n    case ActyonTypes.LEADERS_LOADING:\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        leaders: []\n      };\n\n    case ActyonTypes.LEADERS_FAILED:\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload,\n        leaders: []\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion2/src/redux/leaders.js"],"names":["ActyonTypes","Leaders","state","isLoading","errMess","dishes","action","type","ADD_LEADERS","leaders","payload","LEADERS_LOADING","LEADERS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG;AACxBC,EAAAA,SAAS,EAAE,IADa;AAExBC,EAAAA,OAAO,EAAE,IAFe;AAGxBC,EAAAA,MAAM,EAAE;AAHgB,CAAT,EAIhBC,MAJgB,KAIL;AACd,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,WAAW,CAACQ,WAAjB;AACI,aAAO,EAAC,GAAGN,KAAJ;AAAWC,QAAAA,SAAS,EAAE,KAAtB;AAA6BC,QAAAA,OAAO,EAAE,IAAtC;AAA4CK,QAAAA,OAAO,EAAEH,MAAM,CAACI;AAA5D,OAAP;;AACJ,SAAKV,WAAW,CAACW,eAAjB;AACI,aAAO,EAAC,GAAGT,KAAJ;AAAWC,QAAAA,SAAS,EAAE,IAAtB;AAA4BC,QAAAA,OAAO,EAAE,IAArC;AAA2CK,QAAAA,OAAO,EAAE;AAApD,OAAP;;AACJ,SAAKT,WAAW,CAACY,cAAjB;AACI,aAAO,EAAC,GAAGV,KAAJ;AAAWC,QAAAA,SAAS,EAAE,KAAtB;AAA6BC,QAAAA,OAAO,EAAEE,MAAM,CAACI,OAA7C;AAAsDD,QAAAA,OAAO,EAAE;AAA/D,OAAP;;AACJ;AACI,aAAOP,KAAP;AARR;AAUH,CAfM","sourcesContent":["import * as ActyonTypes from './ActionTypes';\n\nexport const Leaders = (state = {\n        isLoading: true,\n        errMess: null,\n        dishes: []\n    }, action) => {\n    switch (action.type) {\n        case ActyonTypes.ADD_LEADERS:\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\n        case ActyonTypes.LEADERS_LOADING:\n            return {...state, isLoading: true, errMess: null, leaders: []};\n        case ActyonTypes.LEADERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, leaders: []};\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}