{"ast":null,"code":"var _jsxFileName = \"/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/src/component/EditBoxComponent.js\";\nimport React, { useState } from 'react';\nimport Loading from './LoadingComponent';\n\nconst EditBox = props => {\n  const [text, setText] = useState(null);\n  const [edit, setEdit] = useState(false);\n  var placeHolder = \"\";\n  var input = null;\n  var fontSize = \"20px\"; //props.field   head/dish/\n  //props.id      0/1/2..\n  //props.type    title/description\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, \"edit box\");\n\n  if (props.myContent === null || props.myContent === undefined) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }\n    });\n  }\n\n  setText(props.object.text);\n  fontSize = props.object.fontSize;\n  placeHolder = props.field + \" \" + props.type;\n  /*\n  setText(props.myContent[props.field][props.id][props.type].text);\n  fontSize = props.myContent[props.field][props.id][props.type].fontSize;\n  placeHolder=props.field + \" \" + props.type;\n  */\n\n  if (props.type === \"title\") console.log(\"EditBox type=title\"); //input = <input style={{fontSize:fontSize}} type={props.type} onChange={(event) => handleChange(event)} placeholder={placeHolder}/>\n  else console.log(\"EditBox type=description\"); //input = <textarea style={{fontSize:fontSize}} type={props.type} onChange={(event) => handleChange(event)} placeholder={placeHolder}/>\n\n  function handleChange(event) {\n    console.log(\"EditBox: event.value: \", event.target.value);\n    setText(event.target.value);\n    console.log(\"EditBox: text: \", text);\n  }\n\n  function handleSubmit(event) {\n    props.myContent[props.field][props.id][props.type].text = text;\n    props.putContent(props.myContent);\n    setEdit(false);\n    event.preventDefault();\n  }\n\n  function handleOnClick() {\n    setEdit(true);\n  }\n\n  function handleFontSize(amount) {\n    const size = parseInt(fontSize.slice(0, fontSize.length - 2));\n    if (size < 8) alert(\"this is the minimum size\");else if (size > 60) alert(\"this is the maximum size\");else {\n      const new_size = String(size + amount) + \"px\";\n      props.myContent[props.field][props.id][props.type].fontSize = new_size;\n      props.putContent(props.myContent);\n    }\n  }\n\n  if (edit) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        padding: \"10px\",\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: event => handleSubmit(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, input, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"edit-save btn btn-secondary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, \"save\"))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        padding: \"10px\",\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      style: {\n        fontSize: fontSize,\n        mb: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, text), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"edit-save btn btn-secondary\",\n      onClick: () => handleOnClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    }, \"edit\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"edit-save-arrow btn btn-secondary\",\n      onClick: () => handleFontSize(+2),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-angle-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"edit-save-arrow btn btn-secondary\",\n      onClick: () => handleFontSize(-2),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-angle-down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    }))));\n  }\n};\n\nexport default EditBox;","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/src/component/EditBoxComponent.js"],"names":["React","useState","Loading","EditBox","props","text","setText","edit","setEdit","placeHolder","input","fontSize","myContent","undefined","object","field","type","console","log","handleChange","event","target","value","handleSubmit","id","putContent","preventDefault","handleOnClick","handleFontSize","amount","size","parseInt","slice","length","alert","new_size","String","padding","margin","mb"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Loading  from './LoadingComponent'\n\n\nconst EditBox = (props) => {\n\n    const [text, setText] = useState(null);\n    const [edit, setEdit] = useState(false);\n\n    var placeHolder=\"\";  \n    var input = null;\n    var fontSize = \"20px\"    \n\n    //props.field   head/dish/\n    //props.id      0/1/2..\n    //props.type    title/description\n\n    return<div>edit box</div>\n    \n    if(props.myContent === null || props.myContent === undefined){\n        return <Loading/>\n    } \n    \n    setText(props.object.text);\n    fontSize = props.object.fontSize;\n    placeHolder=props.field + \" \" + props.type;\n    /*\n    setText(props.myContent[props.field][props.id][props.type].text);\n    fontSize = props.myContent[props.field][props.id][props.type].fontSize;\n    placeHolder=props.field + \" \" + props.type;\n    */\n\n\n    if(props.type === \"title\")\n        console.log(\"EditBox type=title\");\n        //input = <input style={{fontSize:fontSize}} type={props.type} onChange={(event) => handleChange(event)} placeholder={placeHolder}/>\n    \n    else \n        console.log(\"EditBox type=description\");\n        //input = <textarea style={{fontSize:fontSize}} type={props.type} onChange={(event) => handleChange(event)} placeholder={placeHolder}/>\n\n    \n    \n    function handleChange(event){        \n        console.log(\"EditBox: event.value: \", event.target.value);\n        setText(event.target.value);\n        console.log(\"EditBox: text: \", text);\n    }\n    \n  \n    function handleSubmit(event){\n        props.myContent[props.field][props.id][props.type].text = text;\n        props.putContent(props.myContent);\n        setEdit(false)\n        event.preventDefault();\n    }\n\n\n    function handleOnClick(){\n        setEdit(true);\n    }\n\n\n    function handleFontSize(amount){\n        const size = parseInt(fontSize.slice(0, fontSize.length-2))\n        if(size < 8)\n            alert(\"this is the minimum size\");\n        else if(size > 60)\n            alert(\"this is the maximum size\");\n        else{\n            const new_size = String(size + amount) + \"px\";\n            props.myContent[props.field][props.id][props.type].fontSize = new_size;\n            props.putContent(props.myContent);\n        }\n    }\n\n    \n    if(edit){\n        return(\n            <div className=\"row\"  style={{ padding: \"10px\", margin:\"0px\"}}>\n                <div  className=\"col-12\" >\n                    <form onSubmit={(event)=> handleSubmit(event)}>\n                        {input}\n                        <button className=\"edit-save btn btn-secondary\" type=\"submit\" >save</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n    else{\n\n        return(\n                <div className=\"row\"  style={{ padding: \"10px\", margin:\"0px\"}}>\n                        <div  className=\"col-12\" style={{fontSize:fontSize, mb:0}}>{text}</div> \n                        <div  className=\"col-12\" >\n                            <button className=\"edit-save btn btn-secondary\" \n                                  onClick={()=>handleOnClick()}>edit</button>\n                            <button className=\"edit-save-arrow btn btn-secondary\" \n                                  onClick={()=>handleFontSize(+2)}>\n                                <span className=\"fa fa-angle-up\"></span>\n                            </button>\n                            <button className=\"edit-save-arrow btn btn-secondary\" \n                                    onClick={()=>handleFontSize(-2)}>\n                                <span className=\"fa fa-angle-down\"></span>\n                            </button>\n                        </div>\n                </div>\n        );\n    }\n\n}\n\nexport default EditBox;\n"]},"metadata":{},"sourceType":"module"}