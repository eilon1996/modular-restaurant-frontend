{"ast":null,"code":"var _jsxFileName = \"/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/src/component/DishdetailComponent.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport Loading from './LoadingComponent';\nimport { baseUrl } from '../shared/externalUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\nimport EditBox from './EditBoxComponent';\nimport MultiSelect from \"react-multi-select-component\";\nimport Dropzone from 'react-dropzone';\n\nconst required = val => val && val.length;\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => !val || val.length >= len;\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false\n    }; // necessary for using \"this\" in the callback\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  handleSubmit(values) {\n    this.toggleModal();\n    this.props.postComment(this.props.id, values.rating, values.author, values.comment);\n    alert(\"current state is: \" + JSON.stringify(values));\n  }\n\n  render() {\n    const comments_text = comments => comments.map(comment => {\n      return /*#__PURE__*/React.createElement(Fade, {\n        in: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"list-unstyled\",\n        key: comment.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }\n      }, comment.comment, \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 47\n        }\n      }), \"--\", comment.author, \",\", new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: '2-digit'\n      }).format(new Date(Date.parse(comment.date)))))); //we use here in a script that translate date to readble date\n    });\n\n    const comments = this.props.comment;\n    const postComment = this.props.postComment;\n    const id = this.props.id;\n\n    const RenderComments = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, \"comments\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"list-gruop\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Stagger, {\n        in: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }\n      }, comments_text(comments))), /*#__PURE__*/React.createElement(CommentForm, {\n        id: id,\n        postComment: postComment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        outline: true,\n        onClick: this.toggleModal,\n        className: \"ml-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"fa fa-pencil fa-lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 33\n        }\n      }), \" Submit Comment\")), /*#__PURE__*/React.createElement(Modal, {\n        outline: true,\n        isOpen: this.state.isModalOpen,\n        toggle: this.toggleModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(ModalHeader, {\n        toggle: this.toggleModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }\n      }, \"Submit Comment\"), /*#__PURE__*/React.createElement(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(LocalForm, {\n        onSubmit: values => this.handleSubmit(values),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: {\n          size: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Control.select, {\n        model: \".rating\",\n        name: \"rating\",\n        value: this.props.rating,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 49\n        }\n      }, \"5\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 49\n        }\n      }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 49\n        }\n      }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 49\n        }\n      }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 49\n        }\n      }, \"1\")))), /*#__PURE__*/React.createElement(Row, {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"author\",\n        md: {\n          size: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 41\n        }\n      }, \"Your Name\"), /*#__PURE__*/React.createElement(Col, {\n        md: {\n          size: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Control.text, {\n        model: \".author\",\n        id: \"author\",\n        name: \"author\",\n        placeholder: \"Your Name\",\n        className: \"form-control\",\n        onChange: this.handleInputChange,\n        validators: {\n          required,\n          minLength: minLength(3),\n          maxLength: maxLength(15)\n        },\n        value: this.props.author,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(Errors, {\n        className: \"text-danger\",\n        model: \".author\",\n        show: \"touched\",\n        messages: {\n          required: 'Requierd ',\n          minLength: 'Must be greater than 2 characters ',\n          maxLength: 'Must be 15 characters or less '\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(Row, {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"comment\",\n        md: {\n          size: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 41\n        }\n      }, \"Comment\"), /*#__PURE__*/React.createElement(Col, {\n        md: {\n          size: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Control.textarea, {\n        model: \".comment\",\n        id: \"comment\",\n        name: \"comment\",\n        rows: \"6\",\n        className: \"form-control\",\n        value: this.props.comment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(Row, {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: {\n          size: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 45\n        }\n      }, \"Submit\"))))))));\n    };\n\n    return RenderComments;\n  }\n\n}\n\nclass DishDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setSelected = event => {\n      this.props.myContent[\"dishes\"][this.props.id][\"label\"] = Object.values(event).map(label => label.label).join();\n      this.props.putContent(this.props.myContent);\n    };\n\n    this.state = {\n      selected: null,\n      labels: \"\"\n    };\n    this.setSelected = this.setSelected.bind(this);\n  }\n\n  render() {\n    if (this.props.myContent !== null && this.state.selected === null) {\n      var value = [];\n      var l = \"\";\n\n      if (this.props.myContent[\"dishes\"][this.props.id][\"label\"].indexOf(\"Hot\") > -1) {\n        value.push({\n          label: \"Hot 🌶\",\n          value: \"Hot 🌶\"\n        });\n      }\n\n      if (this.props.myContent[\"dishes\"][this.props.id][\"label\"].indexOf(\"Vegan\") > -1) {\n        value.push({\n          label: \"Vegan 🌱\",\n          value: \"Vegan 🌱\"\n        });\n      }\n\n      if (value.length == 2) l = \"Vegan 🌱  Hot 🌶\";\n      this.setState({\n        selected: value,\n        labels: l\n      });\n    }\n\n    var options = [{\n      label: \"Hot 🌶\",\n      value: \"Hot 🌶\"\n    }, {\n      label: \"Vegan 🌱\",\n      value: \"Vegan 🌱\"\n    }];\n\n    if (this.props.isLoading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }\n      })));\n    }\n\n    try {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(BreadcrumbItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 41\n        }\n      }, \"Menu\")), /*#__PURE__*/React.createElement(BreadcrumbItem, {\n        active: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }\n      }, this.props.myContent.dishes[this.props.id].title.text)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(EditBox, {\n        type: \"dishes\",\n        field: \"title\",\n        id: this.props.id,\n        putContent: this.props.putContent,\n        myContent: this.props.myContent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12 col-md-5 m-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FadeTransform, {\n        in: true,\n        transformProps: {\n          exitTransform: 'scale(0.5) translateY(-50%)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CardImg, {\n        top: true,\n        src: this.props.myContent.dishes[this.props.id].image,\n        alt: this.props.myContent.dishes[this.props.id].title.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(CardText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 37\n        }\n      }, this.state.labels, /*#__PURE__*/React.createElement(MultiSelect, {\n        options: options,\n        value: this.state.selected,\n        onChange: event => this.setSelected(event),\n        labelledBy: \"Select\",\n        selectedValues: this.state.selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(EditBox, {\n        field: \"description\",\n        type: \"dishes\",\n        id: this.props.id,\n        putContent: this.props.putContent,\n        myContent: this.props.myContent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 41\n        }\n      })))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12 col-md-5 m-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(RenderComments, {\n        comments: this.props.comments,\n        postComment: this.props.postComment,\n        id: this.props.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 29\n        }\n      }))));\n    } catch (e) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }\n      }, this.props.errMess, e));\n    }\n  }\n\n}\n\nexport default DishDetail;","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/src/component/DishdetailComponent.js"],"names":["React","Component","Fragment","Card","CardImg","CardText","CardBody","CardTitle","Link","Breadcrumb","BreadcrumbItem","Button","Modal","ModalBody","ModalHeader","Label","Col","Row","Control","LocalForm","Errors","Loading","baseUrl","FadeTransform","Fade","Stagger","EditBox","MultiSelect","Dropzone","required","val","length","maxLength","len","minLength","CommentForm","constructor","props","state","isNavOpen","isModalOpen","handleSubmit","bind","toggleModal","setState","values","postComment","id","rating","author","comment","alert","JSON","stringify","render","comments_text","comments","map","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","RenderComments","size","handleInputChange","DishDetail","setSelected","event","myContent","Object","label","join","putContent","selected","labels","value","l","indexOf","push","options","isLoading","dishes","title","text","exitTransform","image","e","errMess"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Label, Col , Row } from 'reactstrap'\nimport { Control, LocalForm, Errors} from 'react-redux-form';\nimport Loading from './LoadingComponent';\nimport { baseUrl } from '../shared/externalUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\nimport EditBox from './EditBoxComponent';\nimport MultiSelect from \"react-multi-select-component\";\nimport Dropzone from 'react-dropzone';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => val => !(val) || (val.length <= len)\nconst minLength = (len) => val => !(val) || (val.length >= len)\n\n\n\nclass CommentForm extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n        // necessary for using \"this\" in the callback\n        \n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n     }\n\n    toggleModal() {\n        this.setState({ isModalOpen: !this.state.isModalOpen });\n    }\n\n\n    handleSubmit(values){\n        this.toggleModal();\n        this.props.postComment(this.props.id, values.rating, values.author, values.comment);\n        alert(\"current state is: \" + JSON.stringify(values));\n    }\n\n\n\n    render(){     \n\n        const comments_text = (comments) => comments.map((comment)=>{\n            return (\n    \n                <Fade in>\n                    <li className=\"list-unstyled\" key={comment.id}>\n                        <p>\n                            {comment.comment} <br/>\n                            --{comment.author},\n                            {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'})\n                                .format(new Date(Date.parse(comment.date)))}\n                        </p>\n                    </li>\n                </Fade>\n            );\n            //we use here in a script that translate date to readble date\n        });\n        const comments = this.props.comment;\n        const postComment = this.props.postComment;\n        const id = this.props.id;\n        const RenderComments = () => {\n        \n            return(\n                <div>\n                    <h4>comments</h4>\n                    <ul className=\"list-gruop\">\n                        <Stagger in>\n                            {comments_text(comments)}\n                        </Stagger>\n                    </ul>\n                    <CommentForm id={id} postComment={postComment} />\n                    \n                    <Fragment>\n                        <div className=\"row\">\n                            <Button outline onClick={this.toggleModal} className='ml-auto'>\n                                <span className='fa fa-pencil fa-lg'></span> Submit Comment\n                            </Button>\n                        </div>\n                        <Modal outline isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                            <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                            <ModalBody>\n        \n                                <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                                    \n                                    <Row className=\"form-group\">\n                                        <Col md={{ size: 12 }}>\n                                            <Control.select model=\".rating\" name=\"rating\"\n                                                value={this.props.rating}>\n                                                <option>5</option>\n                                                <option>4</option>\n                                                <option>3</option>\n                                                <option>2</option>\n                                                <option>1</option>\n                                            </Control.select>\n                                        </Col>\n                                    </Row>\n                                    <Row className=\"form-group\">\n                                        <Label htmlFor=\"author\" md={{ size: 12 }}>Your Name</Label>\n                                        <Col md={{ size: 12 }}>\n                                            <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Your Name\" \n                                                className=\"form-control\" onChange={this.handleInputChange}\n                                                validators={{required, minLength:minLength(3), maxLength:maxLength(15)}}\n                                                value={this.props.author}/>\n                                            <Errors className=\"text-danger\" model=\".author\"\n                                            show=\"touched\" \n                                            messages={{\n                                                    required: 'Requierd ',\n                                                    minLength: 'Must be greater than 2 characters ',\n                                                    maxLength: 'Must be 15 characters or less '\n                                            }}>\n                                            </Errors>\n                                        </Col>\n                                    </Row>\n                                    <Row className=\"form-group\">\n                                        <Label htmlFor=\"comment\" md={{ size: 12 }}>Comment</Label>\n                                        <Col md={{ size: 12 }}> \n                                            <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\n                                                rows=\"6\" className=\"form-control\"  value={this.props.comment}/>\n                                        </Col>\n                                    </Row>\n                                    <Row className=\"form-group\">\n                                        <Col md={{ size: 12 }}>\n                                            <Button type=\"submit\" color=\"primary\">\n                                                Submit\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </LocalForm>\n                            </ModalBody>\n                        </Modal>\n                    </Fragment>\n               \n                </div>\n            )\n        }\n\n        return RenderComments\n    }\n}\n\nclass DishDetail extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state={\n            selected:null,\n            labels:\"\"\n        }\n        \n        this.setSelected = this.setSelected.bind(this);\n    }\n\n    setSelected = (event) => {\n\n        this.props.myContent[\"dishes\"][this.props.id][\"label\"] = Object.values(event).map(label => label.label).join();\n        this.props.putContent(this.props.myContent);\n    }\n    render() {\n        if(this.props.myContent !== null && this.state.selected === null){\n            var value = []\n            var l = \"\";\n            if(this.props.myContent[\"dishes\"][this.props.id][\"label\"].indexOf(\"Hot\")>-1){\n                value.push({ label: \"Hot 🌶\", value: \"Hot 🌶\"});\n            }\n            if(this.props.myContent[\"dishes\"][this.props.id][\"label\"].indexOf(\"Vegan\") > -1){\n                value.push({ label: \"Vegan 🌱\", value: \"Vegan 🌱\"});\n            }\n            if(value.length == 2)\n                l = \"Vegan 🌱  Hot 🌶\";\n            this.setState({\n                selected:value,\n                labels:l\n            });\n        }\n        \n        var options = [\n            { label: \"Hot 🌶\", value: \"Hot 🌶\"},\n            { label: \"Vegan 🌱\", value: \"Vegan 🌱\"}\n        ]\n\n        if (this.props.isLoading){\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading/>\n                    </div>\n                </div>\n            );\n        }\n\n        try{\n            return(\n                <div className=\"container\">\n\n                    \n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{this.props.myContent.dishes[this.props.id].title.text}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                          <EditBox type=\"dishes\" field=\"title\" id={this.props.id} putContent ={this.props.putContent} myContent={this.props.myContent}/>\n                        <hr />\n                    </div>       \n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-5 m-1\">\n                            <FadeTransform in transformProps={{ exitTransform: 'scale(0.5) translateY(-50%)' }}>\n                            <Card>\n                                <CardImg top src={this.props.myContent.dishes[this.props.id].image} alt={this.props.myContent.dishes[this.props.id].title.text} />\n                                <CardBody>\n                                    <CardText>       \n                                    {this.state.labels}\n                                    <MultiSelect\n                                        options={options}\n                                        value={this.state.selected}\n                                        onChange={(event) => this.setSelected(event)}\n                                        labelledBy={\"Select\"}\n                                        selectedValues={this.state.selected}\n                                    />\n                                        <EditBox field=\"description\" type=\"dishes\" id={this.props.id} putContent ={this.props.putContent} myContent={this.props.myContent}/>\n                                    </CardText>\n                                </CardBody>\n                            </Card>\n                            </FadeTransform>\n                        </div>\n                        <div className=\"col-12 col-md-5 m-1\">\n                            <RenderComments comments={this.props.comments} \n                                postComment={this.props.postComment} \n                                id={this.props.id}/>\n                        </div>\n                    </div>         \n                </div>\n            );\n\n        }\n        catch (e){\n\n            return (\n                <div>\n                    <h4>{this.props.errMess}{e}</h4>\n                </div>\n            );\n        }\n    }\n}\n    \nexport default DishDetail;"]},"metadata":{},"sourceType":"module"}