{"ast":null,"code":"var _jsxFileName = \"/home/eilon/programing/full-stack/confusion-new/confusion/src/component/HeaderComponent.js\";\nimport React, { useState } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap'; // nav link auto maticly impliment the active component and a tag\n\nimport { NavLink } from 'react-router-dom';\nimport EditBox from './EditBoxComponent';\nimport { Tabs, Tab } from \"react-bootstrap\";\nimport { LogoUrl } from '../shared/externalUrl';\nimport { useForm } from 'react-hook-form';\nimport Loading from './LoadingComponent';\nimport { addMyContent } from '../redux/ActionCreators';\nimport ColorPicker from 'react-color-picker-wheel';\n\nconst Header = props => {\n  const [isNavOpen, setIsNavOpen] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalTab, setModalTab] = useState(\"login\");\n  const [loginUsername, setLoginUsername] = useState(\"\");\n  const [loginPassword, setLoginPassword] = useState(\"\");\n  const [signupUsername, setSignupUsername] = useState(\"\");\n  const [signupPassword, setSignupPassword] = useState(\"\");\n  const [signupRePassword, setSignupRePassword] = useState(\"\");\n  const [loginError, setLoginError] = useState(\"\");\n  const [signupError, setSignupError] = useState(\"\");\n  const [jumbotronColor, setJumbotronColor] = useState(null); // setup\n\n  const {\n    register,\n    errors\n  } = useForm();\n  console.log(\"HeaderComponent: render, myContent\", props.myContent); //  var jumbotronColor = \"\";\n\n  var navbarColor = \"\";\n\n  if (props.myContent === null || props.isLoading == true) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }\n    });\n  } else {\n    jumbotronColor = \"rgba(\" + props.myContent.color + \")\";\n    navbarColor = props.myContent.color.slice(0, 3).map(c => c / 2);\n    navbarColor.push(props.myContent.color[3]);\n    navbarColor = \"rgba(\" + navbarColor + \")\";\n  }\n\n  function handleLogin(event) {\n    console.log({\n      loginUsername,\n      loginPassword\n    });\n    var tmpError = \"\";\n    setLoginError(\"\");\n    const userContent = Object.values(props.content).filter(user => user.id === loginUsername)[0];\n\n    if (userContent) {\n      event.preventDefault();\n\n      if (userContent.password === loginPassword) {\n        props.fetchMyContent(loginUsername);\n        setIsModalOpen(!isModalOpen);\n      } else {\n        //wrong password\n        tmpError = \"wrong password or user name\";\n      }\n    } else {\n      //create new user?\n      event.preventDefault();\n      tmpError = \"user name not found\\nyou can easily creat new account in the sign up\";\n    }\n\n    if (tmpError !== \"\") {\n      setLoginError(tmpError);\n    }\n  }\n\n  function handleSignup(event) {\n    console.log({\n      signupUsername,\n      signupPassword,\n      signupRePassword\n    });\n    var tmpError = \"\";\n    setSignupError(\"\");\n\n    if (signupRePassword !== signupPassword) {\n      tmpError = \"passwords not match\\n\";\n    }\n\n    const userContent = Object.values(props.content).filter(user => user.id === signupUsername)[0];\n\n    if (userContent !== null && userContent !== undefined) {\n      tmpError += \"user name already exist\";\n    }\n\n    event.preventDefault();\n\n    if (tmpError !== \"\") {\n      setSignupError(tmpError);\n    } else {\n      props.myContent.id = signupUsername;\n      props.myContent.password = signupPassword;\n      props.signup(props.myContent); //intial user 0\n    }\n  }\n\n  var delay;\n  useEffect(() => {\n    clearTimeout(delay);\n    delay = setTimeout(() => {\n      alert(jumbotronColor);\n    }, 3000);\n  }, [jumbotronColor]);\n\n  function changeColor(c) {\n    initColor = c[\"hex\"];\n    var color = Object.values(c[\"rgb\"]);\n    color.push(1);\n    console.log(color);\n    setJumbotronColor(color);\n    props.myContent.color = color;\n    props.putContent(props.myContent);\n  }\n\n  function componentToHex(c) {\n    var hex = c.toString(16);\n    return hex.length == 1 ? \"0\" + hex : hex;\n  }\n\n  function rgbToHex(rgb) {\n    const hex = \"#\" + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n    return hex;\n  }\n\n  var initColor = rgbToHex(props.myContent.color);\n  /* replaced by the color picker \r\n      //               blue              green             yellow             orange            red             perpel            grey \r\n      const colors = [[9, 116, 230, 1], [0, 201 , 52, 1], [224, 254, 32, 1], [255, 127, 0, 1], [255, 0, 0, 1], [255, 13, 188, 1], [110, 110, 110, 1]]\r\n      const buttons = colors.map(color=> { return(\r\n          <button className=\"color-button btn active\" style={{backgroundColor:\"rgba(\"+color+\")\"}} onClick={() => changeColor(color)}></button>\r\n      )});\r\n  */\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    dark: true,\n    expand: \"md\",\n    style: {\n      backgroundColor: navbarColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(NavbarToggler, {\n    onClick: () => setIsNavOpen(!isNavOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(NavbarBrand, {\n    className: \"mr-auto\",\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: LogoUrl,\n    height: \"30\",\n    width: \"41\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Collapse, {\n    isOpen: isNavOpen,\n    navbar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    navbar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"nav-link ml-md-5 offset-2 offset-md-0\",\n    to: \"/home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa fa-home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 37\n    }\n  }), \" Home\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"nav-link offset-2 offset-md-0\",\n    to: \"/aboutus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa fa-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 37\n    }\n  }), \" About Us\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"nav-link offset-2 offset-md-0\",\n    to: \"/menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa fa-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 37\n    }\n  }), \" Menu\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"nav-link offset-2 offset-md-0\",\n    to: \"/contactus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa fa-address-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 37\n    }\n  }), \" Contact US\"))), /*#__PURE__*/React.createElement(Nav, {\n    className: \"ml-auto\",\n    navbar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    onClick: () => setIsModalOpen(!isModalOpen),\n    className: \"nav-link offset-2 offset-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa fa-sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 136\n    }\n  }), \" Login\")))))), /*#__PURE__*/React.createElement(Jumbotron, {\n    style: {\n      backgroundColor: jumbotronColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row row-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-10 col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(EditBox, {\n    path: props.myContent.id,\n    field: \"title\",\n    type: \"head\",\n    id: \"0\",\n    putContent: props.putContent,\n    myContent: props.myContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(EditBox, {\n    path: props.myContent.id,\n    field: \"description\",\n    type: \"head\",\n    id: \"0\",\n    putContent: props.putContent,\n    myContent: props.myContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-md-3 ml-md-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ColorPicker, {\n    onChange: color => changeColor(color),\n    size: 270,\n    initialColor: initColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 25\n    }\n  }))))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isModalOpen,\n    toggle: () => setIsModalOpen(!isModalOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    id: \"controlled-tab-example\",\n    activeKey: modalTab,\n    onSelect: k => setModalTab(k),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    eventKey: \"login\",\n    title: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    name: \"login\",\n    onSubmit: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-12 col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 33\n    }\n  }, \"user name\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"col-12 col-md-9\",\n    name: \"loginUsername\",\n    value: loginUsername,\n    onChange: event => setLoginUsername(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-12 col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 33\n    }\n  }, \"password\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"col-12 col-md-9\",\n    type: \"password\",\n    name: \"loginPassword\",\n    value: loginPassword,\n    onChange: event => setLoginPassword(event.target.value),\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 33\n    }\n  }), errors.exampleRequired && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 60\n    }\n  }, \"This field is required\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    name: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 33\n    }\n  }, \"login\"))), /*#__PURE__*/React.createElement(Tab, {\n    eventKey: \"signUp\",\n    title: \"sign up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    name: \"signup\",\n    onSubmit: handleSignup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-12 col-md-3\",\n    style: {\n      marginTop: \"4px\",\n      marginBottom: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 33\n    }\n  }, \"user name\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"col-12 col-md-9\",\n    style: {\n      marginTop: \"4px\",\n      marginBottom: \"8px\"\n    },\n    name: \"signupUsername\",\n    value: signupUsername,\n    onChange: event => setSignupUsername(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-12 col-md-3\",\n    style: {\n      marginTop: \"4px\",\n      marginBottom: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 33\n    }\n  }, \"password\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"col-12 col-md-9\",\n    style: {\n      marginTop: \"4px\",\n      marginBottom: \"8px\"\n    },\n    type: \"password\",\n    name: \"signupPassword\",\n    value: signupPassword,\n    onChange: event => setSignupPassword(event.target.value),\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-12 col-md-3\",\n    style: {\n      marginTop: \"4px\",\n      marginBottom: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 33\n    }\n  }, \"re-enter password\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"col-12 col-md-9\",\n    style: {\n      marginTop: \"4px\",\n      marginBottom: \"8px\"\n    },\n    type: \"password\",\n    name: \"signupRePassword\",\n    value: signupRePassword,\n    onChange: event => setSignupRePassword(event.target.value),\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 33\n    }\n  }), errors.exampleRequired && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 60\n    }\n  }, \"This field is required\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    name: \"submit2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 33\n    }\n  }, \"signup\")))))));\n};\n\nexport default Header;","map":{"version":3,"sources":["/home/eilon/programing/full-stack/confusion-new/confusion/src/component/HeaderComponent.js"],"names":["React","useState","Navbar","NavbarBrand","Nav","NavbarToggler","Collapse","NavItem","Jumbotron","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Input","Label","NavLink","EditBox","Tabs","Tab","LogoUrl","useForm","Loading","addMyContent","ColorPicker","Header","props","isNavOpen","setIsNavOpen","isModalOpen","setIsModalOpen","modalTab","setModalTab","loginUsername","setLoginUsername","loginPassword","setLoginPassword","signupUsername","setSignupUsername","signupPassword","setSignupPassword","signupRePassword","setSignupRePassword","loginError","setLoginError","signupError","setSignupError","jumbotronColor","setJumbotronColor","register","errors","console","log","myContent","navbarColor","isLoading","color","slice","map","c","push","handleLogin","event","tmpError","userContent","Object","values","content","filter","user","id","preventDefault","password","fetchMyContent","handleSignup","undefined","signup","delay","useEffect","clearTimeout","setTimeout","alert","changeColor","initColor","putContent","componentToHex","hex","toString","length","rgbToHex","rgb","backgroundColor","k","target","value","required","exampleRequired","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, {useState } from 'react';\r\nimport {Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n     Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label} from 'reactstrap'\r\n// nav link auto maticly impliment the active component and a tag\r\nimport {NavLink} from 'react-router-dom';\r\nimport EditBox from './EditBoxComponent';\r\nimport {Tabs, Tab} from \"react-bootstrap\" ;\r\nimport {LogoUrl} from '../shared/externalUrl'\r\nimport {useForm} from 'react-hook-form'\r\nimport Loading from './LoadingComponent'\r\nimport {addMyContent} from '../redux/ActionCreators'\r\n\r\nimport ColorPicker from 'react-color-picker-wheel';\r\n\r\nconst Header = (props) => {\r\n\r\n    const [isNavOpen, setIsNavOpen] = useState(false);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [modalTab, setModalTab] = useState(\"login\");\r\n\r\n    const [loginUsername, setLoginUsername] = useState(\"\");\r\n    const [loginPassword, setLoginPassword] = useState(\"\");\r\n    \r\n    const [signupUsername, setSignupUsername] = useState(\"\");\r\n    const [signupPassword, setSignupPassword] = useState(\"\");\r\n    const [signupRePassword, setSignupRePassword] = useState(\"\");\r\n\r\n    const [loginError, setLoginError] = useState(\"\");\r\n    const [signupError, setSignupError] = useState(\"\");\r\n\r\n    const [jumbotronColor, setJumbotronColor] = useState(null)\r\n\r\n\r\n    // setup\r\n    const {register, errors} = useForm();\r\n    console.log(\"HeaderComponent: render, myContent\", props.myContent)\r\n  //  var jumbotronColor = \"\";\r\n    var navbarColor = \"\";\r\n\r\n    if(props.myContent === null || props.isLoading == true){\r\n        return <Loading/>;\r\n    } else{\r\n\r\n        jumbotronColor = \"rgba(\"+props.myContent.color+\")\";\r\n        navbarColor = (props.myContent.color.slice(0,3).map(c => c/2));\r\n        navbarColor.push(props.myContent.color[3]);\r\n        navbarColor = \"rgba(\"+navbarColor+\")\";\r\n\r\n    }\r\n\r\n    function handleLogin(event){\r\n        console.log({loginUsername, loginPassword})\r\n        var tmpError = \"\";\r\n        setLoginError(\"\");\r\n    \r\n        const userContent = Object.values(props.content).filter((user) => user.id === loginUsername)[0];\r\n        if(userContent){\r\n            \r\n            event.preventDefault();\r\n            if(userContent.password === loginPassword){\r\n                props.fetchMyContent(loginUsername)\r\n                setIsModalOpen(!isModalOpen);\r\n            }\r\n            else{\r\n                //wrong password\r\n                tmpError = \"wrong password or user name\";\r\n            }\r\n        }\r\n        else{\r\n            //create new user?\r\n            event.preventDefault();\r\n            tmpError = \"user name not found\\nyou can easily creat new account in the sign up\";\r\n        }\r\n    \r\n        if(tmpError !== \"\"){\r\n            setLoginError(tmpError);\r\n        }\r\n    \r\n    }\r\n\r\n    function handleSignup(event){\r\n        console.log({signupUsername, signupPassword, signupRePassword})\r\n        var tmpError = \"\";\r\n        setSignupError(\"\");\r\n        \r\n        if(signupRePassword !== signupPassword){\r\n            tmpError = \"passwords not match\\n\";\r\n        }\r\n        const userContent = Object.values(props.content).filter((user) => user.id === signupUsername)[0];\r\n        if(userContent !== null && userContent !== undefined){\r\n            tmpError += \"user name already exist\";\r\n        }\r\n        \r\n        event.preventDefault();\r\n        if(tmpError !== \"\"){\r\n            setSignupError(tmpError);\r\n        }\r\n        else{\r\n            props.myContent.id = signupUsername;\r\n            props.myContent.password = signupPassword;\r\n            props.signup(props.myContent)\r\n\r\n\r\n            //intial user 0\r\n        }   \r\n    }\r\n\r\n    var delay;\r\n    useEffect(() => {\r\n        clearTimeout(delay)\r\n        \r\n        delay = setTimeout(() => {\r\n        alert(jumbotronColor)\r\n        }, 3000)\r\n\r\n    }, [jumbotronColor])\r\n\r\n    function changeColor(c) {\r\n        initColor = c[\"hex\"];\r\n        var color = Object.values(c[\"rgb\"]);\r\n        color.push(1);\r\n        console.log(color);  \r\n        setJumbotronColor(color);\r\n        props.myContent.color = color;\r\n        props.putContent(props.myContent)\r\n    }\r\n\r\n    function componentToHex(c) {\r\n        var hex = c.toString(16);\r\n        return hex.length == 1 ? \"0\" + hex : hex;\r\n      }\r\n      \r\n    function rgbToHex(rgb) {\r\n        const hex = \"#\" + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\r\n        return hex;\r\n      }\r\n    var initColor = rgbToHex(props.myContent.color);\r\n       \r\n    /* replaced by the color picker \r\n        //               blue              green             yellow             orange            red             perpel            grey \r\n        const colors = [[9, 116, 230, 1], [0, 201 , 52, 1], [224, 254, 32, 1], [255, 127, 0, 1], [255, 0, 0, 1], [255, 13, 188, 1], [110, 110, 110, 1]]\r\n        const buttons = colors.map(color=> { return(\r\n            <button className=\"color-button btn active\" style={{backgroundColor:\"rgba(\"+color+\")\"}} onClick={() => changeColor(color)}></button>\r\n        )});\r\n    */\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Navbar dark expand=\"md\" style={{backgroundColor: navbarColor}}>\r\n                <div className=\"container\">\r\n                    <NavbarToggler onClick={() => setIsNavOpen(!isNavOpen)}/>\r\n                    <NavbarBrand className='mr-auto' href=\"/\">\r\n                        <img src={LogoUrl} height=\"30\" width=\"41\"/>\r\n                    </NavbarBrand>\r\n                    <Collapse isOpen={isNavOpen} navbar>\r\n                        <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link ml-md-5 offset-2 offset-md-0\" to=\"/home\">\r\n                                    <span className=\"fa fa-home\"></span> Home\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link offset-2 offset-md-0\" to=\"/aboutus\">\r\n                                    <span className=\"fa fa-info\"></span> About Us\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link offset-2 offset-md-0\" to=\"/menu\">\r\n                                    <span className=\"fa fa-list\"></span> Menu\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link offset-2 offset-md-0\" to=\"/contactus\">\r\n                                    <span className=\"fa fa-address-card\"></span> Contact US\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem >\r\n                                <Button outline onClick={() => setIsModalOpen(!isModalOpen)} className=\"nav-link offset-2 offset-md-0\"><span className=\"fa fa-sign-in\"></span> Login</Button>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                </div>\r\n            </Navbar>\r\n            <Jumbotron style={{backgroundColor: jumbotronColor}}>\r\n                <div className=\"container\">\r\n                    <div className='row row-header'>\r\n                        <div className='col-10 col-md-6'>\r\n                          <EditBox path={props.myContent.id} field=\"title\" type=\"head\" id=\"0\" putContent ={ props.putContent} myContent={props.myContent}/>\r\n                            <EditBox path={props.myContent.id} field =\"description\"  type=\"head\" id=\"0\" putContent ={ props.putContent} myContent={props.myContent}/>\r\n                          </div>\r\n                        <div className='col-12 col-md-3 ml-md-auto'>\r\n                        <ColorPicker\r\n                            onChange={(color => changeColor(color))}\r\n                            size={270}\r\n                            initialColor={initColor}\r\n                        />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Jumbotron>\r\n            <Modal isOpen={isModalOpen} toggle={() => setIsModalOpen(!isModalOpen)}>\r\n                <ModalBody>\r\n\r\n                    <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={modalTab}\r\n                    onSelect={(k) => setModalTab(k)}\r\n                    >\r\n                        <Tab eventKey=\"login\" title=\"login\">\r\n                            <form name=\"login\" onSubmit={handleLogin}>\r\n                                <label className=\"col-12 col-md-3\">user name</label>\r\n                                <input className=\"col-12 col-md-9\" name=\"loginUsername\" value={loginUsername}\r\n                                onChange={(event) => setLoginUsername(event.target.value)}/>\r\n                                <label className=\"col-12 col-md-3\">password</label>\r\n                                <input className=\"col-12 col-md-9\" type=\"password\" name=\"loginPassword\" value={loginPassword}\r\n                                 onChange={(event) => setLoginPassword(event.target.value)} \r\n                                    ref={register({ required: true })} />\r\n                                {errors.exampleRequired && <span>This field is required</span>}\r\n                                <button type=\"submit\" name=\"submit\">login</button>\r\n                            </form>\r\n                        </Tab>\r\n\r\n                        <Tab eventKey=\"signUp\" title=\"sign up\">\r\n                            <form name=\"signup\" onSubmit={handleSignup}>\r\n                                <label className=\"col-12 col-md-3\" style={{marginTop:\"4px\", marginBottom:\"8px\"}}>user name</label>\r\n                                <input className=\"col-12 col-md-9\" style={{marginTop:\"4px\", marginBottom:\"8px\"}} name=\"signupUsername\" value={signupUsername}\r\n                                 onChange={(event) => setSignupUsername(event.target.value)}/>\r\n                                \r\n                                <label className=\"col-12 col-md-3\" style={{marginTop:\"4px\", marginBottom:\"8px\"}}>password</label>\r\n                                <input className=\"col-12 col-md-9\" style={{marginTop:\"4px\", marginBottom:\"8px\"}} type=\"password\" name=\"signupPassword\" value={signupPassword}\r\n                                onChange={(event) => setSignupPassword(event.target.value)}\r\n                                ref={register({ required: true })} />\r\n                                \r\n                                <label className=\"col-12 col-md-3\" style={{marginTop:\"4px\", marginBottom:\"8px\"}}>re-enter password</label>\r\n                                <input className=\"col-12 col-md-9\" style={{marginTop:\"4px\", marginBottom:\"8px\"}} type=\"password\" name=\"signupRePassword\" value={signupRePassword}\r\n                                onChange={(event) => setSignupRePassword(event.target.value)}\r\n                                ref={register({ required: true })}  />\r\n                                \r\n                                {errors.exampleRequired && <span>This field is required</span>}\r\n                                <button type=\"submit\" name=\"submit2\">signup</button>\r\n                            </form>\r\n                        </Tab>\r\n                    </Tabs>\r\n                </ModalBody>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n   \r\n\r\n}\r\n\r\nexport default Header"]},"metadata":{},"sourceType":"module"}