{"ast":null,"code":"var _jsxFileName = \"/home/eilon/programing/full-stack/React/confusion/confusion-origin/confusion/src/component/EditBoxComponent.js\";\nimport { Link } from 'react-router-dom';\nimport React, { useState, useEffect, Component } from 'react';\nimport { Form, Input, Button, Label } from 'reactstrap';\nimport { Control, Errors } from 'react-redux-form';\n\nclass EditBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      text: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    alert(this.text);\n    this.props.putContent(this.text, this.props.field_name);\n    event.preventDefault();\n  }\n\n  render() {\n    if (this.props.content === null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 16\n        }\n      });\n    }\n\n    var placeHolder = \"\";\n    var type = \"text\"; //var currentText = \"\"\n\n    console.log(\"EditBox: props.content\", this.props.content, \" props.feild_name: \", this.props.field_name);\n\n    switch (this.props.field_name) {\n      case \"title\":\n        setText(props.content.title); //currentText = props.content.title;\n\n        placeHolder = \"my restrunt name\";\n        break;\n\n      case \"description\":\n        setText(props.content.description); //currentText = props.content.title;\n\n        placeHolder = \"my restrunt name\";\n        type = \"textarea\";\n    }\n\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, props.field_name, /*#__PURE__*/React.createElement(Input, {\n      type: type,\n      value: this.text,\n      onChange: this.handleChange,\n      placeholder: placeHolder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"submit\")));\n  }\n\n}\n\nexport default EditBox;\n/*\nimport React, {Component} from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Label, Col , Row } from 'reactstrap'\nimport { Control, Form, Errors, Input} from 'react-redux-form';\n\nclass EditBox extends Component{\n\n    constructor(props){\n        super (props)\n\n        this.state = {\n            edit: false,\n            text:this.props.text\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values){\n        console.log(\"handleSubmit\", values)\n        this.props.putText(this.state.text, this.props.id, this.props.username);\n\n        this.setState({\n            edit: !this.state.edit\n        });\n    }\n\n\n    onClick(){\n\n        console.log(\"onClick\", this.state.edit)\n        this.setState({\n            edit: !this.state.edit\n        });\n    }\n\n    handleInputChange(event){\n            // This will update specific key in your form object inside the local state\n        this.setState({\n            form: Object.assign({}, this.state.form, {\n            [event.target.text]: event.target.value,\n        }),\n        });\n    }\n\n\n    render(){\n\n        \n\n        if(this.state.edit){\n\n            return( \n                <div>\n            <Form model=\"text\" onSubmit={(values) => this.handleSubmit(values)}>\n                <Control.textarea model=\".text\" id={this.props.id} name=\"text\" style = {{fontSize:\"35px\"}}\n                    rows={this.props.rows_num} \n                    className=\"form-control\"  \n                    onChange={event => this.handleInputChange(event)}\n                    defaultValue={this.props.text}/>\n\n                <Button type=\"submit\">save</Button>\n            </Form>\n\n            \n                </div>\n            );        \n            // onChange={this.handleInputChange}                   \n        }               \n        else{\n            return(\n            <div>\n                <div className = 'row'>\n                    <span style = {{fontSize:\"45px\", fontWeight:\"normal\"}}>{this.props.text} </span>\n                </div>\n                \n                <div className = 'row'>\n                    <Button onClick={()=>this.onClick()}>edit</Button>\n                </div>\n            </div>\n            );\n        }\n\n    }\n}\n\nexport default EditBox;\n\n*/","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion/confusion-origin/confusion/src/component/EditBoxComponent.js"],"names":["Link","React","useState","useEffect","Component","Form","Input","Button","Label","Control","Errors","EditBox","constructor","props","state","text","handleChange","bind","handleSubmit","event","setState","target","value","alert","putContent","field_name","preventDefault","render","content","placeHolder","type","console","log","setText","title","description"],"mappings":";AACA,SAAQA,IAAR,QAAmB,kBAAnB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,SAApC,QAAoD,OAApD;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,KAA9B,QAA0C,YAA1C;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAA+B,kBAA/B;;AAGA,MAAMC,OAAN,SAAsBP,SAAtB,CAAgC;AAE5BQ,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAOA,KAAP;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,IAAI,EAAE;AADC,KAAX;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAKDD,EAAAA,YAAY,CAACG,KAAD,EAAO;AACf,SAAKC,QAAL,CAAc;AACVL,MAAAA,IAAI,EAACI,KAAK,CAACE,MAAN,CAAaC;AADR,KAAd;AAGH;;AAGDJ,EAAAA,YAAY,CAACC,KAAD,EAAO;AACfI,IAAAA,KAAK,CAAC,KAAKR,IAAN,CAAL;AACA,SAAKF,KAAL,CAAWW,UAAX,CAAsB,KAAKT,IAA3B,EAAiC,KAAKF,KAAL,CAAWY,UAA5C;AACAN,IAAAA,KAAK,CAACO,cAAN;AACH;;AAEHC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKd,KAAL,CAAWe,OAAX,KAAuB,IAA3B,EAAgC;AAC5B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,QAAIC,WAAW,GAAC,EAAhB;AACA,QAAIC,IAAI,GAAG,MAAX,CANO,CAOP;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsC,KAAKnB,KAAL,CAAWe,OAAjD,EAA0D,qBAA1D,EAAiF,KAAKf,KAAL,CAAWY,UAA5F;;AACA,YAAQ,KAAKZ,KAAL,CAAWY,UAAnB;AACI,WAAK,OAAL;AACIQ,QAAAA,OAAO,CAACpB,KAAK,CAACe,OAAN,CAAcM,KAAf,CAAP,CADJ,CAEI;;AACAL,QAAAA,WAAW,GAAC,kBAAZ;AACA;;AAEJ,WAAK,aAAL;AACII,QAAAA,OAAO,CAACpB,KAAK,CAACe,OAAN,CAAcO,WAAf,CAAP,CADJ,CAEI;;AACAN,QAAAA,WAAW,GAAC,kBAAZ;AACAC,QAAAA,IAAI,GAAG,UAAP;AAXR;;AAeA,wBACI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKZ,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,KAAK,CAACY,UADT,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEK,IAAb;AAAmB,MAAA,KAAK,EAAE,KAAKf,IAA/B;AAAqC,MAAA,QAAQ,EAAE,KAAKC,YAApD;AACI,MAAA,WAAW,EAAEa,WADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAIE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CADF,CADJ;AAUC;;AA9D2B;;AAqEhC,eAAelB,OAAf;AAOA","sourcesContent":["\nimport {Link} from 'react-router-dom';\nimport React, {useState, useEffect, Component} from 'react';\nimport { Form, Input, Button, Label} from 'reactstrap';\nimport { Control, Errors} from 'react-redux-form';\n\n\nclass EditBox extends Component {\n\n    constructor(props){\n        super (props);\n        this.state={\n            text: ''\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n\n\n    \n    handleChange(event){\n        this.setState({\n            text:event.target.value\n        });\n    }\n    \n  \n    handleSubmit(event){\n        alert(this.text);\n        this.props.putContent(this.text, this.props.field_name);\n        event.preventDefault();\n    }\n\n  render() {\n    if (this.props.content === null){\n        return <div></div>\n    }\n\n    var placeHolder=\"\";\n    var type = \"text\";\n    //var currentText = \"\"\n    console.log(\"EditBox: props.content\", this.props.content, \" props.feild_name: \", this.props.field_name)\n    switch (this.props.field_name){\n        case \"title\":\n            setText(props.content.title);\n            //currentText = props.content.title;\n            placeHolder=\"my restrunt name\";\n            break;\n\n        case \"description\":\n            setText(props.content.description);\n            //currentText = props.content.title;\n            placeHolder=\"my restrunt name\";\n            type = \"textarea\";\n    }\n    \n\n    return(\n        <Form onSubmit={this.handleSubmit}>\n          <Label>\n            {props.field_name} \n            <Input type={type} value={this.text} onChange={this.handleChange}\n                placeholder={placeHolder}/>\n            <Button type=\"submit\" value=\"Submit\">submit</Button>\n          </Label>\n        </Form>\n    );\n    }\n\n   \n\n\n}\n\nexport default EditBox;\n\n\n\n\n\n\n/*\nimport React, {Component} from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Label, Col , Row } from 'reactstrap'\nimport { Control, Form, Errors, Input} from 'react-redux-form';\n\nclass EditBox extends Component{\n\n    constructor(props){\n        super (props)\n\n        this.state = {\n            edit: false,\n            text:this.props.text\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values){\n        console.log(\"handleSubmit\", values)\n        this.props.putText(this.state.text, this.props.id, this.props.username);\n\n        this.setState({\n            edit: !this.state.edit\n        });\n    }\n\n\n    onClick(){\n\n        console.log(\"onClick\", this.state.edit)\n        this.setState({\n            edit: !this.state.edit\n        });\n    }\n\n    handleInputChange(event){\n            // This will update specific key in your form object inside the local state\n        this.setState({\n            form: Object.assign({}, this.state.form, {\n            [event.target.text]: event.target.value,\n        }),\n        });\n    }\n\n\n    render(){\n\n        \n\n        if(this.state.edit){\n\n            return( \n                <div>\n            <Form model=\"text\" onSubmit={(values) => this.handleSubmit(values)}>\n                <Control.textarea model=\".text\" id={this.props.id} name=\"text\" style = {{fontSize:\"35px\"}}\n                    rows={this.props.rows_num} \n                    className=\"form-control\"  \n                    onChange={event => this.handleInputChange(event)}\n                    defaultValue={this.props.text}/>\n\n                <Button type=\"submit\">save</Button>\n            </Form>\n\n            \n                </div>\n            );        \n            // onChange={this.handleInputChange}                   \n        }               \n        else{\n            return(\n            <div>\n                <div className = 'row'>\n                    <span style = {{fontSize:\"45px\", fontWeight:\"normal\"}}>{this.props.text} </span>\n                </div>\n                \n                <div className = 'row'>\n                    <Button onClick={()=>this.onClick()}>edit</Button>\n                </div>\n            </div>\n            );\n        }\n\n    }\n}\n\nexport default EditBox;\n\n*/"]},"metadata":{},"sourceType":"module"}