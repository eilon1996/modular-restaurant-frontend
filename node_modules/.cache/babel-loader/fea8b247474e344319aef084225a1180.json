{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/externalUrl'; ////////////  signup  ////////////\n\nexport const signup = jsonObject => dispatch => {\n  const id = String(jsonObject.id);\n  const newJson = {};\n  newJson[id] = jsonObject;\n  return fetch(baseUrl + '/content.json', {\n    method: \"PATCH\",\n    body: JSON.stringify(newJson),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    console.log(\"signup\");\n\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => {\n    dispatch(addMyContent(response[id])); // use fetch\n  }).then(response => {\n    dispatch(addContent(response));\n    alert('your sign up was successful');\n  }).catch(error => {\n    console.log('submmit content', error.message);\n    alert('Your content could not be submited\\nError: ' + error.message);\n  });\n}; ///////////putContnet///////////\n\nexport const putContent = jsonObject => dispatch => {\n  console.log(\"ActionCreator-putcontent\", jsonObject);\n  addMyContent(jsonObject);\n  if (jsonObject.id === \"0\") return; // user 0 dont need to update the server\n\n  if (jsonObject.id === \"eilon\") {\n    jsonObject.id = \"0\";\n    jsonObject.password = \"0\";\n  }\n\n  return fetch(baseUrl + '/content/' + jsonObject.id + \".json\", {\n    method: \"PATCH\",\n    body: JSON.stringify(jsonObject),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).catch(error => {\n    console.log('submmit content', error.message);\n    alert('Your content could not be submited\\nError: ' + error.message);\n  });\n}; /// fetch myContent////\n\nexport const fetchMyContent = id => dispatch => {\n  console.log(\"fetchMyContent, id:\", id);\n  dispatch(myContentLoading(true));\n\n  if (id === null) {\n    id = \"0\";\n  }\n\n  return fetch(baseUrl + '/content/' + id + \".json\").then(response => {\n    if (response.ok) {\n      console.log(\"ActionCreator-fetchmyContent, response is OK\\nresponse: \", response);\n      return response;\n    } else {\n      console.log(\"ActionCreator-fetchmyContent, response is NOT OK\\nresponse: \", response);\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    console.log(\"ActionCreator-fetchmyContent, NO response \\error.message: \", error.message);\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(myContent => dispatch(addMyContent(myContent))).catch(error => dispatch(myContentFailed(error.message)));\n};\nexport const myContentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.MYCONTENT_LOADING\n  };\n};\nexport const myContentFailed = errmess => {\n  return {\n    type: ActionTypes.MYCONTENT_FAILED,\n    payload: errmess\n  };\n};\nexport const addMyContent = myContent => {\n  console.log(\"ActionCreator-addContent, content: \", myContent);\n  return {\n    type: ActionTypes.ADD_MYCONTENT,\n    payload: myContent\n  };\n}; /// fetch content////\n\nexport const fetchContent = () => dispatch => {\n  return fetch(baseUrl + '/content' + \".json\").then(response => {\n    if (response.ok) {\n      console.log(\"ActionCreator-fetchContent, response is OK\\nresponse: \", response);\n      return response;\n    } else {\n      console.log(\"ActionCreator-fetchContent, response is NOT OK\\nresponse: \", response);\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    console.log(\"ActionCreator-fetchContent, NO response \\error.message: \", error.message);\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(content => dispatch(addContent(content))).catch(error => dispatch(contentFailed(error.message)));\n};\nexport const contentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.CONTENT_LOADING\n  };\n};\nexport const contentFailed = errmess => {\n  return {\n    type: ActionTypes.CONTENT_FAILED,\n    payload: errmess\n  };\n};\nexport const addContent = content => {\n  console.log(\"ActionCreator-addContent, content: \", content);\n  return {\n    type: ActionTypes.ADD_CONTENT,\n    payload: content\n  };\n}; ///////////feedback///////////\n\nexport const postFeedback = (firstName, lastName, telNum, email, agree, contactType, message) => dispatch => {\n  const newFeedback = {\n    firstName: firstName,\n    lastName: lastName,\n    telNum: telNum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  }; //previesdly the id and the date where added in comments.js\n\n  newFeedback.date = new Date().toISOString();\n  return fetch(baseUrl + '/feedback' + \".json\", {\n    method: \"POST\",\n    body: JSON.stringify(newFeedback),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    //related to the backend \n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => {\n    dispatch(addFeedback(response));\n    alert('Your feedback was submited successfully');\n  }).catch(error => {\n    console.log('submmit feedback', error.message);\n    alert('Your feedback could not be submited\\nError: ' + error.message);\n  });\n};\nexport const addFeedback = feedback => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: feedback\n}); ///////////comments////////////\n//since this is a punc, I need to add the dispatch. So, I'll send the function of a function\n\nexport const postComment = (id, rating, author, comment) => dispatch => {\n  const newComment = {\n    dishId: id,\n    rating: rating,\n    author: author,\n    comment: comment,\n    date: new Date().toISOString()\n  }; // add the comment place and id\n\n  return fetch(baseUrl + \"/comments.json\", {\n    method: \"POST\",\n    body: JSON.stringify(newComment),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    //related to the backend \n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }) // add the comment value\n\n  /*\n  .then( (originResponse) => \n    fetch(baseUrl + \"/comments/\"+count+\".json\", {\n      method: \"PATCH\",\n      body: JSON.stringify(newCommentContent),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      //related to the backend \n      credentials: \"same-origin\"\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  )*/\n  .then(response => response.json()).then(response => dispatch(addComment(response))).catch(error => {\n    console.log('post comments', error.message);\n    alert('Your comment could not be posted\\nError: ' + error.message);\n  });\n};\nexport const addComment = comment => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment\n}); //////////// LEADERS //////////////\n\nexport const fetchLeaders = () => dispatch => {\n  dispatch(leadersLoading(true));\n  return fetch(baseUrl + '/leaders' + \".json\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(leaders => dispatch(addLeaders(leaders))).catch(error => dispatch(leadersFailed(error.message)));\n};\nexport const leadersLoading = () => ({\n  type: ActionTypes.LEADERS_LOADING\n});\nexport const leadersFailed = errmess => {\n  return {\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n  };\n};\nexport const addLeaders = leaders => {\n  //alert(\"action creator, leader: \"+ JSON.stringify(leaders))\n  return {\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n  };\n};\n/*\nexport const addLeaders = (leaders) => ({\n  type: ActionTypes.ADD_LEADERS,\n  payload: leaders\n});\n*/\n//////////// DISHES //////////////\n\nexport const fetchDishes = () => dispatch => {\n  console.log(\"ActionCreator-fetchDishes\");\n  dispatch(dishesLoading(true));\n  return fetch(baseUrl + '/dishes' + \".json\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(dishes => dispatch(addDishes(dishes))).catch(error => dispatch(dishesFailed(error.message)));\n}; //returning an action\n\nexport const dishesLoading = () => {\n  console.log(\"ActionCreator-dishesLoading\");\n  return {\n    type: ActionTypes.DISHES_LOADING\n  };\n};\nexport const dishesFailed = errmess => {\n  //alert(\"actionCreator.js - dishesFailed: \"+ errmess);\n  return {\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n  };\n};\nexport const addDishes = dishes => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n}); //////////// COMMENTS //////////////\n\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + '/comments' + \".json\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(comments => dispatch(addComments(comments))).catch(error => dispatch(commentsFailed(error.message)));\n};\nexport const commentsFailed = errmess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n}); //////////// PROMOTIONS //////////////\n\nexport const fetchPromos = () => dispatch => {\n  dispatch(promosLoading());\n  return fetch(baseUrl + '/promotions' + \".json\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(promos => dispatch(addPromos(promos))).catch(error => dispatch(promosFailed(error.message)));\n};\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING\n});\nexport const promosFailed = errmess => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess\n});\nexport const addPromos = promos => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});","map":{"version":3,"sources":["/home/eilon/programing/full-stack/confusion-new/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","signup","jsonObject","dispatch","id","String","newJson","fetch","method","body","JSON","stringify","headers","credentials","then","response","console","log","ok","error","Error","status","statusText","json","addMyContent","addContent","alert","catch","message","putContent","password","fetchMyContent","myContentLoading","errmess","myContent","myContentFailed","type","MYCONTENT_LOADING","MYCONTENT_FAILED","payload","ADD_MYCONTENT","fetchContent","content","contentFailed","contentLoading","CONTENT_LOADING","CONTENT_FAILED","ADD_CONTENT","postFeedback","firstName","lastName","telNum","email","agree","contactType","newFeedback","date","Date","toISOString","addFeedback","feedback","ADD_COMMENT","postComment","rating","author","comment","newComment","dishId","addComment","fetchLeaders","leadersLoading","leaders","addLeaders","leadersFailed","LEADERS_LOADING","LEADERS_FAILED","ADD_LEADERS","fetchDishes","dishesLoading","dishes","addDishes","dishesFailed","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS"],"mappings":"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","sourcesContent":["\nimport * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/externalUrl';\n\n\n////////////  signup  ////////////\n\nexport const signup = (jsonObject) => (dispatch) => {\n  const id = String(jsonObject.id);\n  const newJson = {};\n  newJson[id] = jsonObject;\n\n\n  return fetch(baseUrl + '/content.json', {\n    method: \"PATCH\",\n    body: JSON.stringify(newJson),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  })\n    .then(response => {\n      console.log(\"signup\");\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        throw error;\n      })\n    .then(response => response.json())\n    .then(response => {\n      dispatch(addMyContent(response[id])); // use fetch\n    })\n    .then(response => {\n      dispatch(addContent(response));\n      alert('your sign up was successful');\n    })\n    .catch(error => {\n      console.log('submmit content', error.message);\n      alert('Your content could not be submited\\nError: ' + error.message);\n    });\n};\n\n\n\n///////////putContnet///////////\n\nexport const putContent = (jsonObject) => (dispatch) => {\n\n  console.log(\"ActionCreator-putcontent\", jsonObject);\n\n  addMyContent(jsonObject);\n  if (jsonObject.id === \"0\") return; // user 0 dont need to update the server\n  if (jsonObject.id === \"eilon\") {\n    jsonObject.id = \"0\";\n    jsonObject.password = \"0\";\n  }\n\n  return fetch(baseUrl + '/content/' + jsonObject.id + \".json\", {\n    method: \"PATCH\",\n    body: JSON.stringify(jsonObject),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  })\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => { throw error; })\n    .catch(error => {\n      console.log('submmit content', error.message);\n      alert('Your content could not be submited\\nError: ' + error.message);\n    });\n};\n\n\n\n/// fetch myContent////\n\nexport const fetchMyContent = (id) => (dispatch) => {\n\n  console.log(\"fetchMyContent, id:\", id);\n  dispatch(myContentLoading(true));\n\n  if (id === null) {\n    id = \"0\";\n  }\n  return fetch(baseUrl + '/content/' + id + \".json\")\n    .then(response => {\n      if (response.ok) {\n        console.log(\"ActionCreator-fetchmyContent, response is OK\\nresponse: \", response);\n        return response;\n      } else {\n        console.log(\"ActionCreator-fetchmyContent, response is NOT OK\\nresponse: \", response);\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        console.log(\"ActionCreator-fetchmyContent, NO response \\error.message: \", error.message);\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(myContent => dispatch(addMyContent(myContent)))\n    .catch(error => dispatch(myContentFailed(error.message)));\n\n}\n\nexport const myContentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.MYCONTENT_LOADING\n  }\n}\n\nexport const myContentFailed = ((errmess) => {\n  return ({\n    type: ActionTypes.MYCONTENT_FAILED,\n    payload: errmess\n  });\n});\n\nexport const addMyContent = (myContent) => {\n  console.log(\"ActionCreator-addContent, content: \", myContent);\n  return ({\n    type: ActionTypes.ADD_MYCONTENT,\n    payload: myContent\n  });\n}\n\n\n\n/// fetch content////\n\nexport const fetchContent = () => (dispatch) => {\n\n  return fetch(baseUrl + '/content' + \".json\")\n    .then(response => {\n      if (response.ok) {\n        console.log(\"ActionCreator-fetchContent, response is OK\\nresponse: \", response);\n        return response;\n      } else {\n        console.log(\"ActionCreator-fetchContent, response is NOT OK\\nresponse: \", response);\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        console.log(\"ActionCreator-fetchContent, NO response \\error.message: \", error.message);\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(content => dispatch(addContent(content)))\n    .catch(error => dispatch(contentFailed(error.message)));\n\n}\n\nexport const contentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.CONTENT_LOADING\n  }\n}\n\nexport const contentFailed = ((errmess) => {\n  return ({\n    type: ActionTypes.CONTENT_FAILED,\n    payload: errmess\n  });\n});\n\nexport const addContent = (content) => {\n  console.log(\"ActionCreator-addContent, content: \", content);\n  return ({\n    type: ActionTypes.ADD_CONTENT,\n    payload: content\n  });\n}\n\n\n\n\n///////////feedback///////////\n\nexport const postFeedback = (firstName, lastName, telNum, email, agree, contactType, message) => (dispatch) => {\n\n  const newFeedback = {\n    firstName: firstName,\n    lastName: lastName,\n    telNum: telNum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  };\n\n  //previesdly the id and the date where added in comments.js\n  newFeedback.date = new Date().toISOString();\n\n  return fetch(baseUrl + '/feedback' + \".json\", {\n    method: \"POST\",\n    body: JSON.stringify(newFeedback),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    //related to the backend \n    credentials: \"same-origin\"\n  })\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        throw error;\n      })\n    .then(response => response.json())\n    .then(response => {\n      dispatch(addFeedback(response));\n      alert('Your feedback was submited successfully');\n    })\n    .catch(error => {\n      console.log('submmit feedback', error.message);\n      alert('Your feedback could not be submited\\nError: ' + error.message);\n    });\n};\n\nexport const addFeedback = (feedback) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: feedback\n});\n\n\n\n///////////comments////////////\n\n//since this is a punc, I need to add the dispatch. So, I'll send the function of a function\nexport const postComment = (id, rating, author, comment) => (dispatch) => {\n\n\n  const newComment =\n  {\n    dishId: id,\n    rating: rating,\n    author: author,\n    comment: comment,\n    date: new Date().toISOString()\n  }\n\n  // add the comment place and id\n  return fetch(baseUrl + \"/comments.json\", {\n    method: \"POST\",\n    body: JSON.stringify(newComment),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    //related to the backend \n    credentials: \"same-origin\"\n  })\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        throw error;\n      })\n    // add the comment value\n    /*\n  .then( (originResponse) => \n      fetch(baseUrl + \"/comments/\"+count+\".json\", {\n        method: \"PATCH\",\n        body: JSON.stringify(newCommentContent),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        //related to the backend \n        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n  )*/\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error => {\n      console.log('post comments', error.message);\n      alert('Your comment could not be posted\\nError: ' + error.message);\n    });\n};\n\n\nexport const addComment = (comment) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment\n});\n\n\n\n//////////// LEADERS //////////////\n\nexport const fetchLeaders = () => (dispatch) => {\n\n  dispatch(leadersLoading(true));\n\n  return fetch(baseUrl + '/leaders' + \".json\")\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(leaders => dispatch(addLeaders(leaders)))\n    .catch(error => dispatch(leadersFailed(error.message)));\n\n}\n\n\nexport const leadersLoading = () => ({\n  type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = ((errmess) => {\n  return ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n  });\n});\n\nexport const addLeaders = (leaders) => {\n  //alert(\"action creator, leader: \"+ JSON.stringify(leaders))\n  return ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n  });\n}\n\n/*\nexport const addLeaders = (leaders) => ({\n  type: ActionTypes.ADD_LEADERS,\n  payload: leaders\n});\n*/\n\n//////////// DISHES //////////////\n\n\nexport const fetchDishes = () => (dispatch) => {\n  console.log(\"ActionCreator-fetchDishes\");\n  dispatch(dishesLoading(true));\n\n  return fetch(baseUrl + '/dishes' + \".json\")\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(dishes => dispatch(addDishes(dishes)))\n    .catch(error => dispatch(dishesFailed(error.message)));\n\n}\n\n\n//returning an action\nexport const dishesLoading = () => {\n  console.log(\"ActionCreator-dishesLoading\");\n  return { type: ActionTypes.DISHES_LOADING }\n}\n\nexport const dishesFailed = ((errmess) => {\n  //alert(\"actionCreator.js - dishesFailed: \"+ errmess);\n  return ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n  });\n});\n\nexport const addDishes = (dishes) => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n});\n\n\n//////////// COMMENTS //////////////\n\nexport const fetchComments = () => (dispatch) => {\n  return fetch(baseUrl + '/comments' + \".json\")\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\n\nexport const addComments = (comments) => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\n\n\n//////////// PROMOTIONS //////////////\n\nexport const fetchPromos = () => (dispatch) => {\n\n  dispatch(promosLoading());\n\n  return fetch(baseUrl + '/promotions' + \".json\")\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)))\n    .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});"]},"metadata":{},"sourceType":"module"}