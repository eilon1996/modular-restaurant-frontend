{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl'; ////////////  signup  ////////////\n\nexport const signup = fields_value => dispatch => {\n  console.log(\"signup\");\n  const newContent = {\n    id: fields_value[0],\n    password: fields_value[1],\n    title: fields_value[2],\n    titleFontSize: fields_value[3],\n    description: fields_value[4],\n    descriptionFontSize: fields_value[5],\n    color: fields_value[6],\n    dishes: fields_value[7]\n  };\n  return fetch(baseUrl + '/content.json', {\n    method: \"POST\",\n    body: JSON.stringify(newContent),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => {\n    dispatch(addContent(response));\n    alert('Your content was submited successfully');\n  }).catch(error => {\n    console.log('submmit content', error.message);\n    alert('Your content could not be submited\\nError: ' + error.message);\n  });\n}; ///////////putContnet///////////\n\nexport const putContent = (id, path, jsonObject) => dispatch => {\n  console.log(\"ActionCreator-putcontent\", jsonObject, id, path);\n  return fetch(baseUrl + '/content/' + id + \"/\" + path + \".json\", {\n    method: \"PATCH\",\n    body: JSON.stringify(jsonObject),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => {\n    //dispatch(addContent(response));\n    dispatch(addMyContent(response)); //alert('Your content was submited successfully');\n  }).catch(error => {\n    console.log('submmit content', error.message);\n    alert('Your content could not be submited\\nError: ' + error.message);\n  });\n};\nexport const putContent2 = fields_value => dispatch => {\n  console.log(\"ActionCreator-putcontent\");\n  const newContent = {\n    id: fields_value[0],\n    password: fields_value[1],\n    title: fields_value[2],\n    titleFontSize: fields_value[3],\n    description: fields_value[4],\n    descriptionFontSize: fields_value[5],\n    color: fields_value[6],\n    dishes: fields_value[7]\n  };\n  return fetch(baseUrl + '/content/' + fields_value[0] + \".json\", {\n    method: \"PATCH\",\n    body: JSON.stringify(newContent),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => {\n    //dispatch(addContent(response));\n    dispatch(addMyContent(response)); //alert('Your content was submited successfully');\n  }).catch(error => {\n    console.log('submmit content', error.message);\n    alert('Your content could not be submited\\nError: ' + error.message);\n  });\n}; /// fetch myContent////\n\nexport const fetchMyContent = id => dispatch => {\n  dispatch(myContentLoading(true));\n\n  if (id === null) {\n    id = \"0\";\n  }\n\n  return fetch(baseUrl + '/content/' + id + \".json\").then(response => {\n    if (response.ok) {\n      console.log(\"ActionCreator-fetchmyContent, response is OK\\nresponse: \", response);\n      return response;\n    } else {\n      console.log(\"ActionCreator-fetchmyContent, response is NOT OK\\nresponse: \", response);\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    console.log(\"ActionCreator-fetchmyContent, NO response \\error.message: \", error.message);\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(myContent => dispatch(addMyContent(myContent))).catch(error => dispatch(myContentFailed(error.message)));\n};\nexport const myContentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.MYCONTENT_LOADING\n  };\n};\nexport const myContentFailed = errmess => {\n  return {\n    type: ActionTypes.MYCONTENT_FAILED,\n    payload: errmess\n  };\n};\nexport const addMyContent = myContent => {\n  console.log(\"ActionCreator-addContent, content: \", myContent);\n  return {\n    type: ActionTypes.ADD_MYCONTENT,\n    payload: myContent\n  };\n}; /// fetch content////\n\nexport const fetchContent = () => dispatch => {\n  dispatch(contentLoading(true));\n  return fetch(baseUrl + '/content' + \".json\").then(response => {\n    if (response.ok) {\n      console.log(\"ActionCreator-fetchContent, response is OK\\nresponse: \", response);\n      return response;\n    } else {\n      console.log(\"ActionCreator-fetchContent, response is NOT OK\\nresponse: \", response);\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    console.log(\"ActionCreator-fetchContent, NO response \\error.message: \", error.message);\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(content => dispatch(addContent(content))).catch(error => dispatch(contentFailed(error.message)));\n};\nexport const contentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.CONTENT_LOADING\n  };\n};\nexport const contentFailed = errmess => {\n  return {\n    type: ActionTypes.CONTENT_FAILED,\n    payload: errmess\n  };\n};\nexport const addContent = content => {\n  console.log(\"ActionCreator-addContent, content: \", content);\n  return {\n    type: ActionTypes.ADD_CONTENT,\n    payload: content\n  };\n}; ///////////feedback///////////\n\nexport const postFeedback = (firstName, lastName, telNum, email, agree, contactType, message) => dispatch => {\n  const newFeedback = {\n    firstName: firstName,\n    lastName: lastName,\n    telNum: telNum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  }; //previesdly the id and the date where added in comments.js\n\n  newFeedback.date = new Date().toISOString();\n  return fetch(baseUrl + '/feedback' + \".json\", {\n    method: \"POST\",\n    body: JSON.stringify(newFeedback),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    //related to the backend \n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => {\n    dispatch(addFeedback(response));\n    alert('Your feedback was submited successfully');\n  }).catch(error => {\n    console.log('submmit feedback', error.message);\n    alert('Your feedback could not be submited\\nError: ' + error.message);\n  });\n};\nexport const addFeedback = feedback => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: feedback\n}); ///////////comments////////////\n//since this is a punc, I need to add the dispatch. So, I'll send the function of a function\n\nexport const postComment = (dishId, rating, author, comment) => dispatch => {\n  const newComment = {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment\n  }; //previesdly the id and the date where added in comments.js\n\n  newComment.date = new Date().toISOString();\n  return fetch(baseUrl + '/comments' + \".json\", {\n    method: \"POST\",\n    body: JSON.stringify(newComment),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    //related to the backend \n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => dispatch(addComment(response))).catch(error => {\n    console.log('post comments', error.message);\n    alert('Your comment could not be posted\\nError: ' + error.message);\n  });\n};\nexport const addComment = comment => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment\n}); //////////// LEADERS //////////////\n\nexport const fetchLeaders = () => dispatch => {\n  dispatch(leadersLoading(true));\n  return fetch(baseUrl + '/leaders' + \".json\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(leaders => dispatch(addLeaders(leaders))).catch(error => dispatch(leadersFailed(error.message)));\n};\nexport const leadersLoading = () => ({\n  type: ActionTypes.LEADERS_LOADING\n});\nexport const leadersFailed = errmess => {\n  return {\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n  };\n};\nexport const addLeaders = leaders => {\n  //alert(\"action creator, leader: \"+ JSON.stringify(leaders))\n  return {\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n  };\n};\n/*\nexport const addLeaders = (leaders) => ({\n  type: ActionTypes.ADD_LEADERS,\n  payload: leaders\n});\n*/\n//////////// DISHES //////////////\n\nexport const fetchDishes = () => dispatch => {\n  console.log(\"ActionCreator-fetchDishes\");\n  dispatch(dishesLoading(true));\n  return fetch(baseUrl + '/dishes' + \".json\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(dishes => dispatch(addDishes(dishes))).catch(error => dispatch(dishesFailed(error.message)));\n}; //returning an action\n\nexport const dishesLoading = () => {\n  console.log(\"ActionCreator-dishesLoading\");\n  return {\n    type: ActionTypes.DISHES_LOADING\n  };\n};\nexport const dishesFailed = errmess => {\n  //alert(\"actionCreator.js - dishesFailed: \"+ errmess);\n  return {\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n  };\n};\nexport const addDishes = dishes => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n}); //////////// COMMENTS //////////////\n\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + '/comments' + \".json\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(comments => dispatch(addComments(comments))).catch(error => dispatch(commentsFailed(error.message)));\n};\nexport const commentsFailed = errmess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n}); //////////// PROMOTIONS //////////////\n\nexport const fetchPromos = () => dispatch => {\n  dispatch(promosLoading());\n  return fetch(baseUrl + '/promotions' + \".json\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(promos => dispatch(addPromos(promos))).catch(error => dispatch(promosFailed(error.message)));\n};\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING\n});\nexport const promosFailed = errmess => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess\n});\nexport const addPromos = promos => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","signup","fields_value","dispatch","console","log","newContent","id","password","title","titleFontSize","description","descriptionFontSize","color","dishes","fetch","method","body","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addContent","alert","catch","message","putContent","path","jsonObject","addMyContent","putContent2","fetchMyContent","myContentLoading","errmess","myContent","myContentFailed","type","MYCONTENT_LOADING","MYCONTENT_FAILED","payload","ADD_MYCONTENT","fetchContent","contentLoading","content","contentFailed","CONTENT_LOADING","CONTENT_FAILED","ADD_CONTENT","postFeedback","firstName","lastName","telNum","email","agree","contactType","newFeedback","date","Date","toISOString","addFeedback","feedback","ADD_COMMENT","postComment","dishId","rating","author","comment","newComment","addComment","fetchLeaders","leadersLoading","leaders","addLeaders","leadersFailed","LEADERS_LOADING","LEADERS_FAILED","ADD_LEADERS","fetchDishes","dishesLoading","addDishes","dishesFailed","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS"],"mappings":"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","sourcesContent":["\nimport * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\n\n////////////  signup  ////////////\n\nexport const signup = (fields_value) => (dispatch) => {\n  console.log(\"signup\");\n\n  const newContent = {\n    id:fields_value[0],\n    password:fields_value[1],\n    title: fields_value[2],\n    titleFontSize: fields_value[3],\n    description: fields_value[4],\n    descriptionFontSize: fields_value[5],\n    color: fields_value[6],\n    dishes: fields_value[7]\n  };\n  \n  return fetch(baseUrl + '/content.json', {\n      method: \"POST\",\n      body: JSON.stringify(newContent),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"same-origin\"\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => {\n    dispatch(addContent(response));\n    alert('Your content was submited successfully');\n  })\n  .catch(error =>  { console.log('submmit content', error.message);\n   alert('Your content could not be submited\\nError: '+error.message); });\n};\n\n\n\n///////////putContnet///////////\n\nexport const putContent = (id, path, jsonObject) => (dispatch) => {\n\n\n  console.log(\"ActionCreator-putcontent\", jsonObject, id, path);\n\n  return fetch(baseUrl + '/content/'+id+\"/\"+path+\".json\", {\n      method: \"PATCH\",\n      body: JSON.stringify(jsonObject),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"same-origin\"\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => {\n    //dispatch(addContent(response));\n    dispatch(addMyContent(response));\n    //alert('Your content was submited successfully');\n  })\n  .catch(error =>  { console.log('submmit content', error.message);\n   alert('Your content could not be submited\\nError: '+error.message); });\n};\n\n\nexport const putContent2 = (fields_value) => (dispatch) => {\n\n\n  console.log(\"ActionCreator-putcontent\");\n\n  const newContent = {\n    id:fields_value[0],\n    password:fields_value[1],\n    title: fields_value[2],\n    titleFontSize: fields_value[3],\n    description: fields_value[4],\n    descriptionFontSize: fields_value[5],\n    color: fields_value[6],\n    dishes: fields_value[7]\n  };\n  \n  return fetch(baseUrl + '/content/'+fields_value[0]+\".json\", {\n      method: \"PATCH\",\n      body: JSON.stringify(newContent),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"same-origin\"\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => {\n    //dispatch(addContent(response));\n    dispatch(addMyContent(response));\n    //alert('Your content was submited successfully');\n  })\n  .catch(error =>  { console.log('submmit content', error.message);\n   alert('Your content could not be submited\\nError: '+error.message); });\n};\n\n\n/// fetch myContent////\n\nexport const fetchMyContent = (id) => (dispatch) => {\n\n  dispatch(myContentLoading(true));\n\n  if(id === null){\n    id = \"0\";\n  }\n  return fetch(baseUrl + '/content/'+id+\".json\")\n  .then(response => {\n      if (response.ok) {\n        console.log(\"ActionCreator-fetchmyContent, response is OK\\nresponse: \", response);        \n        return response;\n      } else {\n        console.log(\"ActionCreator-fetchmyContent, response is NOT OK\\nresponse: \", response);   \n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n      console.log(\"ActionCreator-fetchmyContent, NO response \\error.message: \", error.message); \n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(myContent => dispatch(addMyContent(myContent)))\n  .catch(error => dispatch(myContentFailed(error.message)));\n\n}\n\nexport const myContentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return{\n  type: ActionTypes.MYCONTENT_LOADING\n}}\n\nexport const myContentFailed = ((errmess) => {\n  return({\n  type: ActionTypes.MYCONTENT_FAILED,\n  payload: errmess});\n});\n\nexport const addMyContent = (myContent) => {\n  console.log(\"ActionCreator-addContent, content: \", myContent); \n  return({\n    type: ActionTypes.ADD_MYCONTENT,\n    payload: myContent\n  });\n}\n\n\n\n/// fetch content////\n\nexport const fetchContent = () => (dispatch) => {\n\n  dispatch(contentLoading(true));\n\n  return fetch(baseUrl + '/content'+\".json\")\n  .then(response => {\n      if (response.ok) {\n        console.log(\"ActionCreator-fetchContent, response is OK\\nresponse: \", response);        \n        return response;\n      } else {\n        console.log(\"ActionCreator-fetchContent, response is NOT OK\\nresponse: \", response);   \n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n      console.log(\"ActionCreator-fetchContent, NO response \\error.message: \", error.message); \n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(content => dispatch(addContent(content)))\n  .catch(error => dispatch(contentFailed(error.message)));\n\n}\n\nexport const contentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return{\n  type: ActionTypes.CONTENT_LOADING\n}}\n\nexport const contentFailed = ((errmess) => {\n  return({\n  type: ActionTypes.CONTENT_FAILED,\n  payload: errmess});\n});\n\nexport const addContent = (content) => {\n  console.log(\"ActionCreator-addContent, content: \", content); \n  return({\n    type: ActionTypes.ADD_CONTENT,\n    payload: content\n  });\n}\n\n\n\n\n///////////feedback///////////\n\nexport const postFeedback = ( firstName, lastName, telNum, email, agree, contactType, message) => (dispatch) => {\n\n  const newFeedback = {\n    firstName: firstName,\n    lastName: lastName,\n    telNum: telNum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  };\n  \n //previesdly the id and the date where added in comments.js\n  newFeedback.date = new Date().toISOString();\n  \n  return fetch(baseUrl + '/feedback'+\".json\", {\n      method: \"POST\",\n      body: JSON.stringify(newFeedback),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      //related to the backend \n      credentials: \"same-origin\"\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => {\n    dispatch(addFeedback(response));\n    alert('Your feedback was submited successfully');\n  })\n  .catch(error =>  { console.log('submmit feedback', error.message);\n   alert('Your feedback could not be submited\\nError: '+error.message); });\n};\n\nexport const addFeedback = (feedback) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: feedback\n});\n\n\n\n///////////comments////////////\n\n//since this is a punc, I need to add the dispatch. So, I'll send the function of a function\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n  const newComment = {\n      dishId: dishId,\n      rating: rating,\n      author: author,\n      comment: comment\n  };\n  \n //previesdly the id and the date where added in comments.js\n  newComment.date = new Date().toISOString();\n  \n  return fetch(baseUrl + '/comments'+\".json\", {\n      method: \"POST\",\n      body: JSON.stringify(newComment),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      //related to the backend \n      credentials: \"same-origin\"\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => dispatch(addComment(response)))\n  .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\n};\n\n\nexport const addComment = (comment) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment\n});\n\n\n\n//////////// LEADERS //////////////\n\nexport const fetchLeaders = () => (dispatch) => {\n\n  dispatch(leadersLoading(true));\n\n  return fetch(baseUrl + '/leaders'+\".json\")\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(leaders => dispatch(addLeaders(leaders)))\n  .catch(error => dispatch(leadersFailed(error.message)));\n\n}\n\n\nexport const leadersLoading = () => ({\n  type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = ((errmess) => {\n  return({\n  type: ActionTypes.LEADERS_FAILED,\n  payload: errmess});\n});\n\nexport const addLeaders = (leaders) => {\n  //alert(\"action creator, leader: \"+ JSON.stringify(leaders))\n  return({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n  });\n}\n\n/*\nexport const addLeaders = (leaders) => ({\n  type: ActionTypes.ADD_LEADERS,\n  payload: leaders\n});\n*/\n\n//////////// DISHES //////////////\n\n\nexport const fetchDishes = () => (dispatch) => {\n  console.log(\"ActionCreator-fetchDishes\");\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + '/dishes'+\".json\")\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(dishes => dispatch(addDishes(dishes)))\n    .catch(error => dispatch(dishesFailed(error.message)));\n\n}\n\n\n//returning an action\nexport const dishesLoading = () => {\n  console.log(\"ActionCreator-dishesLoading\");\n    return{type: ActionTypes.DISHES_LOADING}\n}\n\nexport const dishesFailed = ((errmess) => {\n    //alert(\"actionCreator.js - dishesFailed: \"+ errmess);\n    return({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess});\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\n\n//////////// COMMENTS //////////////\n\nexport const fetchComments = () => (dispatch) => {    \n    return fetch(baseUrl + '/comments'+\".json\")\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\n\n//////////// PROMOTIONS //////////////\n\nexport const fetchPromos = () => (dispatch) => {\n    \n    dispatch(promosLoading());\n\n    return fetch(baseUrl + '/promotions'+\".json\")\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)))\n    .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});"]},"metadata":{},"sourceType":"module"}