{"ast":null,"code":"var _jsxFileName = \"/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/src/component/HeaderComponent.js\";\nimport React, { Component, useState } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap'; // nav link auto maticly impliment the active component and a tag\n\nimport { NavLink } from 'react-router-dom';\nimport EditBox from './EditBoxComponent';\nimport { Tabs, Tab } from \"react-bootstrap\";\nimport initialContent from '../redux/initialContent';\nimport { LogoUrl } from '../shared/externalUrl';\nimport { useForm } from 'react-hook-form';\nimport { addMyContent } from '../redux/ActionCreators';\n\nconst Header = props => {\n  const [isNavOpen, setIsNavOpen] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalTab, setModalTab] = useState(\"login\");\n  const [loginUsername, setLoginUsername] = useState(\"\");\n  const [loginPassword, setLoginPassword] = useState(\"\");\n  const [signupUsername, setSignupUsername] = useState(\"\");\n  const [signupPassword, setSignupPassword] = useState(\"\");\n  const [signupRePassword, setSignupRePassword] = useState(\"\");\n  const [loginError, setLoginError] = useState(\"\");\n  const [signupError, setSignupError] = useState(\"\"); // TODO set the signup\n  // setup\n\n  console.log(\"HeaderComponent: render, myContent\", props.myContent);\n  var myContent = null;\n  var title = \"\";\n\n  if (props.myContent === null || props.isLoading == true) {\n    myContent = initialContent;\n  } else {\n    myContent = props.myContent;\n  }\n\n  const {\n    register,\n    errors\n  } = useForm();\n\n  function handleLogin(event) {\n    event.preventDefault();\n    console.log({\n      loginUsername,\n      loginPassword\n    });\n    var tmpError = \"\";\n    setLoginError(\"\");\n    const userContent = Object.values(props.content).filter(user => user.id === loginUsername)[0];\n\n    if (userContent) {\n      if (userContent.password === loginPassword) {\n        props.fetchMyContent(loginUsername);\n        setIsModalOpen(!isModalOpen);\n      } else {\n        //wrong password\n        tmpError = \"wrong password or user name\";\n      }\n    } else {\n      //create new user?\n      tmpError = \"user name not found\\nyou can easily creat new account in the sign up\";\n    }\n\n    if (tmpError !== \"\") {\n      setLoginError(tmpError);\n    }\n  }\n\n  function handleSignup(event) {\n    console.log({\n      signupUsername,\n      signupPassword,\n      signupRePassword\n    });\n    var tmpError = \"\";\n    setSignupError(\"\");\n\n    if (signupRePassword !== signupPassword) {\n      tmpError = \"passwords not match\\n\";\n    }\n\n    const userContent = Object.values(props.content).filter(user => user.id === signupUsername)[0];\n\n    if (userContent !== null && userContent !== undefined) {\n      tmpError += \"user name already exist\";\n    }\n\n    event.preventDefault();\n\n    if (tmpError !== \"\") {\n      setSignupError(tmpError);\n    } else {\n      const fields = [signupUsername, signupPassword, myContent.title, myContent.titleFontSize, myContent.description, myContent.descriptionFontSize, myContent.color, myContent.dishes];\n      props.myContent.id = signupUsername;\n      props.myContent.password = signupPassword;\n      props.signup(props.myContent); //intial user 0\n    }\n  }\n\n  function changeColor(color) {\n    console.log(color);\n    props.myContent.color = color;\n    props.putContent(props.myContent);\n  } //               blue              green             yellow             orange            red             perpel            grey \n\n\n  const colors = [[9, 116, 230, 1], [0, 201, 52, 1], [224, 254, 32, 1], [255, 127, 0, 1], [255, 0, 0, 1], [255, 13, 188, 1], [110, 110, 110, 1]];\n  const buttons = colors.map(color => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: \"color-button btn active\",\n      style: {\n        backgroundColor: \"rgba(\" + color + \")\"\n      },\n      onClick: () => changeColor(color),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    });\n  });\n  var jumbotronColor = \"\";\n  var navbarColor = \"\";\n\n  if (myContent !== null && myContent !== undefined) {\n    jumbotronColor = \"rgba(\" + myContent.color + \")\";\n    navbarColor = myContent.color.slice(0, 3).map(c => c / 2);\n    navbarColor.push(myContent.color[3]);\n    navbarColor = \"rgba(\" + navbarColor + \")\";\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    dark: true,\n    expand: \"md\",\n    style: {\n      backgroundColor: navbarColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(NavbarToggler, {\n    onClick: () => setIsNavOpen(!isNavOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(NavbarBrand, {\n    className: \"mr-auto\",\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: LogoUrl,\n    height: \"30\",\n    width: \"41\",\n    alt: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Collapse, {\n    isOpen: isNavOpen,\n    navbar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    navbar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"nav-link ml-md-5 offset-2 offset-md-0\",\n    to: \"/home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa fa-home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 37\n    }\n  }), \" Home\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"nav-link offset-2 offset-md-0\",\n    to: \"/aboutus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa fa-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 37\n    }\n  }), \" About Us\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"nav-link offset-2 offset-md-0\",\n    to: \"/menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa fa-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 37\n    }\n  }), \" Menu\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"nav-link offset-2 offset-md-0\",\n    to: \"/contactus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa fa-address-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 37\n    }\n  }), \" Contact US\"))), /*#__PURE__*/React.createElement(Nav, {\n    className: \"ml-auto\",\n    navbar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    onClick: () => setIsModalOpen(!isModalOpen),\n    className: \"nav-link offset-2 offset-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa fa-sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 136\n    }\n  }), \" Login\")))))), /*#__PURE__*/React.createElement(Jumbotron, {\n    style: {\n      backgroundColor: jumbotronColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row row-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-10 col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(EditBox, {\n    path: myContent.id,\n    field: \"title\",\n    putContent: props.putContent,\n    myContent: myContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(EditBox, {\n    path: myContent.id,\n    field: \"description\",\n    putContent: props.putContent,\n    myContent: myContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-1 offset-md-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }, buttons)))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isModalOpen,\n    toggle: () => setIsModalOpen(!isModalOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    id: \"controlled-tab-example\",\n    activeKey: modalTab,\n    onSelect: k => setModalTab(k),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    eventKey: \"login\",\n    title: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    name: \"login\",\n    onSubmit: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-12 col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 33\n    }\n  }, \"user name\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"col-12 col-md-9\",\n    name: \"loginUsername\",\n    value: loginUsername,\n    onChange: event => setLoginUsername(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-12 col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 33\n    }\n  }, \"password\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"col-12 col-md-9\",\n    type: \"password\",\n    name: \"loginPassword\",\n    value: loginPassword,\n    onChange: event => setLoginPassword(event.target.value),\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 33\n    }\n  }), errors.exampleRequired && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 60\n    }\n  }, \"This field is required\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    name: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 33\n    }\n  }, \"login\"))), /*#__PURE__*/React.createElement(Tab, {\n    eventKey: \"signUp\",\n    title: \"sign up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    name: \"signup\",\n    onSubmit: handleSignup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-12 col-md-3\",\n    style: {\n      marginTop: \"4px\",\n      marginBottom: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 33\n    }\n  }, \"user name\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"col-12 col-md-9\",\n    style: {\n      marginTop: \"4px\",\n      marginBottom: \"8px\"\n    },\n    name: \"signupUsername\",\n    value: signupUsername,\n    onChange: event => setSignupUsername(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-12 col-md-3\",\n    style: {\n      marginTop: \"4px\",\n      marginBottom: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 33\n    }\n  }, \"password\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"col-12 col-md-9\",\n    style: {\n      marginTop: \"4px\",\n      marginBottom: \"8px\"\n    },\n    type: \"password\",\n    name: \"signupPassword\",\n    value: signupPassword,\n    onChange: event => setSignupPassword(event.target.value),\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-12 col-md-3\",\n    style: {\n      marginTop: \"4px\",\n      marginBottom: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 33\n    }\n  }, \"re-enter password\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"col-12 col-md-9\",\n    style: {\n      marginTop: \"4px\",\n      marginBottom: \"8px\"\n    },\n    type: \"password\",\n    name: \"signupRePassword\",\n    value: signupRePassword,\n    onChange: event => setSignupRePassword(event.target.value),\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 33\n    }\n  }), errors.exampleRequired && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 60\n    }\n  }, \"This field is required\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    name: \"submit2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 33\n    }\n  }, \"signup\")))))));\n};\n\nexport default Header;","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/src/component/HeaderComponent.js"],"names":["React","Component","useState","Navbar","NavbarBrand","Nav","NavbarToggler","Collapse","NavItem","Jumbotron","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Input","Label","NavLink","EditBox","Tabs","Tab","initialContent","LogoUrl","useForm","addMyContent","Header","props","isNavOpen","setIsNavOpen","isModalOpen","setIsModalOpen","modalTab","setModalTab","loginUsername","setLoginUsername","loginPassword","setLoginPassword","signupUsername","setSignupUsername","signupPassword","setSignupPassword","signupRePassword","setSignupRePassword","loginError","setLoginError","signupError","setSignupError","console","log","myContent","title","isLoading","register","errors","handleLogin","event","preventDefault","tmpError","userContent","Object","values","content","filter","user","id","password","fetchMyContent","handleSignup","undefined","fields","titleFontSize","description","descriptionFontSize","color","dishes","signup","changeColor","putContent","colors","buttons","map","backgroundColor","jumbotronColor","navbarColor","slice","c","push","k","target","value","required","exampleRequired","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, {Component, useState } from 'react';\r\nimport {Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n     Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label} from 'reactstrap'\r\n// nav link auto maticly impliment the active component and a tag\r\nimport {NavLink} from 'react-router-dom';\r\nimport EditBox from './EditBoxComponent';\r\nimport {Tabs, Tab} from \"react-bootstrap\" ;\r\nimport initialContent from '../redux/initialContent'\r\nimport {LogoUrl} from '../shared/externalUrl'\r\nimport {useForm} from 'react-hook-form'\r\nimport {addMyContent} from '../redux/ActionCreators'\r\n\r\nconst Header = (props) => {\r\n\r\n    const [isNavOpen, setIsNavOpen] = useState(false);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [modalTab, setModalTab] = useState(\"login\");\r\n\r\n    const [loginUsername, setLoginUsername] = useState(\"\");\r\n    const [loginPassword, setLoginPassword] = useState(\"\");\r\n    \r\n    const [signupUsername, setSignupUsername] = useState(\"\");\r\n    const [signupPassword, setSignupPassword] = useState(\"\");\r\n    const [signupRePassword, setSignupRePassword] = useState(\"\");\r\n\r\n    const [loginError, setLoginError] = useState(\"\");\r\n    const [signupError, setSignupError] = useState(\"\");\r\n\r\n    // TODO set the signup\r\n\r\n\r\n    // setup\r\n    console.log(\"HeaderComponent: render, myContent\", props.myContent)\r\n    var myContent = null;\r\n    var title = \"\"\r\n\r\n    if(props.myContent === null || props.isLoading == true){\r\n        myContent = initialContent;\r\n    } else{\r\n        myContent = props.myContent;\r\n    }\r\n\r\n    const {register, errors} = useForm();\r\n\r\n    function handleLogin(event){\r\n        event.preventDefault();\r\n        console.log({loginUsername, loginPassword})\r\n        var tmpError = \"\";\r\n        setLoginError(\"\");\r\n    \r\n        const userContent = Object.values(props.content).filter((user) => user.id === loginUsername)[0];\r\n        if(userContent){\r\n            \r\n            if(userContent.password === loginPassword){\r\n                props.fetchMyContent(loginUsername)\r\n                setIsModalOpen(!isModalOpen);\r\n            }\r\n            else{\r\n                //wrong password\r\n                tmpError = \"wrong password or user name\";\r\n            }\r\n        }\r\n        else{\r\n            //create new user?\r\n            tmpError = \"user name not found\\nyou can easily creat new account in the sign up\";\r\n        }\r\n    \r\n        if(tmpError !== \"\"){\r\n            setLoginError(tmpError);\r\n        }\r\n    \r\n    }\r\n\r\n    function handleSignup(event){\r\n        console.log({signupUsername, signupPassword, signupRePassword})\r\n        var tmpError = \"\";\r\n        setSignupError(\"\");\r\n        \r\n        if(signupRePassword !== signupPassword){\r\n            tmpError = \"passwords not match\\n\";\r\n        }\r\n        const userContent = Object.values(props.content).filter((user) => user.id === signupUsername)[0];\r\n        if(userContent !== null && userContent !== undefined){\r\n            tmpError += \"user name already exist\";\r\n        }\r\n        \r\n        event.preventDefault();\r\n        if(tmpError !== \"\"){\r\n            setSignupError(tmpError);\r\n        }\r\n        else{\r\n            const fields = [signupUsername, signupPassword, myContent.title, myContent.titleFontSize,\r\n                myContent.description , myContent.descriptionFontSize, myContent.color, myContent.dishes];\r\n\r\n            props.myContent.id = signupUsername;\r\n            props.myContent.password = signupPassword;\r\n            props.signup(props.myContent)\r\n\r\n\r\n            //intial user 0\r\n        }   \r\n    }\r\n\r\n    function changeColor(color) {\r\n        console.log(color);  \r\n        props.myContent.color = color;\r\n        props.putContent(props.myContent)\r\n    }\r\n    \r\n    //               blue              green             yellow             orange            red             perpel            grey \r\n    const colors = [[9, 116, 230, 1], [0, 201 , 52, 1], [224, 254, 32, 1], [255, 127, 0, 1], [255, 0, 0, 1], [255, 13, 188, 1], [110, 110, 110, 1]]\r\n    const buttons = colors.map(color=> { return(\r\n        <button className=\"color-button btn active\" style={{backgroundColor:\"rgba(\"+color+\")\"}} onClick={() => changeColor(color)}></button>\r\n    )});\r\n\r\n    var jumbotronColor = \"\";\r\n    var navbarColor = \"\";\r\n    if(myContent !== null && myContent !== undefined){\r\n        jumbotronColor = \"rgba(\"+myContent.color+\")\";\r\n        navbarColor = (myContent.color.slice(0,3).map(c => c/2));\r\n        navbarColor.push(myContent.color[3]);\r\n        navbarColor = \"rgba(\"+navbarColor+\")\";\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Navbar dark expand=\"md\" style={{backgroundColor: navbarColor}}>\r\n                <div className=\"container\">\r\n                    <NavbarToggler onClick={() => setIsNavOpen(!isNavOpen)}/>\r\n                    <NavbarBrand className='mr-auto' href=\"/\">\r\n                        <img src={LogoUrl} height=\"30\" width=\"41\"\r\n                            alt={title}/>\r\n                    </NavbarBrand>\r\n                    <Collapse isOpen={isNavOpen} navbar>\r\n                        <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link ml-md-5 offset-2 offset-md-0\" to=\"/home\">\r\n                                    <span className=\"fa fa-home\"></span> Home\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link offset-2 offset-md-0\" to=\"/aboutus\">\r\n                                    <span className=\"fa fa-info\"></span> About Us\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link offset-2 offset-md-0\" to=\"/menu\">\r\n                                    <span className=\"fa fa-list\"></span> Menu\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link offset-2 offset-md-0\" to=\"/contactus\">\r\n                                    <span className=\"fa fa-address-card\"></span> Contact US\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem >\r\n                                <Button outline onClick={() => setIsModalOpen(!isModalOpen)} className=\"nav-link offset-2 offset-md-0\"><span className=\"fa fa-sign-in\"></span> Login</Button>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                </div>\r\n            </Navbar>\r\n            <Jumbotron style={{backgroundColor: jumbotronColor}}>\r\n                <div className=\"container\">\r\n                    <div className='row row-header'>\r\n                        <div className='col-10 col-md-6'>\r\n                            <EditBox path={myContent.id} field=\"title\" putContent ={ props.putContent} myContent={myContent}/>\r\n                            <EditBox path={myContent.id} field =\"description\" putContent ={ props.putContent} myContent={myContent}/>\r\n                        </div>\r\n                        <div className='col-1 offset-md-5'>\r\n                            {buttons}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Jumbotron>\r\n            <Modal isOpen={isModalOpen} toggle={() => setIsModalOpen(!isModalOpen)}>\r\n                <ModalBody>\r\n\r\n                    <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={modalTab}\r\n                    onSelect={(k) => setModalTab(k)}\r\n                    >\r\n                        <Tab eventKey=\"login\" title=\"login\">\r\n                            <form name=\"login\" onSubmit={handleLogin}>\r\n                                <label className=\"col-12 col-md-3\">user name</label>\r\n                                <input className=\"col-12 col-md-9\" name=\"loginUsername\" value={loginUsername}\r\n                                onChange={(event) => setLoginUsername(event.target.value)}/>\r\n                                <label className=\"col-12 col-md-3\">password</label>\r\n                                <input className=\"col-12 col-md-9\" type=\"password\" name=\"loginPassword\" value={loginPassword}\r\n                                 onChange={(event) => setLoginPassword(event.target.value)} \r\n                                    ref={register({ required: true })} />\r\n                                {errors.exampleRequired && <span>This field is required</span>}\r\n                                <button type=\"submit\" name=\"submit\">login</button>\r\n                            </form>\r\n                        </Tab>\r\n\r\n                        <Tab eventKey=\"signUp\" title=\"sign up\">\r\n                            <form name=\"signup\" onSubmit={handleSignup}>\r\n                                <label className=\"col-12 col-md-3\" style={{marginTop:\"4px\", marginBottom:\"8px\"}}>user name</label>\r\n                                <input className=\"col-12 col-md-9\" style={{marginTop:\"4px\", marginBottom:\"8px\"}} name=\"signupUsername\" value={signupUsername}\r\n                                 onChange={(event) => setSignupUsername(event.target.value)}/>\r\n                                \r\n                                <label className=\"col-12 col-md-3\" style={{marginTop:\"4px\", marginBottom:\"8px\"}}>password</label>\r\n                                <input className=\"col-12 col-md-9\" style={{marginTop:\"4px\", marginBottom:\"8px\"}} type=\"password\" name=\"signupPassword\" value={signupPassword}\r\n                                onChange={(event) => setSignupPassword(event.target.value)}\r\n                                ref={register({ required: true })} />\r\n                                \r\n                                <label className=\"col-12 col-md-3\" style={{marginTop:\"4px\", marginBottom:\"8px\"}}>re-enter password</label>\r\n                                <input className=\"col-12 col-md-9\" style={{marginTop:\"4px\", marginBottom:\"8px\"}} type=\"password\" name=\"signupRePassword\" value={signupRePassword}\r\n                                onChange={(event) => setSignupRePassword(event.target.value)}\r\n                                ref={register({ required: true })}  />\r\n                                \r\n                                {errors.exampleRequired && <span>This field is required</span>}\r\n                                <button type=\"submit\" name=\"submit2\">signup</button>\r\n                            </form>\r\n                        </Tab>\r\n                    </Tabs>\r\n                </ModalBody>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n   \r\n\r\n}\r\n\r\nexport default Header"]},"metadata":{},"sourceType":"module"}