{"ast":null,"code":"import _objectSpread from\"/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{createStore,combineReducers,applyMiddleware}from'redux';import{MyContent}from'./myContent';import{Content}from'./content';import{Dishes}from'./dishes';import{Comments}from'./comments';import{Promotions}from'./promotions';import{Leaders}from'./leaders';import thunk from'redux-thunk';import logger from'redux-logger';import{createForms}from'react-redux-form';import{InitialFeedback}from'./forms';export var ConfigureStore=function ConfigureStore(){console.log(\"configStore: Content\",Content);console.log(\"configStore: Dishes\",Dishes);var store=createStore(combineReducers(_objectSpread({myContent:MyContent,content:Content,dishes:Dishes,comments:Comments,promotions:Promotions,leaders:Leaders},createForms({feedback:InitialFeedback}))),applyMiddleware(thunk,logger));return store;};","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/src/redux/configerStore.js"],"names":["createStore","combineReducers","applyMiddleware","MyContent","Content","Dishes","Comments","Promotions","Leaders","thunk","logger","createForms","InitialFeedback","ConfigureStore","console","log","store","myContent","content","dishes","comments","promotions","leaders","feedback"],"mappings":"+LAAA,OAAQA,WAAR,CAAqBC,eAArB,CAAsCC,eAAtC,KAA6D,OAA7D,CAEA,OAASC,SAAT,KAA0B,aAA1B,CACA,OAASC,OAAT,KAAwB,WAAxB,CACA,OAASC,MAAT,KAAuB,UAAvB,CACA,OAASC,QAAT,KAAyB,YAAzB,CACA,OAASC,UAAT,KAA2B,cAA3B,CACA,OAASC,OAAT,KAAwB,WAAxB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,OAASC,eAAT,KAAgC,SAAhC,CAEA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAChCC,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAAoCX,OAApC,EACAU,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAmCV,MAAnC,EACA,GAAMW,CAAAA,KAAK,CAAGhB,WAAW,CACrBC,eAAe,gBACXgB,SAAS,CAAEd,SADA,CAEXe,OAAO,CAAEd,OAFE,CAGXe,MAAM,CAAEd,MAHG,CAIXe,QAAQ,CAAEd,QAJC,CAKXe,UAAU,CAAEd,UALD,CAMXe,OAAO,CAAEd,OANE,EAORG,WAAW,CAAC,CACXY,QAAQ,CAAEX,eADC,CAAD,CAPH,EADM,CAYrBV,eAAe,CAACO,KAAD,CAAQC,MAAR,CAZM,CAAzB,CAeA,MAAOM,CAAAA,KAAP,CACH,CAnBM","sourcesContent":["import {createStore, combineReducers, applyMiddleware } from 'redux';\n\nimport { MyContent } from './myContent';\nimport { Content } from './content';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\n\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { createForms } from 'react-redux-form';\nimport { InitialFeedback } from './forms';\n\nexport const ConfigureStore = () => {\n    console.log(\"configStore: Content\", Content)\n    console.log(\"configStore: Dishes\", Dishes)\n    const store = createStore(\n        combineReducers({\n            myContent: MyContent,\n            content: Content,\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}"]},"metadata":{},"sourceType":"module"}