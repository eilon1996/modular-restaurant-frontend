{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/externalUrl';\nimport cookie from 'react-cookies'; ////////////  signup  ////////////\n\nexport const signup = jsonObject => dispatch => {\n  return fetch(\"https://warm-fjord-92793.herokuapp.com/signup\", {\n    method: \"POST\",\n    body: JSON.stringify(jsonObject),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    console.log(\"signup\");\n\n    if (response.ok) {\n      console.log(\"response\", response);\n      return response;\n    } else {\n      console.log(\"response-error\", response);\n      return response;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => {\n    console.log(\"response.json()\", response);\n    jsonObject[\"token\"] = response[\"token\"];\n    cookie.save('auth', token, {\n      path: '/',\n      maxAge: 3600 * 24 * 30\n    });\n    addMyContent(jsonObject);\n    alert(\"you signed up succefuly\");\n  }).catch(error => {\n    console.log('submmit content', error.message);\n    alert('Your content could not be submited\\nError: ' + error.message);\n  });\n}; ///////////putContnet///////////\n\nexport const putContent = jsonObject => dispatch => {\n  console.log(\"ActionCreator-putcontent\", jsonObject);\n  addMyContent(jsonObject);\n  if (jsonObject.id === \"0\") return; // user 0 dont need to update the server\n\n  return fetch(baseUrl + '/content/' + jsonObject.id + \".json\", {\n    method: \"PATCH\",\n    body: JSON.stringify(jsonObject),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }) //.then(response => response.json())\n  //.then(response => {dispatch(addMyContent(response));  })\n  .catch(error => {\n    console.log('submmit content', error.message);\n    alert('Your content could not be submited\\nError: ' + error.message);\n  });\n}; /// fetch myContent////\n\nexport const fetchMyContent = id => dispatch => {\n  console.log(\"fetchMyContent, id:\", id);\n  dispatch(myContentLoading(true));\n\n  if (id === null) {\n    id = \"0\";\n  }\n\n  return fetch(baseUrl + '/content/' + id + \".json\").then(response => {\n    if (response.ok) {\n      console.log(\"ActionCreator-fetchmyContent, response is OK\\nresponse: \", response);\n      return response;\n    } else {\n      console.log(\"ActionCreator-fetchmyContent, response is NOT OK\\nresponse: \", response);\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    console.log(\"ActionCreator-fetchmyContent, NO response \\error.message: \", error.message);\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(myContent => dispatch(addMyContent(myContent))).catch(error => dispatch(myContentFailed(error.message)));\n};\nexport const myContentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.MYCONTENT_LOADING\n  };\n};\nexport const myContentFailed = errmess => {\n  return {\n    type: ActionTypes.MYCONTENT_FAILED,\n    payload: errmess\n  };\n};\nexport const addMyContent = myContent => {\n  console.log(\"ActionCreator-addContent, content: \", myContent);\n  return {\n    type: ActionTypes.ADD_MYCONTENT,\n    payload: myContent\n  };\n}; /// fetch content////\n\nexport const fetchContent = () => dispatch => {\n  return fetch(baseUrl + '/content' + \".json\").then(response => {\n    if (response.ok) {\n      console.log(\"ActionCreator-fetchContent, response is OK\\nresponse: \", response);\n      return response;\n    } else {\n      console.log(\"ActionCreator-fetchContent, response is NOT OK\\nresponse: \", response);\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    console.log(\"ActionCreator-fetchContent, NO response \\error.message: \", error.message);\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(content => dispatch(addContent(content))).catch(error => dispatch(contentFailed(error.message)));\n};\nexport const contentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.CONTENT_LOADING\n  };\n};\nexport const contentFailed = errmess => {\n  return {\n    type: ActionTypes.CONTENT_FAILED,\n    payload: errmess\n  };\n};\nexport const addContent = content => {\n  console.log(\"ActionCreator-addContent, content: \", content);\n  return {\n    type: ActionTypes.ADD_CONTENT,\n    payload: content\n  };\n}; ///////////feedback///////////\n\nexport const postFeedback = (firstName, lastName, telNum, email, agree, contactType, message) => dispatch => {\n  const newFeedback = {\n    firstName: firstName,\n    lastName: lastName,\n    telNum: telNum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  }; //previesdly the id and the date where added in comments.js\n\n  newFeedback.date = new Date().toISOString();\n  return fetch(baseUrl + '/feedback' + \".json\", {\n    method: \"POST\",\n    body: JSON.stringify(newFeedback),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    //related to the backend \n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => {\n    dispatch(addFeedback(response));\n    alert('Your feedback was submited successfully');\n  }).catch(error => {\n    console.log('submmit feedback', error.message);\n    alert('Your feedback could not be submited\\nError: ' + error.message);\n  });\n};\nexport const addFeedback = feedback => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: feedback\n}); ///////////comments////////////\n//since this is a punc, I need to add the dispatch. So, I'll send the function of a function\n\nexport const postComment = (id, rating, author, comment) => dispatch => {\n  const newComment = {\n    dishId: id,\n    rating: rating,\n    author: author,\n    comment: comment,\n    date: new Date().toISOString()\n  }; // add the comment place and id\n\n  return fetch(baseUrl + \"/comments.json\", {\n    method: \"POST\",\n    body: JSON.stringify(newComment),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    //related to the backend \n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }) // add the comment value\n\n  /*\n  .then( (originResponse) => \n    fetch(baseUrl + \"/comments/\"+count+\".json\", {\n      method: \"PATCH\",\n      body: JSON.stringify(newCommentContent),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      //related to the backend \n      credentials: \"same-origin\"\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  )*/\n  .then(response => response.json()).then(response => dispatch(addComment(response))).catch(error => {\n    console.log('post comments', error.message);\n    alert('Your comment could not be posted\\nError: ' + error.message);\n  });\n};\nexport const addComment = comment => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment\n}); //////////// LEADERS //////////////\n\nexport const fetchLeaders = () => dispatch => {\n  dispatch(leadersLoading(true));\n  return fetch(baseUrl + '/leaders' + \".json\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(leaders => dispatch(addLeaders(leaders))).catch(error => dispatch(leadersFailed(error.message)));\n};\nexport const leadersLoading = () => ({\n  type: ActionTypes.LEADERS_LOADING\n});\nexport const leadersFailed = errmess => {\n  return {\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n  };\n};\nexport const addLeaders = leaders => {\n  //alert(\"action creator, leader: \"+ JSON.stringify(leaders))\n  return {\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n  };\n};\n/*\nexport const addLeaders = (leaders) => ({\n  type: ActionTypes.ADD_LEADERS,\n  payload: leaders\n});\n*/\n//////////// DISHES //////////////\n\nexport const fetchDishes = () => dispatch => {\n  console.log(\"ActionCreator-fetchDishes\");\n  dispatch(dishesLoading(true));\n  return fetch(baseUrl + '/dishes' + \".json\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(dishes => dispatch(addDishes(dishes))).catch(error => dispatch(dishesFailed(error.message)));\n}; //returning an action\n\nexport const dishesLoading = () => {\n  console.log(\"ActionCreator-dishesLoading\");\n  return {\n    type: ActionTypes.DISHES_LOADING\n  };\n};\nexport const dishesFailed = errmess => {\n  //alert(\"actionCreator.js - dishesFailed: \"+ errmess);\n  return {\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n  };\n};\nexport const addDishes = dishes => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n}); //////////// COMMENTS //////////////\n\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + '/comments' + \".json\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(comments => dispatch(addComments(comments))).catch(error => dispatch(commentsFailed(error.message)));\n};\nexport const commentsFailed = errmess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n}); //////////// PROMOTIONS //////////////\n\nexport const fetchPromos = () => dispatch => {\n  dispatch(promosLoading());\n  return fetch(baseUrl + '/promotions' + \".json\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(promos => dispatch(addPromos(promos))).catch(error => dispatch(promosFailed(error.message)));\n};\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING\n});\nexport const promosFailed = errmess => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess\n});\nexport const addPromos = promos => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});","map":{"version":3,"sources":["/home/eilon/programing/full-stack/confusion-new/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","cookie","signup","jsonObject","dispatch","fetch","method","body","JSON","stringify","headers","credentials","then","response","console","log","ok","error","json","save","token","path","maxAge","addMyContent","alert","catch","message","putContent","id","Error","status","statusText","fetchMyContent","myContentLoading","errmess","myContent","myContentFailed","type","MYCONTENT_LOADING","MYCONTENT_FAILED","payload","ADD_MYCONTENT","fetchContent","content","addContent","contentFailed","contentLoading","CONTENT_LOADING","CONTENT_FAILED","ADD_CONTENT","postFeedback","firstName","lastName","telNum","email","agree","contactType","newFeedback","date","Date","toISOString","addFeedback","feedback","ADD_COMMENT","postComment","rating","author","comment","newComment","dishId","addComment","fetchLeaders","leadersLoading","leaders","addLeaders","leadersFailed","LEADERS_LOADING","LEADERS_FAILED","ADD_LEADERS","fetchDishes","dishesLoading","dishes","addDishes","dishesFailed","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS"],"mappings":"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","sourcesContent":["\nimport * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/externalUrl';\nimport cookie from 'react-cookies';\n\n\n////////////  signup  ////////////\n\nexport const signup = (jsonObject) => (dispatch) => {\n  \n  return fetch(\"https://warm-fjord-92793.herokuapp.com/signup\", {\n      method: \"POST\",\n      body: JSON.stringify(jsonObject),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      credentials: \"same-origin\"\n  })\n  .then(response => {\n    console.log(\"signup\");\n      if (response.ok) {\n        console.log(\"response\", response);\n        return response;\n      } else {\n        console.log(\"response-error\", response);\n        return response;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => {\n    console.log(\"response.json()\", response);\n    jsonObject[\"token\"] = response[\"token\"];\n    cookie.save('auth', token, { path: '/', maxAge: 3600 * 24 * 30 });\n    addMyContent(jsonObject);\n    alert(\"you signed up succefuly\");\n  })\n  .catch(error =>  { console.log('submmit content', error.message);\n   alert('Your content could not be submited\\nError: '+error.message); });\n};\n\n\n\n///////////putContnet///////////\n\nexport const putContent = (jsonObject) => (dispatch) => {\n\n  console.log(\"ActionCreator-putcontent\", jsonObject);\n\n  addMyContent(jsonObject);\n  if(jsonObject.id === \"0\")  return; // user 0 dont need to update the server\n\n  return fetch(baseUrl + '/content/'+jsonObject.id+\".json\", {\n      method: \"PATCH\",\n      body: JSON.stringify(jsonObject),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"same-origin\"\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  //.then(response => response.json())\n  //.then(response => {dispatch(addMyContent(response));  })\n  .catch(error =>  { console.log('submmit content', error.message);\n   alert('Your content could not be submited\\nError: '+error.message); });\n};\n\n\n\n/// fetch myContent////\n\nexport const fetchMyContent = (id) => (dispatch) => {\n\n  console.log(\"fetchMyContent, id:\", id);\n  dispatch(myContentLoading(true));\n\n  if(id === null){\n    id = \"0\";\n  }\n  return fetch(baseUrl + '/content/'+id+\".json\")\n  .then(response => {\n      if (response.ok) {\n        console.log(\"ActionCreator-fetchmyContent, response is OK\\nresponse: \", response);        \n        return response;\n      } else {\n        console.log(\"ActionCreator-fetchmyContent, response is NOT OK\\nresponse: \", response);   \n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n      console.log(\"ActionCreator-fetchmyContent, NO response \\error.message: \", error.message); \n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(myContent => dispatch(addMyContent(myContent)))\n  .catch(error => dispatch(myContentFailed(error.message)));\n\n}\n\nexport const myContentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return{\n  type: ActionTypes.MYCONTENT_LOADING\n}}\n\nexport const myContentFailed = ((errmess) => {\n  return({\n  type: ActionTypes.MYCONTENT_FAILED,\n  payload: errmess});\n});\n\nexport const addMyContent = (myContent) => {\n  console.log(\"ActionCreator-addContent, content: \", myContent); \n  return({\n    type: ActionTypes.ADD_MYCONTENT,\n    payload: myContent\n  });\n}\n\n\n\n/// fetch content////\n\nexport const fetchContent = () => (dispatch) => {\n\n  return fetch(baseUrl + '/content'+\".json\")\n  .then(response => {\n      if (response.ok) {\n        console.log(\"ActionCreator-fetchContent, response is OK\\nresponse: \", response);        \n        return response;\n      } else {\n        console.log(\"ActionCreator-fetchContent, response is NOT OK\\nresponse: \", response);   \n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n      console.log(\"ActionCreator-fetchContent, NO response \\error.message: \", error.message); \n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(content => dispatch(addContent(content)))\n  .catch(error => dispatch(contentFailed(error.message)));\n\n}\n\nexport const contentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return{\n  type: ActionTypes.CONTENT_LOADING\n}}\n\nexport const contentFailed = ((errmess) => {\n  return({\n  type: ActionTypes.CONTENT_FAILED,\n  payload: errmess});\n});\n\nexport const addContent = (content) => {\n  console.log(\"ActionCreator-addContent, content: \", content); \n  return({\n    type: ActionTypes.ADD_CONTENT,\n    payload: content\n  });\n}\n\n\n\n\n///////////feedback///////////\n\nexport const postFeedback = ( firstName, lastName, telNum, email, agree, contactType, message) => (dispatch) => {\n\n  const newFeedback = {\n    firstName: firstName,\n    lastName: lastName,\n    telNum: telNum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  };\n  \n //previesdly the id and the date where added in comments.js\n  newFeedback.date = new Date().toISOString();\n  \n  return fetch(baseUrl + '/feedback'+\".json\", {\n      method: \"POST\",\n      body: JSON.stringify(newFeedback),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      //related to the backend \n      credentials: \"same-origin\"\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => {\n    dispatch(addFeedback(response));\n    alert('Your feedback was submited successfully');\n  })\n  .catch(error =>  { console.log('submmit feedback', error.message);\n   alert('Your feedback could not be submited\\nError: '+error.message); });\n};\n\nexport const addFeedback = (feedback) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: feedback\n});\n\n\n\n///////////comments////////////\n\n//since this is a punc, I need to add the dispatch. So, I'll send the function of a function\nexport const postComment = (id, rating, author, comment) => (dispatch) => {\n\n\n  const newComment = \n  {\n    dishId: id,\n    rating: rating,\n    author: author,\n    comment: comment,\n    date: new Date().toISOString()\n  }\n  \n    // add the comment place and id\n  return fetch(baseUrl + \"/comments.json\", {\n      method: \"POST\",\n      body: JSON.stringify(newComment),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      //related to the backend \n      credentials: \"same-origin\"\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n    // add the comment value\n    /*\n  .then( (originResponse) => \n      fetch(baseUrl + \"/comments/\"+count+\".json\", {\n        method: \"PATCH\",\n        body: JSON.stringify(newCommentContent),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        //related to the backend \n        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n  )*/\n  .then(response => response.json())\n  .then(response => dispatch(addComment(response)))\n  .catch(error =>  { console.log('post comments', error.message);\n   alert('Your comment could not be posted\\nError: '+error.message); \n});\n};\n\n\nexport const addComment = (comment) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment\n});\n\n\n\n//////////// LEADERS //////////////\n\nexport const fetchLeaders = () => (dispatch) => {\n\n  dispatch(leadersLoading(true));\n\n  return fetch(baseUrl + '/leaders'+\".json\")\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(leaders => dispatch(addLeaders(leaders)))\n  .catch(error => dispatch(leadersFailed(error.message)));\n\n}\n\n\nexport const leadersLoading = () => ({\n  type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = ((errmess) => {\n  return({\n  type: ActionTypes.LEADERS_FAILED,\n  payload: errmess});\n});\n\nexport const addLeaders = (leaders) => {\n  //alert(\"action creator, leader: \"+ JSON.stringify(leaders))\n  return({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n  });\n}\n\n/*\nexport const addLeaders = (leaders) => ({\n  type: ActionTypes.ADD_LEADERS,\n  payload: leaders\n});\n*/\n\n//////////// DISHES //////////////\n\n\nexport const fetchDishes = () => (dispatch) => {\n  console.log(\"ActionCreator-fetchDishes\");\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + '/dishes'+\".json\")\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(dishes => dispatch(addDishes(dishes)))\n    .catch(error => dispatch(dishesFailed(error.message)));\n\n}\n\n\n//returning an action\nexport const dishesLoading = () => {\n  console.log(\"ActionCreator-dishesLoading\");\n    return{type: ActionTypes.DISHES_LOADING}\n}\n\nexport const dishesFailed = ((errmess) => {\n    //alert(\"actionCreator.js - dishesFailed: \"+ errmess);\n    return({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess});\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\n\n//////////// COMMENTS //////////////\n\nexport const fetchComments = () => (dispatch) => {    \n    return fetch(baseUrl + '/comments'+\".json\")\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\n\n//////////// PROMOTIONS //////////////\n\nexport const fetchPromos = () => (dispatch) => {\n    \n    dispatch(promosLoading());\n\n    return fetch(baseUrl + '/promotions'+\".json\")\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)))\n    .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});"]},"metadata":{},"sourceType":"module"}