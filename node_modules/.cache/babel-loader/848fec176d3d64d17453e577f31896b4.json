{"ast":null,"code":"import { useRef, useCallback, useEffect, useMemo } from 'react';\nexport default function useDebouncedCallback(func, wait, options) {\n  var _this = this;\n\n  if (options === void 0) {\n    options = {\n      leading: false,\n      trailing: true\n    };\n  }\n\n  var lastCallTime = useRef(undefined);\n  var lastInvokeTime = useRef(0);\n  var timerId = useRef(undefined);\n  var lastArgs = useRef([]);\n  var lastThis = useRef(null);\n  var result = useRef(null);\n  var funcRef = useRef(func);\n  var mounted = useRef(true);\n  funcRef.current = func; // Bypass `requestAnimationFrame` by explicitly setting `wait=0`.\n\n  var useRAF = !wait && wait !== 0 && typeof window !== 'undefined' && typeof window.requestAnimationFrame === 'function';\n\n  if (typeof func !== 'function') {\n    throw new TypeError('Expected a function');\n  }\n\n  wait = Number(wait) || 0;\n  var leading = !!options.leading;\n  var trailing = 'trailing' in options ? !!options.trailing : true;\n  var maxing = ('maxWait' in options);\n  var maxWait = maxing ? Math.max(Number(options.maxWait) || 0, wait) : undefined;\n  var invokeFunc = useCallback(function (time) {\n    var args = lastArgs.current;\n    var thisArg = lastThis.current;\n    lastArgs.current = lastThis.current = undefined;\n    lastInvokeTime.current = time;\n    result.current = funcRef.current.apply(thisArg, args);\n    return result.current;\n  }, []);\n  var startTimer = useCallback(function (pendingFunc, wait) {\n    if (useRAF) {\n      window.cancelAnimationFrame(timerId.current);\n      return window.requestAnimationFrame(pendingFunc);\n    }\n\n    return setTimeout(pendingFunc, wait);\n  }, [useRAF]);\n  var cancelTimer = useCallback(function (id) {\n    if (useRAF) {\n      return window.cancelAnimationFrame(id);\n    }\n\n    clearTimeout(id);\n  }, [useRAF]);\n  var remainingWait = useCallback(function (time) {\n    var timeSinceLastCall = time - lastCallTime.current;\n    var timeSinceLastInvoke = time - lastInvokeTime.current;\n    var timeWaiting = wait - timeSinceLastCall;\n    return maxing ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;\n  }, [maxWait, maxing, wait]);\n  var shouldInvoke = useCallback(function (time) {\n    if (!mounted.current) return false;\n    var timeSinceLastCall = time - lastCallTime.current;\n    var timeSinceLastInvoke = time - lastInvokeTime.current; // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n\n    return lastCallTime.current === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n  }, [maxWait, maxing, wait]);\n  var trailingEdge = useCallback(function (time) {\n    timerId.current = undefined; // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n\n    if (trailing && lastArgs.current) {\n      return invokeFunc(time);\n    }\n\n    lastArgs.current = lastThis.current = undefined;\n    return result.current;\n  }, [invokeFunc, trailing]);\n  var timerExpired = useCallback(function () {\n    var time = Date.now();\n\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    } // Restart the timer.\n\n\n    timerId.current = startTimer(timerExpired, remainingWait(time));\n  }, [remainingWait, shouldInvoke, startTimer, trailingEdge]);\n  var leadingEdge = useCallback(function (time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime.current = time; // Start the timer for the trailing edge.\n\n    timerId.current = startTimer(timerExpired, wait); // Invoke the leading edge.\n\n    return leading ? invokeFunc(time) : result.current;\n  }, [invokeFunc, startTimer, leading, timerExpired, wait]);\n  var cancel = useCallback(function () {\n    if (timerId.current !== undefined) {\n      cancelTimer(timerId.current);\n    }\n\n    lastInvokeTime.current = 0;\n    lastArgs.current = lastCallTime.current = lastThis.current = timerId.current = undefined;\n  }, [cancelTimer]);\n  var flush = useCallback(function () {\n    return timerId.current === undefined ? result.current : trailingEdge(Date.now());\n  }, [trailingEdge]);\n  useEffect(function () {\n    mounted.current = true;\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  var debounced = useCallback(function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var time = Date.now();\n    var isInvoking = shouldInvoke(time);\n    lastArgs.current = args;\n    lastThis.current = _this;\n    lastCallTime.current = time;\n\n    if (isInvoking) {\n      if (timerId.current === undefined && mounted.current) {\n        return leadingEdge(lastCallTime.current);\n      }\n\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId.current = startTimer(timerExpired, wait);\n        return invokeFunc(lastCallTime.current);\n      }\n    }\n\n    if (timerId.current === undefined) {\n      timerId.current = startTimer(timerExpired, wait);\n    }\n\n    return result.current;\n  }, [invokeFunc, leadingEdge, maxing, shouldInvoke, startTimer, timerExpired, wait]);\n  var pending = useCallback(function () {\n    return timerId.current !== undefined;\n  }, []);\n  var debouncedState = useMemo(function () {\n    return {\n      callback: debounced,\n      cancel: cancel,\n      flush: flush,\n      pending: pending\n    };\n  }, [debounced, cancel, flush, pending]);\n  return debouncedState;\n}","map":{"version":3,"sources":["/home/eilon/programing/full-stack/confusion-new/confusion/node_modules/use-debounce/esm/useDebouncedCallback.js"],"names":["useRef","useCallback","useEffect","useMemo","useDebouncedCallback","func","wait","options","_this","leading","trailing","lastCallTime","undefined","lastInvokeTime","timerId","lastArgs","lastThis","result","funcRef","mounted","current","useRAF","window","requestAnimationFrame","TypeError","Number","maxing","maxWait","Math","max","invokeFunc","time","args","thisArg","apply","startTimer","pendingFunc","cancelAnimationFrame","setTimeout","cancelTimer","id","clearTimeout","remainingWait","timeSinceLastCall","timeSinceLastInvoke","timeWaiting","min","shouldInvoke","trailingEdge","timerExpired","Date","now","leadingEdge","cancel","flush","debounced","_i","arguments","length","isInvoking","pending","debouncedState","callback"],"mappings":"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","sourcesContent":["import { useRef, useCallback, useEffect, useMemo } from 'react';\nexport default function useDebouncedCallback(func, wait, options) {\n    var _this = this;\n    if (options === void 0) { options = { leading: false, trailing: true }; }\n    var lastCallTime = useRef(undefined);\n    var lastInvokeTime = useRef(0);\n    var timerId = useRef(undefined);\n    var lastArgs = useRef([]);\n    var lastThis = useRef(null);\n    var result = useRef(null);\n    var funcRef = useRef(func);\n    var mounted = useRef(true);\n    funcRef.current = func;\n    // Bypass `requestAnimationFrame` by explicitly setting `wait=0`.\n    var useRAF = !wait && wait !== 0 && typeof window !== 'undefined' && typeof window.requestAnimationFrame === 'function';\n    if (typeof func !== 'function') {\n        throw new TypeError('Expected a function');\n    }\n    wait = Number(wait) || 0;\n    var leading = !!options.leading;\n    var trailing = 'trailing' in options ? !!options.trailing : true;\n    var maxing = 'maxWait' in options;\n    var maxWait = maxing ? Math.max(Number(options.maxWait) || 0, wait) : undefined;\n    var invokeFunc = useCallback(function (time) {\n        var args = lastArgs.current;\n        var thisArg = lastThis.current;\n        lastArgs.current = lastThis.current = undefined;\n        lastInvokeTime.current = time;\n        result.current = funcRef.current.apply(thisArg, args);\n        return result.current;\n    }, []);\n    var startTimer = useCallback(function (pendingFunc, wait) {\n        if (useRAF) {\n            window.cancelAnimationFrame(timerId.current);\n            return window.requestAnimationFrame(pendingFunc);\n        }\n        return setTimeout(pendingFunc, wait);\n    }, [useRAF]);\n    var cancelTimer = useCallback(function (id) {\n        if (useRAF) {\n            return window.cancelAnimationFrame(id);\n        }\n        clearTimeout(id);\n    }, [useRAF]);\n    var remainingWait = useCallback(function (time) {\n        var timeSinceLastCall = time - lastCallTime.current;\n        var timeSinceLastInvoke = time - lastInvokeTime.current;\n        var timeWaiting = wait - timeSinceLastCall;\n        return maxing ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;\n    }, [maxWait, maxing, wait]);\n    var shouldInvoke = useCallback(function (time) {\n        if (!mounted.current)\n            return false;\n        var timeSinceLastCall = time - lastCallTime.current;\n        var timeSinceLastInvoke = time - lastInvokeTime.current;\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime.current === undefined ||\n            timeSinceLastCall >= wait ||\n            timeSinceLastCall < 0 ||\n            (maxing && timeSinceLastInvoke >= maxWait));\n    }, [maxWait, maxing, wait]);\n    var trailingEdge = useCallback(function (time) {\n        timerId.current = undefined;\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs.current) {\n            return invokeFunc(time);\n        }\n        lastArgs.current = lastThis.current = undefined;\n        return result.current;\n    }, [invokeFunc, trailing]);\n    var timerExpired = useCallback(function () {\n        var time = Date.now();\n        if (shouldInvoke(time)) {\n            return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId.current = startTimer(timerExpired, remainingWait(time));\n    }, [remainingWait, shouldInvoke, startTimer, trailingEdge]);\n    var leadingEdge = useCallback(function (time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime.current = time;\n        // Start the timer for the trailing edge.\n        timerId.current = startTimer(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result.current;\n    }, [invokeFunc, startTimer, leading, timerExpired, wait]);\n    var cancel = useCallback(function () {\n        if (timerId.current !== undefined) {\n            cancelTimer(timerId.current);\n        }\n        lastInvokeTime.current = 0;\n        lastArgs.current = lastCallTime.current = lastThis.current = timerId.current = undefined;\n    }, [cancelTimer]);\n    var flush = useCallback(function () {\n        return timerId.current === undefined ? result.current : trailingEdge(Date.now());\n    }, [trailingEdge]);\n    useEffect(function () {\n        mounted.current = true;\n        return function () {\n            mounted.current = false;\n        };\n    }, []);\n    var debounced = useCallback(function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var time = Date.now();\n        var isInvoking = shouldInvoke(time);\n        lastArgs.current = args;\n        lastThis.current = _this;\n        lastCallTime.current = time;\n        if (isInvoking) {\n            if (timerId.current === undefined && mounted.current) {\n                return leadingEdge(lastCallTime.current);\n            }\n            if (maxing) {\n                // Handle invocations in a tight loop.\n                timerId.current = startTimer(timerExpired, wait);\n                return invokeFunc(lastCallTime.current);\n            }\n        }\n        if (timerId.current === undefined) {\n            timerId.current = startTimer(timerExpired, wait);\n        }\n        return result.current;\n    }, [invokeFunc, leadingEdge, maxing, shouldInvoke, startTimer, timerExpired, wait]);\n    var pending = useCallback(function () {\n        return timerId.current !== undefined;\n    }, []);\n    var debouncedState = useMemo(function () { return ({\n        callback: debounced,\n        cancel: cancel,\n        flush: flush,\n        pending: pending,\n    }); }, [debounced, cancel, flush, pending]);\n    return debouncedState;\n}\n"]},"metadata":{},"sourceType":"module"}