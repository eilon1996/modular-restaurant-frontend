{"ast":null,"code":"var _jsxFileName = \"/home/eilon/programing/full-stack/React/confusion/confusion-origin/confusion/src/component/EditBoxComponent.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Form, Input, Button, Label } from 'reactstrap';\nimport '../App.css';\nimport styles from './aaaa.module.css';\n\nconst EditBox = props => {\n  const [text, setText] = useState(null);\n  const [edit, setEdit] = useState(false);\n\n  if (props.content === null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 16\n      }\n    });\n  }\n\n  var field_index = 0;\n  var placeHolder = \"\";\n  var type = \"text\";\n  var fontSize = \"40px\"; //var currentText = \"\"\n\n  console.log(\"EditBox: props.content\", JSON.stringify(props.content), \" props.feild_name: \", props.field_name);\n\n  switch (props.field_name) {\n    case \"title\":\n      if (text === null) {\n        setText(props.content.title);\n      }\n\n      placeHolder = \"restrunt name\";\n      break;\n\n    case \"description\":\n      if (text === null) {\n        setText(props.content.description);\n      }\n\n      field_index = 1;\n      placeHolder = \"restrunt description\";\n      type = \"textarea\";\n      fontSize = \"20px\";\n  }\n\n  function handleChange(event) {\n    console.log(\"EditBox: event.value: \", event.target.value);\n    setText(event.target.value);\n    console.log(\"EditBox: text: \", text);\n  }\n\n  function handleSubmit(event) {\n    var fields = [props.content.title, props.content.description];\n    fields[field_index] = text;\n    console.log(fields);\n    props.putContent(fields);\n    setEdit(false);\n    event.preventDefault();\n  }\n\n  function handleOnClick() {\n    setEdit(true);\n  }\n\n  if (edit) {\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: event => handleSubmit(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      style: {\n        fontSize: fontSize\n      },\n      type: type,\n      value: text,\n      onChange: event => handleChange(event),\n      placeholder: placeHolder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      value: \"Submit\",\n      className: styles.EditBoxButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"save\")); //<Button type=\"submit\" value=\"Submit\" className='editBoxButton'>save</Button>\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        padding: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        fontSize: fontSize,\n        mb: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, text), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        height: '22px',\n        width: '50px',\n        fontSize: '14px',\n        padding: '0px'\n      },\n      onClick: () => handleOnClick(),\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 48\n      }\n    }, \"edit\")))))\n    /*\n     <div>\n        <div className=\"row\">\n            <div className=\"col-6\" >\n                <div style={{fontSize:fontSize}}>{text}</div> <br/>\n                <Button style={{height: '30px', width : '80px', fontSize:'14px'}}  onClick={()=>handleOnClick()} value=\"Submit\">edit</Button>\n            </div>\n        </div>\n    </div>\n    */\n    ;\n  }\n};\n\nexport default EditBox;\n/*\nimport React, {Component} from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Label, Col , Row } from 'reactstrap'\nimport { Control, Form, Errors, Input} from 'react-redux-form';\n\nclass EditBox extends Component{\n\n    constructor(props){\n        super (props)\n\n        this.state = {\n            edit: false,\n            text:this.props.text\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values){\n        console.log(\"handleSubmit\", values)\n        this.props.putText(this.state.text, this.props.id, this.props.username);\n\n        this.setState({\n            edit: !this.state.edit\n        });\n    }\n\n\n    onClick(){\n\n        console.log(\"onClick\", this.state.edit)\n        this.setState({\n            edit: !this.state.edit\n        });\n    }\n\n    handleInputChange(event){\n            // This will update specific key in your form object inside the local state\n        this.setState({\n            form: Object.assign({}, this.state.form, {\n            [event.target.text]: event.target.value,\n        }),\n        });\n    }\n\n\n    render(){\n\n        \n\n        if(this.state.edit){\n\n            return( \n                <div>\n            <Form model=\"text\" onSubmit={(values) => this.handleSubmit(values)}>\n                <Control.textarea model=\".text\" id={this.props.id} name=\"text\" style = {{fontSize:\"35px\"}}\n                    rows={this.props.rows_num} \n                    className=\"form-control\"  \n                    onChange={event => this.handleInputChange(event)}\n                    defaultValue={this.props.text}/>\n\n                <Button type=\"submit\">save</Button>\n            </Form>\n\n            \n                </div>\n            );        \n            // onChange={this.handleInputChange}                   \n        }               \n        else{\n            return(\n            <div>\n                <div className = 'row'>\n                    <span style = {{fontSize:\"45px\", fontWeight:\"normal\"}}>{this.props.text} </span>\n                </div>\n                \n                <div className = 'row'>\n                    <Button onClick={()=>this.onClick()}>edit</Button>\n                </div>\n            </div>\n            );\n        }\n\n    }\n}\n\nexport default EditBox;\n\n*/","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion/confusion-origin/confusion/src/component/EditBoxComponent.js"],"names":["React","useState","useEffect","Form","Input","Button","Label","styles","EditBox","props","text","setText","edit","setEdit","content","field_index","placeHolder","type","fontSize","console","log","JSON","stringify","field_name","title","description","handleChange","event","target","value","handleSubmit","fields","putContent","preventDefault","handleOnClick","EditBoxButton","padding","mb","height","width"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Form, Input, Button, Label} from 'reactstrap';\nimport '../App.css';\nimport styles from  './aaaa.module.css';\n\n\nconst EditBox = (props) => {\n\n    const [text, setText] = useState(null);\n    const [edit, setEdit] = useState(false)\n\n    if (props.content === null){\n        return <div></div>\n    }\n\n    var field_index = 0;\n    var placeHolder=\"\";\n    var type = \"text\";\n    var fontSize = \"40px\";\n    //var currentText = \"\"\n    console.log(\"EditBox: props.content\", JSON.stringify(props.content), \" props.feild_name: \", props.field_name)\n    switch (props.field_name){\n        case \"title\":\n            if (text === null){\n                setText(props.content.title)\n            }\n            placeHolder=\"restrunt name\";\n            break;\n\n        case \"description\":\n            if (text === null){\n                setText(props.content.description)\n            }\n            field_index = 1;\n            placeHolder=\"restrunt description\";\n            type = \"textarea\";\n            fontSize = \"20px\";\n    }\n    \n    \n    function handleChange(event){        \n        console.log(\"EditBox: event.value: \", event.target.value);\n        setText(event.target.value);\n        console.log(\"EditBox: text: \", text);\n    }\n    \n  \n    function handleSubmit(event){\n        var fields = [props.content.title, props.content.description];\n        fields[field_index] = text;\n        console.log(fields);\n        props.putContent(fields);\n        setEdit(false)\n        event.preventDefault();\n    }\n    function handleOnClick(){\n        setEdit(true);\n    }\n    \n    if(edit){\n        return(\n            <Form onSubmit={(event)=> handleSubmit(event)}>\n                <Input  style={{fontSize:fontSize}} type={type} value={text} onChange={(event) => handleChange(event)}\n                    placeholder={placeHolder}/>\n                <Button type=\"submit\" value=\"Submit\" className={styles.EditBoxButton}>save</Button>\n            </Form>\n        );\n        //<Button type=\"submit\" value=\"Submit\" className='editBoxButton'>save</Button>\n    }\n    else{\n\n        return(\n            <div>\n                <div className=\"row\"  style={{ padding: \"10px\"}}>\n                    <div className=\"col-6\" >\n                        <div  className=\"row\" style={{fontSize:fontSize, mb:0}}>{text}</div> \n                        <div  className=\"row\" ><Button style={{height: '22px', width : '50px', fontSize:'14px', padding:'0px'}}\n                          onClick={()=>handleOnClick()} value=\"Submit\">edit</Button></div>\n                    </div>\n                </div>\n            </div>\n\n            /*\n\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-6\" >\n                        <div style={{fontSize:fontSize}}>{text}</div> <br/>\n                        <Button style={{height: '30px', width : '80px', fontSize:'14px'}}  onClick={()=>handleOnClick()} value=\"Submit\">edit</Button>\n                    </div>\n                </div>\n            </div>\n            */\n        );\n    }\n\n}\n\nexport default EditBox;\n\n\n\n\n\n\n/*\nimport React, {Component} from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Label, Col , Row } from 'reactstrap'\nimport { Control, Form, Errors, Input} from 'react-redux-form';\n\nclass EditBox extends Component{\n\n    constructor(props){\n        super (props)\n\n        this.state = {\n            edit: false,\n            text:this.props.text\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values){\n        console.log(\"handleSubmit\", values)\n        this.props.putText(this.state.text, this.props.id, this.props.username);\n\n        this.setState({\n            edit: !this.state.edit\n        });\n    }\n\n\n    onClick(){\n\n        console.log(\"onClick\", this.state.edit)\n        this.setState({\n            edit: !this.state.edit\n        });\n    }\n\n    handleInputChange(event){\n            // This will update specific key in your form object inside the local state\n        this.setState({\n            form: Object.assign({}, this.state.form, {\n            [event.target.text]: event.target.value,\n        }),\n        });\n    }\n\n\n    render(){\n\n        \n\n        if(this.state.edit){\n\n            return( \n                <div>\n            <Form model=\"text\" onSubmit={(values) => this.handleSubmit(values)}>\n                <Control.textarea model=\".text\" id={this.props.id} name=\"text\" style = {{fontSize:\"35px\"}}\n                    rows={this.props.rows_num} \n                    className=\"form-control\"  \n                    onChange={event => this.handleInputChange(event)}\n                    defaultValue={this.props.text}/>\n\n                <Button type=\"submit\">save</Button>\n            </Form>\n\n            \n                </div>\n            );        \n            // onChange={this.handleInputChange}                   \n        }               \n        else{\n            return(\n            <div>\n                <div className = 'row'>\n                    <span style = {{fontSize:\"45px\", fontWeight:\"normal\"}}>{this.props.text} </span>\n                </div>\n                \n                <div className = 'row'>\n                    <Button onClick={()=>this.onClick()}>edit</Button>\n                </div>\n            </div>\n            );\n        }\n\n    }\n}\n\nexport default EditBox;\n\n*/"]},"metadata":{},"sourceType":"module"}