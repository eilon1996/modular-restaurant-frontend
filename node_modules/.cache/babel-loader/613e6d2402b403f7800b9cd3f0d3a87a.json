{"ast":null,"code":"import _objectSpread from\"/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as ActionTypes from'./ActionTypes';export var MyContent=function MyContent(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{isLoading:true,errMess:null,myContent:null};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ActionTypes.ADD_MYCONTENT:console.log(\"myContent.js: type: \"+action.type+\" payload: \"+JSON.stringify(action.payload));return _objectSpread(_objectSpread({},state),{},{isLoading:false,errMess:null,myContent:action.payload});case ActionTypes.MYCONTENT_LOADING:console.log(\"myContent.js: type: \"+action.type);// returning a new state (not chaning it) with the values given\nreturn _objectSpread(_objectSpread({},state),{},{isLoading:true,errMess:null,myContent:null});case ActionTypes.MYCONTENT_FAILED:console.log(\"myContent.js: type: \"+action.type);return _objectSpread(_objectSpread({},state),{},{isLoading:false,errMess:action.payload,myContent:null});default:return state;}};","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/src/redux/myContent.js"],"names":["ActionTypes","MyContent","state","isLoading","errMess","myContent","action","type","ADD_MYCONTENT","console","log","JSON","stringify","payload","MYCONTENT_LOADING","MYCONTENT_FAILED"],"mappings":"+LAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,eAA7B,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAIiB,IAJhBC,CAAAA,KAIgB,2DAJR,CACVC,SAAS,CAAC,IADA,CAEVC,OAAO,CAAE,IAFC,CAGVC,SAAS,CAAE,IAHD,CAIQ,IAAXC,CAAAA,MAAW,2CACtC,OAAQA,MAAM,CAACC,IAAf,EACA,IAAKP,CAAAA,WAAW,CAACQ,aAAjB,CACAC,OAAO,CAACC,GAAR,CAAY,uBAAyBJ,MAAM,CAACC,IAAhC,CAAuC,YAAvC,CAAoDI,IAAI,CAACC,SAAL,CAAeN,MAAM,CAACO,OAAtB,CAAhE,EACA,sCAAWX,KAAX,MAAkBC,SAAS,CAAC,KAA5B,CAAmCC,OAAO,CAAC,IAA3C,CAAiDC,SAAS,CAAEC,MAAM,CAACO,OAAnE,GAEA,IAAKb,CAAAA,WAAW,CAACc,iBAAjB,CACAL,OAAO,CAACC,GAAR,CAAY,uBAAyBJ,MAAM,CAACC,IAA5C,EACA;AACA,sCAAWL,KAAX,MAAkBC,SAAS,CAAC,IAA5B,CAAkCC,OAAO,CAAC,IAA1C,CAAgDC,SAAS,CAAC,IAA1D,GAEA,IAAKL,CAAAA,WAAW,CAACe,gBAAjB,CACAN,OAAO,CAACC,GAAR,CAAY,uBAAyBJ,MAAM,CAACC,IAA5C,EACA,sCAAWL,KAAX,MAAkBC,SAAS,CAAC,KAA5B,CAAmCC,OAAO,CAAEE,MAAM,CAACO,OAAnD,CAA4DR,SAAS,CAAE,IAAvE,GAKA,QACA,MAAOH,CAAAA,KAAP,CAlBA,CAoBH,CAzBM","sourcesContent":["import * as ActionTypes from './ActionTypes';\n\nexport const MyContent = (state = {\n                        isLoading:true, \n                        errMess: null,\n                        myContent: null\n                            }, action) => {\n    switch (action.type) {\n    case ActionTypes.ADD_MYCONTENT:\n    console.log(\"myContent.js: type: \" +(action.type)+ \" payload: \"+JSON.stringify(action.payload));\n    return {...state, isLoading:false, errMess:null, myContent: action.payload}\n\n    case ActionTypes.MYCONTENT_LOADING:\n    console.log(\"myContent.js: type: \" +(action.type));\n    // returning a new state (not chaning it) with the values given\n    return {...state, isLoading:true, errMess:null, myContent:null}\n\n    case ActionTypes.MYCONTENT_FAILED:\n    console.log(\"myContent.js: type: \" +(action.type));\n    return {...state, isLoading:false, errMess: action.payload, myContent: null}\n\n\n\n\n    default:\n    return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}