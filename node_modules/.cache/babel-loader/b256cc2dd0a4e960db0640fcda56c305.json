{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/externalUrl';\nimport cookie from 'react-cookies'; ////////////  signup  ////////////\n\nexport const signup = jsonObject => dispatch => {\n  //return fetch(\"https://warm-fjord-92793.herokuapp.com/signup\", {\n  return fetch(\"http://localhost:5001/signup\", {\n    method: \"POST\",\n    body: JSON.stringify(jsonObject),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    console.log(\"response\", response);\n    return response.json();\n  }).then(response => {\n    if (response.err) {\n      throw response.err;\n    }\n\n    console.log(\"response.token\", response.token);\n    jsonObject[\"token\"] = response.token; // cookie is not being saved. will work with a short string\n    //cookie.save('auth',response[\"token\"], { path: '/', maxAge: 3600 * 24 * 30 });\n\n    addMyContent(jsonObject);\n    alert(\"you signed up succefuly\");\n    return \"\";\n  }).catch(error => {\n    console.log('signup error: ', error);\n    return error;\n  });\n}; /////////login////////////\n\nexport const login = details => dispatch => {\n  // details is an object {username, password}\n  //return fetch(\"https://warm-fjord-92793.herokuapp.com/login\", {\n  return fetch(\"http://localhost:5001/login\", {\n    method: \"POST\",\n    body: JSON.stringify(details),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    console.log(\"response\", response);\n    return response.json();\n  }).then(response => {\n    if (response.err) {\n      throw response.err;\n    }\n\n    console.log(\"response\", response); //user details\n\n    addMyContent(response.user);\n    alert(\"you logged in succefuly\");\n    return {\n      user: response.user\n    };\n  }).catch(error => {\n    console.log('login error: ', error);\n    return error;\n  });\n}; ///////////putContnet///////////\n\nexport const putContent = jsonObject => dispatch => {\n  console.log(\"ActionCreator-putcontent\", jsonObject);\n  addMyContent(jsonObject);\n  if (jsonObject.id === \"0\") return; // user 0 dont need to update the server\n\n  return fetch(baseUrl + '/content/' + jsonObject.id + \".json\", {\n    method: \"PATCH\",\n    body: JSON.stringify(jsonObject),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }) //.then(response => response.json())\n  //.then(response => {dispatch(addMyContent(response));  })\n  .catch(error => {\n    console.log('submmit content', error.message);\n    alert('Your content could not be submited\\nError: ' + error.message);\n  });\n}; /// fetch myContent////\n\nexport const fetchMyContent = id => dispatch => {\n  console.log(\"fetchMyContent, id:\", id);\n  dispatch(myContentLoading(true));\n\n  if (id === null) {\n    id = \"0\";\n  }\n\n  return fetch(baseUrl + '/content/' + id + \".json\").then(response => {\n    if (response.ok) {\n      console.log(\"ActionCreator-fetchmyContent, response is OK\\nresponse: \", response);\n      return response;\n    } else {\n      console.log(\"ActionCreator-fetchmyContent, response is NOT OK\\nresponse: \", response);\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    console.log(\"ActionCreator-fetchmyContent, NO response \\error.message: \", error.message);\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(myContent => dispatch(addMyContent(myContent))).catch(error => dispatch(myContentFailed(error.message)));\n};\nexport const myContentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.MYCONTENT_LOADING\n  };\n};\nexport const myContentFailed = errmess => {\n  return {\n    type: ActionTypes.MYCONTENT_FAILED,\n    payload: errmess\n  };\n};\nexport const addMyContent = myContent => {\n  console.log(\"ActionCreator-addContent, content: \", myContent);\n  return {\n    type: ActionTypes.ADD_MYCONTENT,\n    payload: myContent\n  };\n}; /// fetch content////\n\nexport const fetchContent = () => dispatch => {\n  return fetch(baseUrl + '/content' + \".json\").then(response => {\n    if (response.ok) {\n      console.log(\"ActionCreator-fetchContent, response is OK\\nresponse: \", response);\n      return response;\n    } else {\n      console.log(\"ActionCreator-fetchContent, response is NOT OK\\nresponse: \", response);\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    console.log(\"ActionCreator-fetchContent, NO response \\error.message: \", error.message);\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(content => dispatch(addContent(content))).catch(error => dispatch(contentFailed(error.message)));\n};\nexport const contentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.CONTENT_LOADING\n  };\n};\nexport const contentFailed = errmess => {\n  return {\n    type: ActionTypes.CONTENT_FAILED,\n    payload: errmess\n  };\n};\nexport const addContent = content => {\n  console.log(\"ActionCreator-addContent, content: \", content);\n  return {\n    type: ActionTypes.ADD_CONTENT,\n    payload: content\n  };\n};","map":{"version":3,"sources":["/home/eilon/programing/full-stack/confusion-new/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","cookie","signup","jsonObject","dispatch","fetch","method","body","JSON","stringify","headers","credentials","then","response","console","log","json","err","token","addMyContent","alert","catch","error","login","details","user","putContent","id","ok","Error","status","statusText","message","fetchMyContent","myContentLoading","errmess","myContent","myContentFailed","type","MYCONTENT_LOADING","MYCONTENT_FAILED","payload","ADD_MYCONTENT","fetchContent","content","addContent","contentFailed","contentLoading","CONTENT_LOADING","CONTENT_FAILED","ADD_CONTENT"],"mappings":"AACA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,OAAOC,MAAP,MAAmB,eAAnB,C,CAGA;;AAEA,OAAO,MAAMC,MAAM,GAAIC,UAAD,IAAiBC,QAAD,IAAc;AAElD;AACA,SAAOC,KAAK,CAAC,8BAAD,EAAiC;AAC3CC,IAAAA,MAAM,EAAE,MADmC;AAE3CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,UAAf,CAFqC;AAG3CO,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAHkC;AAM3CC,IAAAA,WAAW,EAAE;AAN8B,GAAjC,CAAL,CAQJC,IARI,CAQCC,QAAQ,IAAI;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AACA,WAAOA,QAAQ,CAACG,IAAT,EAAP;AACD,GAXI,EAYJJ,IAZI,CAYCC,QAAQ,IAAI;AAChB,QAAIA,QAAQ,CAACI,GAAb,EAAkB;AAChB,YAAMJ,QAAQ,CAACI,GAAf;AACD;;AACDH,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,QAAQ,CAACK,KAAvC;AACAf,IAAAA,UAAU,CAAC,OAAD,CAAV,GAAsBU,QAAQ,CAACK,KAA/B,CALgB,CAMhB;AACA;;AACAC,IAAAA,YAAY,CAAChB,UAAD,CAAZ;AACAiB,IAAAA,KAAK,CAAC,yBAAD,CAAL;AACA,WAAO,EAAP;AACD,GAvBI,EAwBJC,KAxBI,CAwBEC,KAAK,IAAI;AACdR,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BO,KAA9B;AACA,WAAOA,KAAP;AACD,GA3BI,CAAP;AA4BD,CA/BM,C,CAiCP;;AAEA,OAAO,MAAMC,KAAK,GAAIC,OAAD,IAAcpB,QAAD,IAAc;AAC9C;AAEA;AACA,SAAOC,KAAK,CAAC,6BAAD,EAAgC;AAC1CC,IAAAA,MAAM,EAAE,MADkC;AAE1CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAee,OAAf,CAFoC;AAG1Cd,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAHiC;AAM1CC,IAAAA,WAAW,EAAE;AAN6B,GAAhC,CAAL,CAQJC,IARI,CAQCC,QAAQ,IAAI;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AACA,WAAOA,QAAQ,CAACG,IAAT,EAAP;AACD,GAXI,EAYJJ,IAZI,CAYCC,QAAQ,IAAI;AAChB,QAAIA,QAAQ,CAACI,GAAb,EAAkB;AAChB,YAAMJ,QAAQ,CAACI,GAAf;AACD;;AACDH,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB,EAJgB,CAImB;;AACnCM,IAAAA,YAAY,CAACN,QAAQ,CAACY,IAAV,CAAZ;AACAL,IAAAA,KAAK,CAAC,yBAAD,CAAL;AACA,WAAO;AAACK,MAAAA,IAAI,EAAEZ,QAAQ,CAACY;AAAhB,KAAP;AACD,GApBI,EAqBJJ,KArBI,CAqBEC,KAAK,IAAI;AACdR,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BO,KAA7B;AACA,WAAOA,KAAP;AACD,GAxBI,CAAP;AAyBD,CA7BM,C,CAiCP;;AAEA,OAAO,MAAMI,UAAU,GAAIvB,UAAD,IAAiBC,QAAD,IAAc;AAEtDU,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCZ,UAAxC;AAEAgB,EAAAA,YAAY,CAAChB,UAAD,CAAZ;AACA,MAAIA,UAAU,CAACwB,EAAX,KAAkB,GAAtB,EAA2B,OAL2B,CAKnB;;AAEnC,SAAOtB,KAAK,CAACL,OAAO,GAAG,WAAV,GAAwBG,UAAU,CAACwB,EAAnC,GAAwC,OAAzC,EAAkD;AAC5DrB,IAAAA,MAAM,EAAE,OADoD;AAE5DC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,UAAf,CAFsD;AAG5DO,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAHmD;AAM5DC,IAAAA,WAAW,EAAE;AAN+C,GAAlD,CAAL,CAQJC,IARI,CAQCC,QAAQ,IAAI;AAChB,QAAIA,QAAQ,CAACe,EAAb,EAAiB;AACf,aAAOf,QAAP;AACD,KAFD,MAEO;AACL,UAAIS,KAAK,GAAG,IAAIO,KAAJ,CAAU,WAAWhB,QAAQ,CAACiB,MAApB,GAA6B,IAA7B,GAAoCjB,QAAQ,CAACkB,UAAvD,CAAZ;AACAT,MAAAA,KAAK,CAACT,QAAN,GAAiBA,QAAjB;AACA,YAAMS,KAAN;AACD;AACF,GAhBI,EAiBHA,KAAK,IAAI;AACP,UAAMA,KAAN;AACD,GAnBE,EAoBL;AACA;AArBK,GAsBJD,KAtBI,CAsBEC,KAAK,IAAI;AACdR,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BO,KAAK,CAACU,OAArC;AACAZ,IAAAA,KAAK,CAAC,gDAAgDE,KAAK,CAACU,OAAvD,CAAL;AACD,GAzBI,CAAP;AA0BD,CAjCM,C,CAqCP;;AAEA,OAAO,MAAMC,cAAc,GAAIN,EAAD,IAASvB,QAAD,IAAc;AAElDU,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCY,EAAnC;AACAvB,EAAAA,QAAQ,CAAC8B,gBAAgB,CAAC,IAAD,CAAjB,CAAR;;AAEA,MAAIP,EAAE,KAAK,IAAX,EAAiB;AACfA,IAAAA,EAAE,GAAG,GAAL;AACD;;AACD,SAAOtB,KAAK,CAACL,OAAO,GAAG,WAAV,GAAwB2B,EAAxB,GAA6B,OAA9B,CAAL,CACJf,IADI,CACCC,QAAQ,IAAI;AAChB,QAAIA,QAAQ,CAACe,EAAb,EAAiB;AACfd,MAAAA,OAAO,CAACC,GAAR,CAAY,0DAAZ,EAAwEF,QAAxE;AACA,aAAOA,QAAP;AACD,KAHD,MAGO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,8DAAZ,EAA4EF,QAA5E;AACA,UAAIS,KAAK,GAAG,IAAIO,KAAJ,CAAU,WAAWhB,QAAQ,CAACiB,MAApB,GAA6B,IAA7B,GAAoCjB,QAAQ,CAACkB,UAAvD,CAAZ;AACAT,MAAAA,KAAK,CAACT,QAAN,GAAiBA,QAAjB;AACA,YAAMS,KAAN;AACD;AACF,GAXI,EAYHA,KAAK,IAAI;AACPR,IAAAA,OAAO,CAACC,GAAR,CAAY,4DAAZ,EAA0EO,KAAK,CAACU,OAAhF;AACA,QAAIG,OAAO,GAAG,IAAIN,KAAJ,CAAUP,KAAK,CAACU,OAAhB,CAAd;AACA,UAAMG,OAAN;AACD,GAhBE,EAiBJvB,IAjBI,CAiBCC,QAAQ,IAAIA,QAAQ,CAACG,IAAT,EAjBb,EAkBJJ,IAlBI,CAkBCwB,SAAS,IAAIhC,QAAQ,CAACe,YAAY,CAACiB,SAAD,CAAb,CAlBtB,EAmBJf,KAnBI,CAmBEC,KAAK,IAAIlB,QAAQ,CAACiC,eAAe,CAACf,KAAK,CAACU,OAAP,CAAhB,CAnBnB,CAAP;AAqBD,CA7BM;AA+BP,OAAO,MAAME,gBAAgB,GAAG,MAAM;AACpCpB,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,SAAO;AACLuB,IAAAA,IAAI,EAAEvC,WAAW,CAACwC;AADb,GAAP;AAGD,CALM;AAOP,OAAO,MAAMF,eAAe,GAAKF,OAAD,IAAa;AAC3C,SAAQ;AACNG,IAAAA,IAAI,EAAEvC,WAAW,CAACyC,gBADZ;AAENC,IAAAA,OAAO,EAAEN;AAFH,GAAR;AAID,CALM;AAOP,OAAO,MAAMhB,YAAY,GAAIiB,SAAD,IAAe;AACzCtB,EAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDqB,SAAnD;AACA,SAAQ;AACNE,IAAAA,IAAI,EAAEvC,WAAW,CAAC2C,aADZ;AAEND,IAAAA,OAAO,EAAEL;AAFH,GAAR;AAID,CANM,C,CAUP;;AAEA,OAAO,MAAMO,YAAY,GAAG,MAAOvC,QAAD,IAAc;AAE9C,SAAOC,KAAK,CAACL,OAAO,GAAG,UAAV,GAAuB,OAAxB,CAAL,CACJY,IADI,CACCC,QAAQ,IAAI;AAChB,QAAIA,QAAQ,CAACe,EAAb,EAAiB;AACfd,MAAAA,OAAO,CAACC,GAAR,CAAY,wDAAZ,EAAsEF,QAAtE;AACA,aAAOA,QAAP;AACD,KAHD,MAGO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,4DAAZ,EAA0EF,QAA1E;AACA,UAAIS,KAAK,GAAG,IAAIO,KAAJ,CAAU,WAAWhB,QAAQ,CAACiB,MAApB,GAA6B,IAA7B,GAAoCjB,QAAQ,CAACkB,UAAvD,CAAZ;AACAT,MAAAA,KAAK,CAACT,QAAN,GAAiBA,QAAjB;AACA,YAAMS,KAAN;AACD;AACF,GAXI,EAYHA,KAAK,IAAI;AACPR,IAAAA,OAAO,CAACC,GAAR,CAAY,0DAAZ,EAAwEO,KAAK,CAACU,OAA9E;AACA,QAAIG,OAAO,GAAG,IAAIN,KAAJ,CAAUP,KAAK,CAACU,OAAhB,CAAd;AACA,UAAMG,OAAN;AACD,GAhBE,EAiBJvB,IAjBI,CAiBCC,QAAQ,IAAIA,QAAQ,CAACG,IAAT,EAjBb,EAkBJJ,IAlBI,CAkBCgC,OAAO,IAAIxC,QAAQ,CAACyC,UAAU,CAACD,OAAD,CAAX,CAlBpB,EAmBJvB,KAnBI,CAmBEC,KAAK,IAAIlB,QAAQ,CAAC0C,aAAa,CAACxB,KAAK,CAACU,OAAP,CAAd,CAnBnB,CAAP;AAqBD,CAvBM;AAyBP,OAAO,MAAMe,cAAc,GAAG,MAAM;AAClCjC,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,SAAO;AACLuB,IAAAA,IAAI,EAAEvC,WAAW,CAACiD;AADb,GAAP;AAGD,CALM;AAOP,OAAO,MAAMF,aAAa,GAAKX,OAAD,IAAa;AACzC,SAAQ;AACNG,IAAAA,IAAI,EAAEvC,WAAW,CAACkD,cADZ;AAENR,IAAAA,OAAO,EAAEN;AAFH,GAAR;AAID,CALM;AAOP,OAAO,MAAMU,UAAU,GAAID,OAAD,IAAa;AACrC9B,EAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmD6B,OAAnD;AACA,SAAQ;AACNN,IAAAA,IAAI,EAAEvC,WAAW,CAACmD,WADZ;AAENT,IAAAA,OAAO,EAAEG;AAFH,GAAR;AAID,CANM","sourcesContent":["\nimport * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/externalUrl';\nimport cookie from 'react-cookies';\n\n\n////////////  signup  ////////////\n\nexport const signup = (jsonObject) => (dispatch) => {\n\n  //return fetch(\"https://warm-fjord-92793.herokuapp.com/signup\", {\n  return fetch(\"http://localhost:5001/signup\", {\n    method: \"POST\",\n    body: JSON.stringify(jsonObject),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    credentials: \"same-origin\"\n  })\n    .then(response => {\n      console.log(\"response\", response);\n      return response.json()\n    })\n    .then(response => {\n      if (response.err) {\n        throw response.err;\n      }\n      console.log(\"response.token\", response.token);\n      jsonObject[\"token\"] = response.token;\n      // cookie is not being saved. will work with a short string\n      //cookie.save('auth',response[\"token\"], { path: '/', maxAge: 3600 * 24 * 30 });\n      addMyContent(jsonObject);\n      alert(\"you signed up succefuly\");\n      return \"\";\n    })\n    .catch(error => {\n      console.log('signup error: ', error);\n      return error;\n    });\n};\n\n/////////login////////////\n\nexport const login = (details) => (dispatch) => {\n  // details is an object {username, password}\n\n  //return fetch(\"https://warm-fjord-92793.herokuapp.com/login\", {\n  return fetch(\"http://localhost:5001/login\", {\n    method: \"POST\",\n    body: JSON.stringify(details),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    credentials: \"same-origin\"\n  })\n    .then(response => {\n      console.log(\"response\", response);\n      return response.json()\n    })\n    .then(response => {\n      if (response.err) {\n        throw response.err;\n      }\n      console.log(\"response\", response); //user details\n      addMyContent(response.user);\n      alert(\"you logged in succefuly\");\n      return {user: response.user};\n    })\n    .catch(error => {\n      console.log('login error: ', error);\n      return error;\n    });\n};\n\n\n\n///////////putContnet///////////\n\nexport const putContent = (jsonObject) => (dispatch) => {\n\n  console.log(\"ActionCreator-putcontent\", jsonObject);\n\n  addMyContent(jsonObject);\n  if (jsonObject.id === \"0\") return; // user 0 dont need to update the server\n\n  return fetch(baseUrl + '/content/' + jsonObject.id + \".json\", {\n    method: \"PATCH\",\n    body: JSON.stringify(jsonObject),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  })\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        throw error;\n      })\n    //.then(response => response.json())\n    //.then(response => {dispatch(addMyContent(response));  })\n    .catch(error => {\n      console.log('submmit content', error.message);\n      alert('Your content could not be submited\\nError: ' + error.message);\n    });\n};\n\n\n\n/// fetch myContent////\n\nexport const fetchMyContent = (id) => (dispatch) => {\n\n  console.log(\"fetchMyContent, id:\", id);\n  dispatch(myContentLoading(true));\n\n  if (id === null) {\n    id = \"0\";\n  }\n  return fetch(baseUrl + '/content/' + id + \".json\")\n    .then(response => {\n      if (response.ok) {\n        console.log(\"ActionCreator-fetchmyContent, response is OK\\nresponse: \", response);\n        return response;\n      } else {\n        console.log(\"ActionCreator-fetchmyContent, response is NOT OK\\nresponse: \", response);\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        console.log(\"ActionCreator-fetchmyContent, NO response \\error.message: \", error.message);\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(myContent => dispatch(addMyContent(myContent)))\n    .catch(error => dispatch(myContentFailed(error.message)));\n\n}\n\nexport const myContentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.MYCONTENT_LOADING\n  }\n}\n\nexport const myContentFailed = ((errmess) => {\n  return ({\n    type: ActionTypes.MYCONTENT_FAILED,\n    payload: errmess\n  });\n});\n\nexport const addMyContent = (myContent) => {\n  console.log(\"ActionCreator-addContent, content: \", myContent);\n  return ({\n    type: ActionTypes.ADD_MYCONTENT,\n    payload: myContent\n  });\n}\n\n\n\n/// fetch content////\n\nexport const fetchContent = () => (dispatch) => {\n\n  return fetch(baseUrl + '/content' + \".json\")\n    .then(response => {\n      if (response.ok) {\n        console.log(\"ActionCreator-fetchContent, response is OK\\nresponse: \", response);\n        return response;\n      } else {\n        console.log(\"ActionCreator-fetchContent, response is NOT OK\\nresponse: \", response);\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        console.log(\"ActionCreator-fetchContent, NO response \\error.message: \", error.message);\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(content => dispatch(addContent(content)))\n    .catch(error => dispatch(contentFailed(error.message)));\n\n}\n\nexport const contentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.CONTENT_LOADING\n  }\n}\n\nexport const contentFailed = ((errmess) => {\n  return ({\n    type: ActionTypes.CONTENT_FAILED,\n    payload: errmess\n  });\n});\n\nexport const addContent = (content) => {\n  console.log(\"ActionCreator-addContent, content: \", content);\n  return ({\n    type: ActionTypes.ADD_CONTENT,\n    payload: content\n  });\n}\n"]},"metadata":{},"sourceType":"module"}