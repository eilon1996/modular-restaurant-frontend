{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nexport const MyContent = (state = {\n  isLoading: true,\n  errMess: null,\n  content: null\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_MYCONTENT:\n      console.log(\"content.js: type: \" + action.type + \" payload: \" + JSON.stringify(action.payload));\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        content: action.payload\n      };\n\n    case ActionTypes.MYCONTENT_LOADING:\n      console.log(\"content.js: type: \" + action.type); // returning a new state (not chaning it) with the values given\n\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        content: null\n      };\n\n    case ActionTypes.MYCONTENT_FAILED:\n      console.log(\"content.js: type: \" + action.type);\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload,\n        content: null\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/src/redux/myContent.js"],"names":["ActionTypes","MyContent","state","isLoading","errMess","content","action","type","ADD_MYCONTENT","console","log","JSON","stringify","payload","MYCONTENT_LOADING","MYCONTENT_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,KAAK,GAAG;AACVC,EAAAA,SAAS,EAAC,IADA;AAEVC,EAAAA,OAAO,EAAE,IAFC;AAGVC,EAAAA,OAAO,EAAE;AAHC,CAAT,EAIMC,MAJN,KAIiB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKP,WAAW,CAACQ,aAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBJ,MAAM,CAACC,IAA9B,GAAqC,YAArC,GAAkDI,IAAI,CAACC,SAAL,CAAeN,MAAM,CAACO,OAAtB,CAA9D;AACA,aAAO,EAAC,GAAGX,KAAJ;AAAWC,QAAAA,SAAS,EAAC,KAArB;AAA4BC,QAAAA,OAAO,EAAC,IAApC;AAA0CC,QAAAA,OAAO,EAAEC,MAAM,CAACO;AAA1D,OAAP;;AAEA,SAAKb,WAAW,CAACc,iBAAjB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBJ,MAAM,CAACC,IAA1C,EADA,CAEA;;AACA,aAAO,EAAC,GAAGL,KAAJ;AAAWC,QAAAA,SAAS,EAAC,IAArB;AAA2BC,QAAAA,OAAO,EAAC,IAAnC;AAAyCC,QAAAA,OAAO,EAAC;AAAjD,OAAP;;AAEA,SAAKL,WAAW,CAACe,gBAAjB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBJ,MAAM,CAACC,IAA1C;AACA,aAAO,EAAC,GAAGL,KAAJ;AAAWC,QAAAA,SAAS,EAAC,KAArB;AAA4BC,QAAAA,OAAO,EAAEE,MAAM,CAACO,OAA5C;AAAqDR,QAAAA,OAAO,EAAE;AAA9D,OAAP;;AAKA;AACA,aAAOH,KAAP;AAlBA;AAoBH,CAzBM","sourcesContent":["import * as ActionTypes from './ActionTypes';\n\nexport const MyContent = (state = {\n                        isLoading:true, \n                        errMess: null,\n                        content: null\n                            }, action) => {\n    switch (action.type) {\n    case ActionTypes.ADD_MYCONTENT:\n    console.log(\"content.js: type: \" +(action.type)+ \" payload: \"+JSON.stringify(action.payload));\n    return {...state, isLoading:false, errMess:null, content: action.payload}\n\n    case ActionTypes.MYCONTENT_LOADING:\n    console.log(\"content.js: type: \" +(action.type));\n    // returning a new state (not chaning it) with the values given\n    return {...state, isLoading:true, errMess:null, content:null}\n\n    case ActionTypes.MYCONTENT_FAILED:\n    console.log(\"content.js: type: \" +(action.type));\n    return {...state, isLoading:false, errMess: action.payload, content: null}\n\n\n\n\n    default:\n    return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}