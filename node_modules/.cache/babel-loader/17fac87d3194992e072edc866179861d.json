{"ast":null,"code":"var _jsxFileName = \"/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/src/component/DishdetailComponent.js\";\nimport React, { useState } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport Loading from './LoadingComponent';\nimport { baseUrl } from '../shared/externalUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\nimport EditBox from './EditBoxComponent';\nimport MultiSelect from \"react-multi-select-component\";\nimport Dropzone from 'react-dropzone';\n\nconst required = val => val && val.length;\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => !val || val.length >= len;\n\nfunction DishDetail(props) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [rating, setRating] = useState(5);\n  const [author, setAuthor] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n  const [selected, setSelected] = useState(null);\n  const [labels, setLabels] = useState(\"\");\n\n  if (props.myContent !== null && selected === null) {\n    var value = [];\n    var l = \"\";\n    if (props.myContent[\"dishes\"][props.id][\"label\"].indexOf(\"Hot\") > -1) value.push({\n      label: \"Hot ðŸŒ¶\",\n      value: \"Hot ðŸŒ¶\"\n    });\n    if (props.myContent[\"dishes\"][props.id][\"label\"].indexOf(\"Vegan\") > -1) value.push({\n      label: \"Vegan ðŸŒ±\",\n      value: \"Vegan ðŸŒ±\"\n    });\n    if (value.length == 2) l = \"Vegan ðŸŒ±  Hot ðŸŒ¶\";\n    setSelected(value);\n    setLabels(l);\n  }\n\n  var options = [{\n    label: \"Hot ðŸŒ¶\",\n    value: \"Hot ðŸŒ¶\"\n  }, {\n    label: \"Vegan ðŸŒ±\",\n    value: \"Vegan ðŸŒ±\"\n  }];\n\n  function handleSelected(event) {\n    props.myContent[\"dishes\"][props.id][\"label\"] = Object.values(event).map(label => label.label).join();\n    props.putContent(props.myContent);\n  }\n\n  function handleSubmit(values) {\n    setIsModalOpen(!isModalOpen);\n    props.postComment(props.id, values.rating, values.author, values.comment);\n  }\n\n  if (props.isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  try {\n    const comments_text = props.comments.map(comment => {\n      return /*#__PURE__*/React.createElement(Fade, {\n        in: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"list-unstyled\",\n        key: comment.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }, comment.comment, \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 47\n        }\n      }), \"--\", comment.author, \",\", new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: '2-digit'\n      }).format(new Date(Date.parse(comment.date)))))); //we use here in a script that translate date to readble date\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 37\n      }\n    }, \"Menu\")), /*#__PURE__*/React.createElement(BreadcrumbItem, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, props.myContent.dishes[props.id].title.text)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(EditBox, {\n      type: \"dishes\",\n      field: \"title\",\n      id: props.id,\n      putContent: props.putContent,\n      myContent: props.myContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FadeTransform, {\n      in: true,\n      transformProps: {\n        exitTransform: 'scale(0.5) translateY(-50%)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardImg, {\n      top: true,\n      src: props.myContent.dishes[props.id].image,\n      alt: props.myContent.dishes[props.id].title.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }\n    }, labels, /*#__PURE__*/React.createElement(MultiSelect, {\n      options: options,\n      value: selected,\n      onChange: event => handleSelected(event),\n      labelledBy: \"Select\",\n      selectedValues: selected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(EditBox, {\n      field: \"description\",\n      type: \"dishes\",\n      id: props.id,\n      putContent: props.putContent,\n      myContent: props.myContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 37\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(RenderComments, {\n      comments: props.comments,\n      postComment: props.postComment,\n      id: props.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }, \"comments\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-gruop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Stagger, {\n      in: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 33\n      }\n    }, comments_text)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      outline: true,\n      onClick: setIsModalOpen(!isModalOpen),\n      className: \"ml-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-pencil fa-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 41\n      }\n    }), \" Submit Comment\")), /*#__PURE__*/React.createElement(Modal, {\n      outline: true,\n      isOpen: isModalOpen,\n      toggle: setIsModalOpen(!isModalOpen),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: setIsModalOpen(!isModalOpen),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 37\n      }\n    }, \"Submit Comment\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(LocalForm, {\n      onSubmit: values => handleSubmit(values),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: {\n        size: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Control.select, {\n      model: \".rating\",\n      name: \"rating\",\n      value: rating,\n      onChange: event => setRating(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 57\n      }\n    }, \"5\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 57\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 57\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 57\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 57\n      }\n    }, \"1\")))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"author\",\n      md: {\n        size: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 49\n      }\n    }, \"Your Name\"), /*#__PURE__*/React.createElement(Col, {\n      md: {\n        size: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Control.text, {\n      model: \".author\",\n      id: \"author\",\n      name: \"author\",\n      placeholder: \"Your Name\",\n      className: \"form-control\",\n      onChange: event => setAuthor(event.target.value),\n      validators: {\n        required,\n        minLength: minLength(3),\n        maxLength: maxLength(15)\n      },\n      value: author,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".author\",\n      show: \"touched\",\n      messages: {\n        required: 'Requierd ',\n        minLength: 'Must be greater than 2 characters ',\n        maxLength: 'Must be 15 characters or less '\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 53\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"comment\",\n      md: {\n        size: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 49\n      }\n    }, \"Comment\"), /*#__PURE__*/React.createElement(Col, {\n      md: {\n        size: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Control.textarea, {\n      model: \".comment\",\n      id: \"comment\",\n      name: \"comment\",\n      rows: \"6\",\n      className: \"form-control\",\n      value: comment,\n      onChange: event => setComment(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 53\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: {\n        size: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 53\n      }\n    }, \"Submit\"))))))))));\n  } catch (e) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, e, props.errMess);\n  }\n}\n\nexport default DishDetail;","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/src/component/DishdetailComponent.js"],"names":["React","useState","Card","CardImg","CardText","CardBody","CardTitle","Link","Breadcrumb","BreadcrumbItem","Button","Modal","ModalBody","ModalHeader","Label","Col","Row","Control","LocalForm","Errors","Loading","baseUrl","FadeTransform","Fade","Stagger","EditBox","MultiSelect","Dropzone","required","val","length","maxLength","len","minLength","DishDetail","props","isModalOpen","setIsModalOpen","rating","setRating","author","setAuthor","comment","setComment","selected","setSelected","labels","setLabels","myContent","value","l","id","indexOf","push","label","options","handleSelected","event","Object","values","map","join","putContent","handleSubmit","postComment","isLoading","comments_text","comments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","dishes","title","text","exitTransform","image","size","target","e","errMess"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Label, Col , Row } from 'reactstrap'\nimport { Control, LocalForm, Errors} from 'react-redux-form';\nimport Loading from './LoadingComponent';\nimport { baseUrl } from '../shared/externalUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\nimport EditBox from './EditBoxComponent';\nimport MultiSelect from \"react-multi-select-component\";\nimport Dropzone from 'react-dropzone';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => val => !(val) || (val.length <= len)\nconst minLength = (len) => val => !(val) || (val.length >= len)\n\nfunction DishDetail(props){\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const [rating, setRating] = useState(5);\n    const [author, setAuthor] = useState(\"\");\n    const [comment, setComment] = useState(\"\");\n\n    const [selected, setSelected] = useState(null);\n    const [labels, setLabels] = useState(\"\");\n\n    if(props.myContent !== null && selected === null){\n        var value = []\n        var l = \"\";\n        if(props.myContent[\"dishes\"][props.id][\"label\"].indexOf(\"Hot\")>-1)\n            value.push({ label: \"Hot ðŸŒ¶\", value: \"Hot ðŸŒ¶\"});\n        \n        if(props.myContent[\"dishes\"][props.id][\"label\"].indexOf(\"Vegan\") > -1)\n            value.push({ label: \"Vegan ðŸŒ±\", value: \"Vegan ðŸŒ±\"});\n        \n        if(value.length == 2)\n            l = \"Vegan ðŸŒ±  Hot ðŸŒ¶\";\n            setSelected(value);\n        setLabels(l);\n    }\n    \n    var options = [\n        { label: \"Hot ðŸŒ¶\", value: \"Hot ðŸŒ¶\"},\n        { label: \"Vegan ðŸŒ±\", value: \"Vegan ðŸŒ±\"}\n    ]\n\n\n\n    function handleSelected(event){\n        props.myContent[\"dishes\"][props.id][\"label\"] = Object.values(event).map(label => label.label).join();\n        props.putContent(props.myContent);\n    }\n\n\n    function handleSubmit(values){\n        setIsModalOpen(! isModalOpen);\n        props.postComment(props.id, values.rating, values.author, values.comment);\n    }\n\n    \n\n    if (props.isLoading){\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading/>\n                </div>\n            </div>\n        );\n    }\n    try{\n\n        const comments_text = props.comments.map((comment)=>{\n            return (\n    \n                <Fade in>\n                    <li className=\"list-unstyled\" key={comment.id}>\n                        <p>\n                            {comment.comment} <br/>\n                            --{comment.author},\n                            {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'})\n                                .format(new Date(Date.parse(comment.date)))}\n                        </p>\n                    </li>\n                </Fade>\n            );\n            //we use here in a script that translate date to readble date\n        });\n\n        return(\n            <div>\n                <div className=\"container\">\n\n                                    \n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>{props.myContent.dishes[props.id].title.text}</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <EditBox type=\"dishes\" field=\"title\" id={props.id} putContent ={props.putContent} myContent={props.myContent}/>\n                    <hr />\n                </div>       \n                <div className=\"row\">\n                    <div className=\"col-12 col-md-5 m-1\">\n                        <FadeTransform in transformProps={{ exitTransform: 'scale(0.5) translateY(-50%)' }}>\n                        <Card>\n                            <CardImg top src={props.myContent.dishes[props.id].image} alt={props.myContent.dishes[props.id].title.text} />\n                            <CardBody>\n                                <CardText>       \n                                {labels}\n                                <MultiSelect\n                                    options={options}\n                                    value={selected}\n                                    onChange={(event) => handleSelected(event)}\n                                    labelledBy={\"Select\"}\n                                    selectedValues={selected}\n                                />\n                                    <EditBox field=\"description\" type=\"dishes\" id={props.id} putContent ={props.putContent} myContent={props.myContent}/>\n                                </CardText>\n                            </CardBody>\n                        </Card>\n                        </FadeTransform>\n                    </div>\n                    <div className=\"col-12 col-md-5 m-1\">\n                        <RenderComments comments={props.comments} \n                            postComment={props.postComment} \n                            id={props.id}/>\n\n                            <h4>comments</h4>\n                            <ul className=\"list-gruop\">\n                                <Stagger in>\n                                    {comments_text}\n                                </Stagger>\n                            </ul> \n                            \n                            <div className=\"row\">\n                                    <Button outline onClick={setIsModalOpen(! isModalOpen)} className='ml-auto'>\n                                        <span className='fa fa-pencil fa-lg'></span> Submit Comment\n                                    </Button>\n                                </div>\n                                <Modal outline isOpen={isModalOpen} toggle={setIsModalOpen(! isModalOpen)}>\n                                    <ModalHeader toggle={setIsModalOpen(! isModalOpen)}>Submit Comment</ModalHeader>\n                                    <ModalBody>\n\n                                        <LocalForm onSubmit={(values) => handleSubmit(values)}>\n                                            \n                                            <Row className=\"form-group\">\n                                                <Col md={{ size: 12 }}>\n                                                    <Control.select model=\".rating\" name=\"rating\"\n                                                        value={rating} onChange={(event)=> setRating(event.target.value)}>\n                                                        <option>5</option>\n                                                        <option>4</option>\n                                                        <option>3</option>\n                                                        <option>2</option>\n                                                        <option>1</option>\n                                                    </Control.select>\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"form-group\">\n                                                <Label htmlFor=\"author\" md={{ size: 12 }}>Your Name</Label>\n                                                <Col md={{ size: 12 }}>\n                                                    <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Your Name\" \n                                                        className=\"form-control\" onChange={(event)=> setAuthor(event.target.value)}\n                                                        validators={{required, minLength:minLength(3), maxLength:maxLength(15)}}\n                                                        value={author}/>\n                                                    <Errors className=\"text-danger\" model=\".author\"\n                                                    show=\"touched\" \n                                                    messages={{\n                                                            required: 'Requierd ',\n                                                            minLength: 'Must be greater than 2 characters ',\n                                                            maxLength: 'Must be 15 characters or less '\n                                                    }}>\n                                                    </Errors>\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"form-group\">\n                                                <Label htmlFor=\"comment\" md={{ size: 12 }}>Comment</Label>\n                                                <Col md={{ size: 12 }}> \n                                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\n                                                        rows=\"6\" className=\"form-control\"  value={comment}\n                                                        onChange={(event)=> setComment(event.target.value)}/>\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"form-group\">\n                                                <Col md={{ size: 12 }}>\n                                                    <Button type=\"submit\" color=\"primary\">\n                                                        Submit\n                                                    </Button>\n                                                </Col>\n                                            </Row>\n                                        </LocalForm>\n                                    </ModalBody>\n                                </Modal>\n                    </div>\n                </div>         \n                </div>\n\n            </div>\n        );\n    }\n    catch (e){\n        return (<div>\n            {e} \n            {props.errMess}\n        </div>)\n    }\n}\n    \nexport default DishDetail;"]},"metadata":{},"sourceType":"module"}