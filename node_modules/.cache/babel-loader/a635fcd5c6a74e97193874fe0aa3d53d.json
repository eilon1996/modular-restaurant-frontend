{"ast":null,"code":"import _classCallCheck from\"/home/eilon/programing/full-stack/React/confusion2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/eilon/programing/full-stack/React/confusion2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/eilon/programing/full-stack/React/confusion2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _createSuper from\"/home/eilon/programing/full-stack/React/confusion2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/home/eilon/programing/full-stack/React/confusion2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Navbar,NavbarBrand,Nav,NavbarToggler,Collapse,NavItem,Jumbotron,Button,Modal,ModalHeader,ModalBody,Form,FormGroup,Input,Label}from'reactstrap';// nav link auto maticly impliment the active component and a tag\nimport{NavLink}from'react-router-dom';var Header=/*#__PURE__*/function(_Component){_inherits(Header,_Component);var _super=_createSuper(Header);function Header(props){var _this;_classCallCheck(this,Header);_this=_super.call(this,props);_this.state={isNavOpen:false,isModalOpen:false};// this.toggleNav used in the NavbarToggler onClick is know declare to point to the function\n_this.toggleModal=_this.toggleModal.bind(_assertThisInitialized(_this));_this.toggleNav=_this.toggleNav.bind(_assertThisInitialized(_this));_this.handleLogin=_this.handleLogin.bind(_assertThisInitialized(_this));return _this;}_createClass(Header,[{key:\"toggleModal\",value:function toggleModal(){this.setState({isModalOpen:!this.state.isModalOpen});}},{key:\"toggleNav\",value:function toggleNav(){this.setState({isNavOpen:!this.state.isNavOpen});}},{key:\"handleLogin\",value:function handleLogin(event){this.toggleModal();alert(\"Username: \"+this.username.value+\" Password: \"+this.password.value+\" Remember: \"+this.remember.checked);event.preventDefault();}},{key:\"render\",value:function render(){var _this2=this;// you can use empty <> ... </> for react fragment but for some reason its not working\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Navbar,{dark:true,expand:\"md\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(NavbarToggler,{onClick:this.toggleNav}),/*#__PURE__*/React.createElement(NavbarBrand,{className:\"mr-auto\",href:\"/\"},/*#__PURE__*/React.createElement(\"img\",{src:\"assets/images/logo.png\",height:\"30\",width:\"41\",alt:\"Restrunt Confusion\"})),/*#__PURE__*/React.createElement(Collapse,{isOpen:this.state.isNavOpen,navbar:true},/*#__PURE__*/React.createElement(Nav,{navbar:true},/*#__PURE__*/React.createElement(NavItem,null,/*#__PURE__*/React.createElement(NavLink,{className:\"nav-link\",to:\"/home\"},/*#__PURE__*/React.createElement(\"span\",{className:\"fa fa-home fa-lg\"},\" Home\"))),/*#__PURE__*/React.createElement(NavItem,null,/*#__PURE__*/React.createElement(NavLink,{className:\"nav-link\",to:\"/aboutus\"},/*#__PURE__*/React.createElement(\"span\",{className:\"fa fa-info fa-lg\"},\" About Us\"))),/*#__PURE__*/React.createElement(NavItem,null,/*#__PURE__*/React.createElement(NavLink,{className:\"nav-link\",to:\"/menu\"},/*#__PURE__*/React.createElement(\"span\",{className:\"fa fa-list fa-lg\"},\" Menu\"))),/*#__PURE__*/React.createElement(NavItem,null,/*#__PURE__*/React.createElement(NavLink,{className:\"nav-link\",to:\"/contactus\"},/*#__PURE__*/React.createElement(\"span\",{className:\"fa fa-address-card fa-lg\"},\" Contact US\")))),/*#__PURE__*/React.createElement(Nav,{className:\"ml-auto\",navbar:true},/*#__PURE__*/React.createElement(NavItem,null,/*#__PURE__*/React.createElement(Button,{outline:true,onClick:this.toggleModal},/*#__PURE__*/React.createElement(\"span\",{className:\"fa fa-sign-in fa-lg\"}),\" Login\")))))),/*#__PURE__*/React.createElement(Jumbotron,null,/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row row-header\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12 col-sm-6\"},/*#__PURE__*/React.createElement(\"h1\",null,\"restrunt Confusion\"),/*#__PURE__*/React.createElement(\"p\",null,\"We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!\"))))),/*#__PURE__*/React.createElement(Modal,{isOpen:this.state.isModalOpen,toggle:this.toggleModal},/*#__PURE__*/React.createElement(ModalHeader,{toggle:this.toggleModal},\"Login\"),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(Form,{onSubmit:this.handleLogin},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{htmlFor:\"username\"},\"Username\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",id:\"username\",name:\"username\",innerRef:function innerRef(input){return _this2.username=input;}})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{htmlFor:\"password\"},\"Password\"),/*#__PURE__*/React.createElement(Input,{type:\"password\",id:\"password\",name:\"password\",innerRef:function innerRef(input){return _this2.password=input;}})),/*#__PURE__*/React.createElement(FormGroup,{check:true},/*#__PURE__*/React.createElement(Label,{check:true},/*#__PURE__*/React.createElement(Input,{type:\"checkbox\",name:\"remember\",innerRef:function innerRef(input){return _this2.remember=input;}}),\"Remember me\")),/*#__PURE__*/React.createElement(Button,{type:\"submit\",value:\"submit\",color:\"primary\"},\"Login\")))));}}]);return Header;}(Component);export default Header;","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion2/src/component/HeaderComponent.js"],"names":["React","Component","Navbar","NavbarBrand","Nav","NavbarToggler","Collapse","NavItem","Jumbotron","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Input","Label","NavLink","Header","props","state","isNavOpen","isModalOpen","toggleModal","bind","toggleNav","handleLogin","setState","event","alert","username","value","password","remember","checked","preventDefault","input"],"mappings":"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","sourcesContent":["import React, {Component } from 'react';\r\nimport {Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n     Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label} from 'reactstrap'\r\n// nav link auto maticly impliment the active component and a tag\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nclass Header extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        // this.toggleNav used in the NavbarToggler onClick is know declare to point to the function\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n    toggleNav(){\r\n        this.setState({\r\n        isNavOpen: !this.state.isNavOpen\r\n        })\r\n    }\r\n    handleLogin(event){\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render(){\r\n        // you can use empty <> ... </> for react fragment but for some reason its not working\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav}/>\r\n                        <NavbarBrand className='mr-auto' href=\"/\">\r\n                            <img src='assets/images/logo.png' height=\"30\" width=\"41\"\r\n                                alt=\"Restrunt Confusion\"/>\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"> Home</span>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"> About Us</span>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\"> Menu</span>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa-lg\"> Contact US</span>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className='row row-header'>\r\n                            <div className='col-12 col-sm-6'>\r\n                                <h1>restrunt Confusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Header"]},"metadata":{},"sourceType":"module"}