{"ast":null,"code":"var _jsxFileName = \"/home/eilon/programing/full-stack/confusion-new/confusion/src/component/EditBoxComponent.js\";\nimport React, { useState, useEffect } from 'react';\nimport Loading from './LoadingComponent';\n\nconst EditBox = props => {\n  const [edit, setEdit] = useState(false);\n  const [fontFamily, setFontFamily] = useState(() => {\n    if (props.myContent) return props.myContent[props.type][props.id][props.field].fontFamily;\n    return null;\n  });\n  const [size, setSize] = useState(() => {\n    if (props.myContent) return props.myContent[props.type][props.id][props.field].size;\n    return null;\n  });\n  var delay;\n  useEffect(() => {\n    if (props.myContent !== null && size != undefined && size + \"px\" !== props.myContent[props.type][props.id][props.field].fontSize) {\n      clearTimeout(delay);\n      delay = setTimeout(() => {\n        props.myContent[props.type][props.id][props.field].fontSize = size + \"px\";\n        props.putContent(props.myContent);\n      }, 333);\n    }\n  }, [size]);\n\n  if (props.myContent === null || props.myContent === undefined) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }\n    });\n  }\n\n  console.log(\"EditBox: props.myContent\", props.myContent ? \"myContent\" : \"null\", \" props.feild_name: \", props.field); //props.field   title/description\n  //props.id      0/1/2..\n  //props.type    head/dish/\n\n  var fontSize = props.myContent[props.type][props.id][props.field].fontSize;\n  var placeHolder = props.type + props.field;\n  var parentText = \"\"; // help to conect ti Input component state with the perent component (EditBox)\n\n  const Input = () => {\n    const [text, setText] = useState(() => {\n      if (props.myContent) return props.myContent[props.type][props.id][props.field].text;\n      return null;\n    });\n    useEffect(() => {\n      parentText = text;\n    }, [text]);\n\n    if (edit) {\n      if (props.field === \"title\") return /*#__PURE__*/React.createElement(\"input\", {\n        style: {\n          fontSize: fontSize\n        },\n        value: text,\n        onChange: event => setText(event.target.value),\n        placeholder: placeHolder,\n        className: fontFamily + \" col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 24\n        }\n      });else return /*#__PURE__*/React.createElement(\"textarea\", {\n        style: {\n          fontSize: fontSize\n        },\n        value: text,\n        onChange: event => setText(event.target.value),\n        placeholder: placeHolder,\n        className: fontFamily + \" col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 24\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: fontFamily + \" col-12\",\n      style: {\n        fontSize: fontSize,\n        mb: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 16\n      }\n    }, text);\n  };\n\n  function handleSubmit(event) {\n    console.log(\"handleSubmit, parentText\", parentText);\n    props.myContent[props.type][props.id][props.field].text = parentText;\n    props.myContent[props.type][props.id][props.field].fontFamily = fontFamily;\n    props.putContent(props.myContent);\n    setEdit(false);\n    event.preventDefault();\n  }\n\n  function handleOnClick() {\n    setEdit(true);\n  }\n\n  function handleFontSize(amount) {\n    const size = parseInt(fontSize.slice(0, fontSize.length - 2));\n\n    if (size < 8) {\n      alert(\"this is the minimum size\");\n      return;\n    }\n\n    if (size > 60) {\n      alert(\"this is the maximum size\");\n      return;\n    }\n\n    const new_size = String(size + amount) + \"px\";\n    props.myContent[props.type][props.id][props.field].fontSize = new_size;\n    props.putContent(props.myContent);\n  }\n\n  if (edit) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        padding: \"10px\",\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: event => handleSubmit(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      value: fontFamily,\n      onChange: event => setFontFamily(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"sofia\",\n      className: \"sofia\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, \"Sofia\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"indieFlower\",\n      className: \"indieFlower\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, \"Indie Flower\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"courgette\",\n      className: \"courgette\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, \"Courgette\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"courierPrime\",\n      className: \"courierPrime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }, \"Courier Prime\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"secularOne\",\n      className: \"secularOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, \"Secular One\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"architectsDaughter\",\n      className: \"architectsDaughter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, \"Architects Daughter\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"sacramento\",\n      className: \"sacramento\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, \"Sacramento\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"edit-save btn btn-secondary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, \"save\")));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        padding: \"10px\",\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"edit-save btn btn-secondary\",\n      onClick: () => handleOnClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }, \"edit\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"edit-save-arrow btn btn-secondary\",\n      onClick: () => setSize(size + 2),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-angle-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"edit-save-arrow btn btn-secondary\",\n      onClick: () => setSize(size - 2),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-angle-down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 33\n      }\n    }))));\n  }\n};\n\nexport default EditBox;","map":{"version":3,"sources":["/home/eilon/programing/full-stack/confusion-new/confusion/src/component/EditBoxComponent.js"],"names":["React","useState","useEffect","Loading","EditBox","props","edit","setEdit","fontFamily","setFontFamily","myContent","type","id","field","size","setSize","delay","undefined","fontSize","clearTimeout","setTimeout","putContent","console","log","placeHolder","parentText","Input","text","setText","event","target","value","mb","handleSubmit","preventDefault","handleOnClick","handleFontSize","amount","parseInt","slice","length","alert","new_size","String","padding","margin"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Loading  from './LoadingComponent'\n\n\nconst EditBox = (props) => {\n\n    const [edit, setEdit] = useState(false);\n    const [fontFamily, setFontFamily] = useState(() => {\n        if (props.myContent)\n            return (props.myContent[props.type][props.id][props.field].fontFamily);\n            \n        return null;\n    })\n    const [size, setSize] = useState(() => {\n        if (props.myContent)\n            return (props.myContent[props.type][props.id][props.field].size);\n            \n        return null;\n    })\n    \n    var delay;\n    useEffect(() => {\n        if (props.myContent !== null && size != undefined && size+\"px\" !== props.myContent[props.type][props.id][props.field].fontSize){\n            clearTimeout(delay)\n            delay = setTimeout(() => {\n                props.myContent[props.type][props.id][props.field].fontSize = size+\"px\";\n                props.putContent(props.myContent);\n            }, 333) \n    } }, [size]);\n\n\n    \n    if(props.myContent === null || props.myContent === undefined){\n        return <Loading/>\n    } \n    \n    console.log(\"EditBox: props.myContent\", props.myContent ? \"myContent\": \"null\", \" props.feild_name: \", props.field)\n\n    \n    //props.field   title/description\n    //props.id      0/1/2..\n    //props.type    head/dish/\n\n    var fontSize = props.myContent[props.type][props.id][props.field].fontSize;\n    var placeHolder=props.type + props.field;\n\n    var parentText = \"\"; // help to conect ti Input component state with the perent component (EditBox)\n    const Input = () => {\n        const [text, setText] = useState(() => {\n            if (props.myContent)\n                return (props.myContent[props.type][props.id][props.field].text);\n                \n            return null;\n        })\n        useEffect(() => {\n            parentText = text;     \n        }\n        , [text])\n        if(edit){\n            if (props.field === \"title\")\n                return <input  style={{fontSize:fontSize}} value={text} onChange={(event) => setText(event.target.value)}\n                                placeholder={placeHolder} className={fontFamily+\" col-12\"}/>\n            else\n                return <textarea  style={{fontSize:fontSize}} value={text} onChange={(event) => setText(event.target.value)}\n                                placeholder={placeHolder} className={fontFamily+\" col-12\"}/>\n        }\n        return <div className={fontFamily+\" col-12\"} style={{fontSize:fontSize, mb:0}}>{text}</div> \n        \n    }    \n    \n  \n    function handleSubmit(event){\n        console.log(\"handleSubmit, parentText\", parentText)\n        props.myContent[props.type][props.id][props.field].text = parentText\n        props.myContent[props.type][props.id][props.field].fontFamily = fontFamily\n        props.putContent(props.myContent);\n        setEdit(false)\n        event.preventDefault();\n    }\n\n\n    function handleOnClick(){\n        setEdit(true);\n    }\n\n    function handleFontSize(amount){\n        const size = parseInt(fontSize.slice(0, fontSize.length-2))\n        if(size < 8){\n            alert(\"this is the minimum size\");\n            return;\n        } if(size > 60){\n            alert(\"this is the maximum size\");\n            return;\n        } \n\n        const new_size = String(size + amount) + \"px\";\n\n        props.myContent[props.type][props.id][props.field].fontSize = new_size;\n        props.putContent(props.myContent);\n    }\n\n\n    \n    if(edit){\n        return(\n            <div className=\"row\" style={{ padding: \"10px\", margin:\"0px\"}}>\n                <form onSubmit={(event)=> handleSubmit(event)}>\n                    <Input/>\n                    <select value={fontFamily} onChange={(event) => setFontFamily(event.target.value)}>\n                        <option value=\"sofia\" className=\"sofia\">Sofia</option>\n                        <option value=\"indieFlower\" className=\"indieFlower\">Indie Flower</option>\n                        <option value=\"courgette\" className=\"courgette\">Courgette</option>\n                        <option value=\"courierPrime\" className=\"courierPrime\">Courier Prime</option>\n                        <option value=\"secularOne\" className=\"secularOne\">Secular One</option>\n                        <option value=\"architectsDaughter\" className=\"architectsDaughter\">Architects Daughter</option>\n                        <option value=\"sacramento\" className=\"sacramento\">Sacramento</option>\n                    </select>\n                    <button className=\"edit-save btn btn-secondary\" type=\"submit\" >save</button> \n                </form>\n            </div>\n        );\n    }\n    else{\n\n        return(\n                <div className=\"row\"  style={{ padding: \"10px\", margin:\"0px\"}}>\n                    <Input/>\n                        <div className=\"col-12\" >\n                            <button className=\"edit-save btn btn-secondary\" \n                                  onClick={()=>handleOnClick()}>edit</button>\n                            <button className=\"edit-save-arrow btn btn-secondary\" \n                                  onClick={()=>setSize(size+2)}>\n                                <span className=\"fa fa-angle-up\"></span>\n                            </button>\n                            <button className=\"edit-save-arrow btn btn-secondary\" \n                                    onClick={()=>setSize(size-2)}>\n                                <span className=\"fa fa-angle-down\"></span>\n                            </button>\n                        </div>\n                </div>\n        );\n    }\n\n}\n\nexport default EditBox;"]},"metadata":{},"sourceType":"module"}