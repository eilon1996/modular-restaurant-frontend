{"ast":null,"code":"var _jsxFileName = \"/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/src/component/EditBoxComponent.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Form, Input, Button, Label } from 'reactstrap';\nimport '../App.css';\nimport styles from './aaaa.module.css';\n\nconst EditBox = props => {\n  const [text, setText] = useState(null);\n  const [edit, setEdit] = useState(false);\n\n  if (props.content === null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 16\n      }\n    });\n  }\n\n  var field_index = 2;\n  var placeHolder = \"\";\n  var type = \"text\";\n  var fontSize = \"20px\";\n\n  if (!props.myContent) {\n    var fields = [props.myContent.id, props.myContent.password, props.myContent.title, props.myContent.titleFontSize, props.myContent.description, props.myContent.descriptionFontSize];\n  } //var currentText = \"\"\n\n\n  console.log(\"EditBox: props.content\", JSON.stringify(props.content), \" props.feild_name: \", props.field_name);\n\n  switch (props.field_name) {\n    case \"title\":\n      if (text === null) {\n        setText(props.myContent.title);\n      }\n\n      fontSize = props.myContent.titleFontSize;\n      placeHolder = \"restrunt name\";\n      break;\n\n    case \"description\":\n      if (text === null) {\n        setText(props.myContent.description);\n      }\n\n      fontSize = props.myContent.descriptionFontSize;\n      field_index = 4;\n      placeHolder = \"restrunt description\";\n      type = \"textarea\";\n  }\n\n  function handleChange(event) {\n    console.log(\"EditBox: event.value: \", event.target.value);\n    setText(event.target.value);\n    console.log(\"EditBox: text: \", text);\n  }\n\n  function handleSubmit(event) {\n    fields[field_index] = text;\n    console.log(fields);\n    props.putContent(fields);\n    setEdit(false);\n    event.preventDefault();\n  }\n\n  function handleOnClick() {\n    setEdit(true);\n  }\n\n  function handleFontSize(amount) {\n    const size = parseInt(fontSize.slice(0, fontSize.length - 2));\n\n    if (size < 8) {\n      alert(\"this is the minimum size\");\n      return;\n    }\n\n    if (size > 60) {\n      alert(\"this is the maximum size\");\n      return;\n    }\n\n    fields[field_index + 1] = String(size + amount) + \"px\";\n    console.log(fields);\n    props.putContent(fields);\n  }\n\n  if (edit) {\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: event => handleSubmit(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      style: {\n        fontSize: fontSize\n      },\n      type: type,\n      value: text,\n      onChange: event => handleChange(event),\n      placeholder: placeHolder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      \"edit-box\": true,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, \"save\")); //<Button type=\"submit\" value=\"Submit\" className='editBoxButton'>save</Button>\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        padding: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      style: {\n        fontSize: fontSize,\n        mb: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, text), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        height: '22px',\n        width: '50px',\n        fontSize: '14px',\n        padding: '0px'\n      },\n      onClick: () => handleOnClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    }, \"edit\"), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        height: '22px',\n        width: '22px',\n        fontSize: '14px',\n        padding: '0px'\n      },\n      onClick: () => handleFontSize(+2),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-angle-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        height: '22px',\n        width: '22px',\n        padding: '0px'\n      },\n      onClick: () => handleFontSize(-2),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-angle-down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 33\n      }\n    })))));\n  }\n};\n\nexport default EditBox;\n/*\nimport React, {Component} from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Label, Col , Row } from 'reactstrap'\nimport { Control, Form, Errors, Input} from 'react-redux-form';\n\nclass EditBox extends Component{\n\n    constructor(props){\n        super (props)\n\n        this.state = {\n            edit: false,\n            text:this.props.text\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values){\n        console.log(\"handleSubmit\", values)\n        this.props.putText(this.state.text, this.props.id, this.props.username);\n\n        this.setState({\n            edit: !this.state.edit\n        });\n    }\n\n\n    onClick(){\n\n        console.log(\"onClick\", this.state.edit)\n        this.setState({\n            edit: !this.state.edit\n        });\n    }\n\n    handleInputChange(event){\n            // This will update specific key in your form object inside the local state\n        this.setState({\n            form: Object.assign({}, this.state.form, {\n            [event.target.text]: event.target.value,\n        }),\n        });\n    }\n\n\n    render(){\n\n        \n\n        if(this.state.edit){\n\n            return( \n                <div>\n            <Form model=\"text\" onSubmit={(values) => this.handleSubmit(values)}>\n                <Control.textarea model=\".text\" id={this.props.id} name=\"text\" style = {{fontSize:\"35px\"}}\n                    rows={this.props.rows_num} \n                    className=\"form-control\"  \n                    onChange={event => this.handleInputChange(event)}\n                    defaultValue={this.props.text}/>\n\n                <Button type=\"submit\">save</Button>\n            </Form>\n\n            \n                </div>\n            );        \n            // onChange={this.handleInputChange}                   \n        }               \n        else{\n            return(\n            <div>\n                <div className = 'row'>\n                    <span style = {{fontSize:\"45px\", fontWeight:\"normal\"}}>{this.props.text} </span>\n                </div>\n                \n                <div className = 'row'>\n                    <Button onClick={()=>this.onClick()}>edit</Button>\n                </div>\n            </div>\n            );\n        }\n\n    }\n}\n\nexport default EditBox;\n\n*/","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/src/component/EditBoxComponent.js"],"names":["React","useState","useEffect","Form","Input","Button","Label","styles","EditBox","props","text","setText","edit","setEdit","content","field_index","placeHolder","type","fontSize","myContent","fields","id","password","title","titleFontSize","description","descriptionFontSize","console","log","JSON","stringify","field_name","handleChange","event","target","value","handleSubmit","putContent","preventDefault","handleOnClick","handleFontSize","amount","size","parseInt","slice","length","alert","String","padding","mb","height","width"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Form, Input, Button, Label} from 'reactstrap';\nimport '../App.css';\nimport styles from  './aaaa.module.css';\n\n\nconst EditBox = (props) => {\n\n    const [text, setText] = useState(null);\n    const [edit, setEdit] = useState(false);\n\n    if (props.content === null){\n        return <div></div>\n    }\n\n    var field_index = 2;\n    var placeHolder=\"\";\n    var type = \"text\";\n    var fontSize = \"20px\"\n    if (! props.myContent){\n        var fields = [props.myContent.id, props.myContent.password, props.myContent.title, props.myContent.titleFontSize,\n            props.myContent.description , props.myContent.descriptionFontSize];\n    }\n    //var currentText = \"\"\n    console.log(\"EditBox: props.content\", JSON.stringify(props.content), \" props.feild_name: \", props.field_name)\n    switch (props.field_name){\n        case \"title\":\n            if (text === null){\n                setText(props.myContent.title)\n            }\n            fontSize = props.myContent.titleFontSize;\n            placeHolder=\"restrunt name\";\n            break;\n\n        case \"description\":\n            if (text === null){\n                setText(props.myContent.description);\n            }\n            fontSize = props.myContent.descriptionFontSize;\n            field_index = 4;\n            placeHolder=\"restrunt description\";\n            type = \"textarea\";\n    }\n    \n    \n    function handleChange(event){        \n        console.log(\"EditBox: event.value: \", event.target.value);\n        setText(event.target.value);\n        console.log(\"EditBox: text: \", text);\n    }\n    \n  \n    function handleSubmit(event){\n        fields[field_index] = text;\n        console.log(fields);\n        props.putContent(fields);\n        setEdit(false)\n        event.preventDefault();\n    }\n    function handleOnClick(){\n        setEdit(true);\n    }\n    function handleFontSize(amount){\n        const size = parseInt(fontSize.slice(0, fontSize.length-2))\n        if(size < 8){\n            alert(\"this is the minimum size\");\n            return;\n        } if(size > 60){\n            alert(\"this is the maximum size\");\n            return;\n        } \n\n        fields[field_index+1] = String(size + amount) + \"px\";\n        console.log(fields);\n        props.putContent(fields);\n    }\n\n    \n    if(edit){\n        return(\n            <Form onSubmit={(event)=> handleSubmit(event)}>\n                <Input  style={{fontSize:fontSize}} type={type} value={text} onChange={(event) => handleChange(event)}\n                    placeholder={placeHolder}/>\n                <Button edit-box type=\"submit\" >save</Button>\n            </Form>\n        );\n        //<Button type=\"submit\" value=\"Submit\" className='editBoxButton'>save</Button>\n    }\n    else{\n\n        return(\n            <div>\n                <div className=\"row\"  style={{ padding: \"10px\"}}>\n                        <div  className=\"col-12\" style={{fontSize:fontSize, mb:0}}>{text}</div> \n                        <div  className=\"col-12\" >\n                            <Button style={{height: '22px', width : '50px', fontSize:'14px', padding:'0px'}}\n                                  onClick={()=>handleOnClick()}>edit</Button>\n                            <Button style={{height: '22px', width : '22px', fontSize:'14px', padding:'0px'}}\n                                  onClick={()=>handleFontSize(+2)}>\n                                <span className=\"fa fa-angle-up\"></span></Button>\n                            <Button style={{height: '22px', width : '22px', padding:'0px'}}\n                                    onClick={()=>handleFontSize(-2)}>\n                                <span className=\"fa fa-angle-down\"></span></Button>\n                        </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default EditBox;\n\n\n\n\n\n\n/*\nimport React, {Component} from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Label, Col , Row } from 'reactstrap'\nimport { Control, Form, Errors, Input} from 'react-redux-form';\n\nclass EditBox extends Component{\n\n    constructor(props){\n        super (props)\n\n        this.state = {\n            edit: false,\n            text:this.props.text\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values){\n        console.log(\"handleSubmit\", values)\n        this.props.putText(this.state.text, this.props.id, this.props.username);\n\n        this.setState({\n            edit: !this.state.edit\n        });\n    }\n\n\n    onClick(){\n\n        console.log(\"onClick\", this.state.edit)\n        this.setState({\n            edit: !this.state.edit\n        });\n    }\n\n    handleInputChange(event){\n            // This will update specific key in your form object inside the local state\n        this.setState({\n            form: Object.assign({}, this.state.form, {\n            [event.target.text]: event.target.value,\n        }),\n        });\n    }\n\n\n    render(){\n\n        \n\n        if(this.state.edit){\n\n            return( \n                <div>\n            <Form model=\"text\" onSubmit={(values) => this.handleSubmit(values)}>\n                <Control.textarea model=\".text\" id={this.props.id} name=\"text\" style = {{fontSize:\"35px\"}}\n                    rows={this.props.rows_num} \n                    className=\"form-control\"  \n                    onChange={event => this.handleInputChange(event)}\n                    defaultValue={this.props.text}/>\n\n                <Button type=\"submit\">save</Button>\n            </Form>\n\n            \n                </div>\n            );        \n            // onChange={this.handleInputChange}                   \n        }               \n        else{\n            return(\n            <div>\n                <div className = 'row'>\n                    <span style = {{fontSize:\"45px\", fontWeight:\"normal\"}}>{this.props.text} </span>\n                </div>\n                \n                <div className = 'row'>\n                    <Button onClick={()=>this.onClick()}>edit</Button>\n                </div>\n            </div>\n            );\n        }\n\n    }\n}\n\nexport default EditBox;\n\n*/"]},"metadata":{},"sourceType":"module"}