{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nexport const Content = (state = {\n  isLoading: true,\n  errMess: null,\n  content: null\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_CONTENT:\n      console.log(\"content.js: type: \" + action.type + \" payload: \" + action.payload);\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        content: action.payload\n      };\n\n    case ActionTypes.CONTENT_LOADING:\n      console.log(\"content.js: type: \" + action.type + \" payload: \" + action.payload); // returning a new state (not chaning it) with the values given\n\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        content: null\n      };\n\n    case ActionTypes.CONTENT_FAILED:\n      console.log(\"content.js: type: \" + action.type);\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload,\n        content: null\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion/confusion-origin/confusion/src/redux/content.js"],"names":["ActionTypes","Content","state","isLoading","errMess","content","action","type","ADD_CONTENT","console","log","payload","CONTENT_LOADING","CONTENT_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG;AACJC,EAAAA,SAAS,EAAC,IADN;AAEJC,EAAAA,OAAO,EAAE,IAFL;AAGJC,EAAAA,OAAO,EAAE;AAHL,CAAT,EAIYC,MAJZ,KAIuB;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACQ,SAAKP,WAAW,CAACQ,WAAjB;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBJ,MAAM,CAACC,IAA9B,GAAqC,YAArC,GAAkDD,MAAM,CAACK,OAArE;AACA,aAAO,EAAC,GAAGT,KAAJ;AAAWC,QAAAA,SAAS,EAAC,KAArB;AAA4BC,QAAAA,OAAO,EAAC,IAApC;AAA0CC,QAAAA,OAAO,EAAEC,MAAM,CAACK;AAA1D,OAAP;;AAEJ,SAAKX,WAAW,CAACY,eAAjB;AACIH,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBJ,MAAM,CAACC,IAA9B,GAAqC,YAArC,GAAkDD,MAAM,CAACK,OAArE,EADJ,CAEI;;AACA,aAAO,EAAC,GAAGT,KAAJ;AAAWC,QAAAA,SAAS,EAAC,IAArB;AAA2BC,QAAAA,OAAO,EAAC,IAAnC;AAAyCC,QAAAA,OAAO,EAAC;AAAjD,OAAP;;AAEJ,SAAKL,WAAW,CAACa,cAAjB;AACIJ,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBJ,MAAM,CAACC,IAA1C;AACA,aAAO,EAAC,GAAGL,KAAJ;AAAWC,QAAAA,SAAS,EAAC,KAArB;AAA4BC,QAAAA,OAAO,EAAEE,MAAM,CAACK,OAA5C;AAAqDN,QAAAA,OAAO,EAAE;AAA9D,OAAP;;AAKJ;AACI,aAAOH,KAAP;AAlBZ;AAoBH,CAzBM","sourcesContent":["import * as ActionTypes from './ActionTypes';\n\nexport const Content = (state = {\n                            isLoading:true, \n                            errMess: null,\n                            content: null\n                                }, action) => {\n    switch (action.type) {\n            case ActionTypes.ADD_CONTENT:\n                console.log(\"content.js: type: \" +(action.type)+ \" payload: \"+action.payload);\n                return {...state, isLoading:false, errMess:null, content: action.payload}\n            \n            case ActionTypes.CONTENT_LOADING:\n                console.log(\"content.js: type: \" +(action.type)+ \" payload: \"+action.payload);\n                // returning a new state (not chaning it) with the values given\n                return {...state, isLoading:true, errMess:null, content:null}\n\n            case ActionTypes.CONTENT_FAILED:\n                console.log(\"content.js: type: \" +(action.type));\n                return {...state, isLoading:false, errMess: action.payload, content: null}\n\n                \n\n          \n            default:\n                return state;\n      }\n};"]},"metadata":{},"sourceType":"module"}