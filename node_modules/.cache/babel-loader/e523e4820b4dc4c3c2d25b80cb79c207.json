{"ast":null,"code":"var _jsxFileName = \"/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/src/component/DishdetailComponent.js\";\nimport React, { Component, Fragment, useState } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport Loading from './LoadingComponent';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\nimport EditBox from './EditBoxComponent';\n\nconst required = val => val && val.length;\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => !val || val.length >= len;\n\nfunction DishDetail(props) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [rating, setRating] = useState(5);\n  const [author, setAuthor] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n\n  const RenderDish = () => {\n    return /*#__PURE__*/React.createElement(FadeTransform, {\n      in: true,\n      transformProps: {\n        exitTransform: 'scale(0.5) translateY(-50%)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardImg, {\n      top: true,\n      src: dish.image,\n      alt: dish.title.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(EditBox, {\n      field: \"description\",\n      type: \"dishes\",\n      id: props.dishId,\n      putContent: props.putContent,\n      myContent: props.myContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    })))));\n  };\n\n  function handleSubmit(values) {\n    setIsModalOpen(!isModalOpen);\n    postComment(dishId, rating, author, comment);\n    alert(\"current state is: \" + JSON.stringify(values));\n  }\n\n  const RenderComments = () => {\n    const comments_text = comments.map(comment => {\n      return /*#__PURE__*/React.createElement(Fade, {\n        in: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"list-unstyled\",\n        key: comment.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }, comment.comment, \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 47\n        }\n      }), \"--\", comment.author, \",\", new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: '2-digit'\n      }).format(new Date(Date.parse(comment.date)))))); //we use here in a script that translate date to readble date\n    });\n\n    const commentForm = () => {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        outline: true,\n        onClick: setIsModalOpen(!isModalOpen),\n        className: \"ml-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"fa fa-pencil fa-lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }\n      }), \" Submit Comment\")), /*#__PURE__*/React.createElement(Modal, {\n        outline: true,\n        isOpen: isModalOpen,\n        toggle: setIsModalOpen(!isModalOpen),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ModalHeader, {\n        toggle: setIsModalOpen(!isModalOpen),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }\n      }, \"Submit Comment\"), /*#__PURE__*/React.createElement(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(LocalForm, {\n        onSubmit: values => handleSubmit(values),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: {\n          size: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Control.select, {\n        model: \".rating\",\n        name: \"rating\",\n        value: rating,\n        onChange: event => setRating(event.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 45\n        }\n      }, \"5\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 45\n        }\n      }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 45\n        }\n      }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 45\n        }\n      }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 45\n        }\n      }, \"1\")))), /*#__PURE__*/React.createElement(Row, {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"author\",\n        md: {\n          size: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 37\n        }\n      }, \"Your Name\"), /*#__PURE__*/React.createElement(Col, {\n        md: {\n          size: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Control.text, {\n        model: \".author\",\n        id: \"author\",\n        name: \"author\",\n        placeholder: \"Your Name\",\n        className: \"form-control\",\n        onChange: event => setAuthor(event.target.value),\n        validators: {\n          required,\n          minLength: minLength(3),\n          maxLength: maxLength(15)\n        },\n        value: author,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(Errors, {\n        className: \"text-danger\",\n        model: \".author\",\n        show: \"touched\",\n        messages: {\n          required: 'Requierd ',\n          minLength: 'Must be greater than 2 characters ',\n          maxLength: 'Must be 15 characters or less '\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 41\n        }\n      }))), /*#__PURE__*/React.createElement(Row, {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"comment\",\n        md: {\n          size: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 37\n        }\n      }, \"Comment\"), /*#__PURE__*/React.createElement(Col, {\n        md: {\n          size: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Control.textarea, {\n        model: \".comment\",\n        id: \"comment\",\n        name: \"comment\",\n        rows: \"6\",\n        className: \"form-control\",\n        value: comment,\n        onChange: event => setComment(event.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 41\n        }\n      }))), /*#__PURE__*/React.createElement(Row, {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: {\n          size: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 41\n        }\n      }, \"Submit\")))))));\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, \"comments\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-gruop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Stagger, {\n      in: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, comments_text)), commentForm);\n  };\n\n  if (this.props.isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  try {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 37\n      }\n    }, \"Menu\")), /*#__PURE__*/React.createElement(BreadcrumbItem, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, this.props.myContent.dishes[this.props.dishId].title.text)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(EditBox, {\n      type: \"dishes\",\n      field: \"title\",\n      id: this.props.dishId,\n      putContent: this.props.putContent,\n      myContent: this.props.myContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(RenderDish, {\n      dish: this.props.myContent.dishes[this.props.dishId],\n      props: this.props,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(RenderComments, {\n      comments: this.props.comments,\n      postComment: this.props.postComment,\n      dishId: this.props.dishId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    }))));\n  } catch (e) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, this.props.errMess, e));\n  }\n}\n\nexport default DishDetail;","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/src/component/DishdetailComponent.js"],"names":["React","Component","Fragment","useState","Card","CardImg","CardText","CardBody","CardTitle","Link","Breadcrumb","BreadcrumbItem","Button","Modal","ModalBody","ModalHeader","Label","Col","Row","Control","LocalForm","Errors","Loading","FadeTransform","Fade","Stagger","EditBox","required","val","length","maxLength","len","minLength","DishDetail","props","isModalOpen","setIsModalOpen","rating","setRating","author","setAuthor","comment","setComment","RenderDish","exitTransform","dish","image","title","text","dishId","putContent","myContent","handleSubmit","values","postComment","alert","JSON","stringify","RenderComments","comments_text","comments","map","id","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","commentForm","size","event","target","value","isLoading","dishes","e","errMess"],"mappings":"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","sourcesContent":["import React, {Component, Fragment, useState} from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Label, Col , Row } from 'reactstrap'\nimport { Control, LocalForm, Errors} from 'react-redux-form';\nimport Loading from './LoadingComponent';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\nimport EditBox from './EditBoxComponent';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => val => !(val) || (val.length <= len)\nconst minLength = (len) => val => !(val) || (val.length >= len)\n\n\n\nfunction DishDetail(props){\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [rating, setRating] = useState(5);\n    const [author, setAuthor] = useState(\"\");\n    const [comment, setComment] = useState(\"\");\n\n    const RenderDish = () => {\n        return(\n            <FadeTransform in transformProps={{ exitTransform: 'scale(0.5) translateY(-50%)' }}>\n            <Card>\n                <CardImg top src={dish.image} alt={dish.title.text} />\n                <CardBody>\n                    <CardText> \n                        \n                        <EditBox field=\"description\" type=\"dishes\" id={props.dishId} putContent ={props.putContent} myContent={props.myContent}/>\n                    </CardText>\n                </CardBody>\n            </Card>\n            </FadeTransform>\n        );\n    }\n\n\n    function handleSubmit(values){\n        setIsModalOpen(! isModalOpen);\n        postComment(dishId, rating, author, comment);\n        alert(\"current state is: \" + JSON.stringify(values));\n    }\n\n    const RenderComments = () =>{\n\n        const comments_text = comments.map((comment)=>{\n            return (\n                <Fade in>\n                    <li className=\"list-unstyled\" key={comment.id}>\n                        <p>\n                            {comment.comment} <br/>\n                            --{comment.author},\n                            {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'})\n                                .format(new Date(Date.parse(comment.date)))}\n                        </p>\n                    </li>\n                </Fade>\n            );\n            //we use here in a script that translate date to readble date\n        });\n\n        const commentForm = () => {\n            return (\n                <Fragment>\n                    <div className=\"row\">\n                        <Button outline onClick={setIsModalOpen(! isModalOpen)} className='ml-auto'>\n                            <span className='fa fa-pencil fa-lg'></span> Submit Comment\n                        </Button>\n                    </div>\n                    <Modal outline isOpen={isModalOpen} toggle={setIsModalOpen(! isModalOpen)}>\n                        <ModalHeader toggle={setIsModalOpen(! isModalOpen)}>Submit Comment</ModalHeader>\n                        <ModalBody>\n\n                            <LocalForm onSubmit={(values) => handleSubmit(values)}>\n                                \n                                <Row className=\"form-group\">\n                                    <Col md={{ size: 12 }}>\n                                        <Control.select model=\".rating\" name=\"rating\"\n                                            value={rating} onChange={(event) => setRating(event.target.value)}>\n                                            <option>5</option>\n                                            <option>4</option>\n                                            <option>3</option>\n                                            <option>2</option>\n                                            <option>1</option>\n                                        </Control.select>\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"author\" md={{ size: 12 }}>Your Name</Label>\n                                    <Col md={{ size: 12 }}>\n                                        <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Your Name\" \n                                            className=\"form-control\" onChange={(event) => setAuthor(event.target.value)}\n                                            validators={{required, minLength:minLength(3), maxLength:maxLength(15)}}\n                                            value={author}/>\n                                        <Errors className=\"text-danger\" model=\".author\"\n                                        show=\"touched\" \n                                        messages={{\n                                                required: 'Requierd ',\n                                                minLength: 'Must be greater than 2 characters ',\n                                                maxLength: 'Must be 15 characters or less '\n                                        }}>\n                                        </Errors>\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"comment\" md={{ size: 12 }}>Comment</Label>\n                                    <Col md={{ size: 12 }}> \n                                        <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\n                                            rows=\"6\" className=\"form-control\"  value={comment}\n                                            onChange={(event) => setComment(event.target.value)}/>\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Col md={{ size: 12 }}>\n                                        <Button type=\"submit\" color=\"primary\">\n                                            Submit\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </LocalForm>\n                        </ModalBody>\n                    </Modal>\n                </Fragment>\n            );\n        }\n\n        return(\n            <div>\n                <h4>comments</h4>\n                <ul className=\"list-gruop\">\n                    <Stagger in>\n                        {comments_text}\n                    </Stagger>\n                </ul>\n                {commentForm }\n            </div>\n        )\n    }\n\n\n    if (this.props.isLoading){\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading/>\n                </div>\n            </div>\n        );\n    }\n    try{\n        return(\n            <div className=\"container\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>{this.props.myContent.dishes[this.props.dishId].title.text}</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                        <EditBox type=\"dishes\" field=\"title\" id={this.props.dishId} putContent ={this.props.putContent} myContent={this.props.myContent}/>\n                    <hr />\n                </div>       \n                <div className=\"row\">\n                    <div className=\"col-12 col-md-5 m-1\">\n                        <RenderDish dish={this.props.myContent.dishes[this.props.dishId]} props={this.props}/>\n                    </div>\n                    <div className=\"col-12 col-md-5 m-1\">\n                        <RenderComments comments={this.props.comments} \n                            postComment={this.props.postComment} \n                            dishId={this.props.dishId}/>\n                    </div>\n                </div>         \n            </div>\n        );\n\n    }\n    catch (e){\n\n        return (\n            <div>\n                <h4>{this.props.errMess}{e}</h4>\n            </div>\n        );\n    }\n}\n\n    \nexport default DishDetail;"]},"metadata":{},"sourceType":"module"}