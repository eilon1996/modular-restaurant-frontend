{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nexport const Content = (state = {\n  isLoading: true,\n  errMess: null,\n  content: nu\n}, action) => {\n  console.log(\"content.js: type: \" + action.type + \" payload: \" + action.payload);\n\n  switch (action.type) {\n    case ActionTypes.ADD_CONTENT:\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        content: action.payload\n      };\n\n    case ActionTypes.CONTENT_LOADING:\n      // returning a new state (not chaning it) with the values given\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        content: []\n      };\n\n    case ActionTypes.CONTENT_FAILED:\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload,\n        content: []\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion/confusion-origin/confusion/src/redux/content.js"],"names":["ActionTypes","Content","state","isLoading","errMess","content","nu","action","console","log","type","payload","ADD_CONTENT","CONTENT_LOADING","CONTENT_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG;AACJC,EAAAA,SAAS,EAAC,IADN;AAEJC,EAAAA,OAAO,EAAE,IAFL;AAGJC,EAAAA,OAAO,EAAEC;AAHL,CAAT,EAIYC,MAJZ,KAIuB;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBF,MAAM,CAACG,IAA9B,GAAqC,YAArC,GAAkDH,MAAM,CAACI,OAArE;;AACA,UAAQJ,MAAM,CAACG,IAAf;AACQ,SAAKV,WAAW,CAACY,WAAjB;AACI,aAAO,EAAC,GAAGV,KAAJ;AAAWC,QAAAA,SAAS,EAAC,KAArB;AAA4BC,QAAAA,OAAO,EAAC,IAApC;AAA0CC,QAAAA,OAAO,EAAEE,MAAM,CAACI;AAA1D,OAAP;;AAEJ,SAAKX,WAAW,CAACa,eAAjB;AACI;AACA,aAAO,EAAC,GAAGX,KAAJ;AAAWC,QAAAA,SAAS,EAAC,IAArB;AAA2BC,QAAAA,OAAO,EAAC,IAAnC;AAAyCC,QAAAA,OAAO,EAAC;AAAjD,OAAP;;AAEJ,SAAKL,WAAW,CAACc,cAAjB;AACI,aAAO,EAAC,GAAGZ,KAAJ;AAAWC,QAAAA,SAAS,EAAC,KAArB;AAA4BC,QAAAA,OAAO,EAAEG,MAAM,CAACI,OAA5C;AAAqDN,QAAAA,OAAO,EAAE;AAA9D,OAAP;;AAKJ;AACI,aAAOH,KAAP;AAfZ;AAiBH,CAvBM","sourcesContent":["import * as ActionTypes from './ActionTypes';\n\nexport const Content = (state = {\n                            isLoading:true, \n                            errMess: null,\n                            content: nu\n                                }, action) => {\n    console.log(\"content.js: type: \" +(action.type)+ \" payload: \"+action.payload);\n    switch (action.type) {\n            case ActionTypes.ADD_CONTENT:\n                return {...state, isLoading:false, errMess:null, content: action.payload}\n            \n            case ActionTypes.CONTENT_LOADING:\n                // returning a new state (not chaning it) with the values given\n                return {...state, isLoading:true, errMess:null, content:[]}\n\n            case ActionTypes.CONTENT_FAILED:\n                return {...state, isLoading:false, errMess: action.payload, content: []}\n\n                \n\n          \n            default:\n                return state;\n      }\n};"]},"metadata":{},"sourceType":"module"}