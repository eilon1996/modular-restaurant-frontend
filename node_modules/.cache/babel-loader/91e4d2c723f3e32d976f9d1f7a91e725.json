{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl'; ///////////putContnet///////////\n\nexport const putContent = fields_value => dispatch => {\n  console.log(\"ActionCreator-putcontent: id: \", fields_value[0], \" password: \", fields_value[1]);\n  const newContent = {\n    id: fields_value[0],\n    password: fields_value[1],\n    title: fields_value[2],\n    titleFontSize: fields_value[3],\n    description: fields_value[4],\n    descriptionFontSize: fields_value[5]\n  };\n  return fetch(baseUrl + 'content', {\n    method: \"POST\",\n    body: JSON.stringify(newContent),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => {\n    dispatch(updateContent(response)); //alert('Your content was submited successfully');\n  }).catch(error => {\n    console.log('submmit content', error.message);\n    alert('Your content could not be submited\\nError: ' + error.message);\n  });\n};\nexport const updateContent = content => ({\n  type: ActionTypes.ADD_CONTENT,\n  payload: content\n}); /// fetch content////\n\nexport const fetchContent = () => dispatch => {\n  dispatch(contentLoading(true));\n  return fetch(baseUrl + 'content').then(response => {\n    if (response.ok) {\n      console.log(\"ActionCreator-fetchContent, response is OK\\nresponse: \", response);\n      return response;\n    } else {\n      console.log(\"ActionCreator-fetchContent, response is NOT OK\\nresponse: \", response);\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    console.log(\"ActionCreator-fetchContent, NO response \\error.message: \", error.message);\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(content => dispatch(addContent(content))).catch(error => dispatch(contentFailed(error.message)));\n};\nexport const contentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.CONTENT_LOADING\n  };\n};\nexport const contentFailed = errmess => {\n  return {\n    type: ActionTypes.CONTENT_FAILED,\n    payload: errmess\n  };\n};\nexport const addContent = content => {\n  console.log(\"ActionCreator-addContent, content: \", content);\n  return {\n    type: ActionTypes.ADD_CONTENT,\n    payload: content\n  };\n}; ///////////feedback///////////\n\nexport const submitFeedback = (firstName, lastName, telNum, email, agree, contactType, message) => dispatch => {\n  const newFeedback = {\n    firstName: firstName,\n    lastName: lastName,\n    telNum: telNum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  }; //previesdly the id and the date where added in comments.js\n\n  newFeedback.date = new Date().toISOString();\n  return fetch(baseUrl + 'feedback', {\n    method: \"POST\",\n    body: JSON.stringify(newFeedback),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    //related to the backend \n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => {\n    dispatch(addFeedback(response));\n    alert('Your feedback was submited successfully');\n  }).catch(error => {\n    console.log('submmit feedback', error.message);\n    alert('Your feedback could not be submited\\nError: ' + error.message);\n  });\n};\nexport const addFeedback = feedback => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: feedback\n}); ///////////comments////////////\n//since this is a punc, I need to add the dispatch. So, I'll send the function of a function\n\nexport const postComment = (dishId, rating, author, comment) => dispatch => {\n  const newComment = {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment\n  }; //previesdly the id and the date where added in comments.js\n\n  newComment.date = new Date().toISOString();\n  return fetch(baseUrl + 'comments', {\n    method: \"POST\",\n    body: JSON.stringify(newComment),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    //related to the backend \n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => dispatch(addComment(response))).catch(error => {\n    console.log('post comments', error.message);\n    alert('Your comment could not be posted\\nError: ' + error.message);\n  });\n};\nexport const addComment = comment => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment\n}); //////////// LEADERS //////////////\n\nexport const fetchLeaders = () => dispatch => {\n  dispatch(leadersLoading(true));\n  return fetch(baseUrl + 'leaders').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(leaders => dispatch(addLeaders(leaders))).catch(error => dispatch(leadersFailed(error.message)));\n};\nexport const leadersLoading = () => ({\n  type: ActionTypes.LEADERS_LOADING\n});\nexport const leadersFailed = errmess => {\n  return {\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n  };\n};\nexport const addLeaders = leaders => {\n  //alert(\"action creator, leader: \"+ JSON.stringify(leaders))\n  return {\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n  };\n};\n/*\nexport const addLeaders = (leaders) => ({\n  type: ActionTypes.ADD_LEADERS,\n  payload: leaders\n});\n*/\n//////////// DISHES //////////////\n\nexport const fetchDishes = () => dispatch => {\n  console.log(\"ActionCreator-fetchDishes\");\n  dispatch(dishesLoading(true));\n  return fetch(baseUrl + 'dishes').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(dishes => dispatch(addDishes(dishes))).catch(error => dispatch(dishesFailed(error.message)));\n}; //returning an action\n\nexport const dishesLoading = () => {\n  console.log(\"ActionCreator-dishesLoading\");\n  return {\n    type: ActionTypes.DISHES_LOADING\n  };\n};\nexport const dishesFailed = errmess => {\n  //alert(\"actionCreator.js - dishesFailed: \"+ errmess);\n  return {\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n  };\n};\nexport const addDishes = dishes => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n}); //////////// COMMENTS //////////////\n\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + 'comments').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(comments => dispatch(addComments(comments))).catch(error => dispatch(commentsFailed(error.message)));\n};\nexport const commentsFailed = errmess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n}); //////////// PROMOTIONS //////////////\n\nexport const fetchPromos = () => dispatch => {\n  dispatch(promosLoading());\n  return fetch(baseUrl + 'promotions').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(promos => dispatch(addPromos(promos))).catch(error => dispatch(promosFailed(error.message)));\n};\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING\n});\nexport const promosFailed = errmess => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess\n});\nexport const addPromos = promos => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","putContent","fields_value","dispatch","console","log","newContent","id","password","title","titleFontSize","description","descriptionFontSize","fetch","method","body","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","updateContent","catch","message","alert","content","type","ADD_CONTENT","payload","fetchContent","contentLoading","errmess","addContent","contentFailed","CONTENT_LOADING","CONTENT_FAILED","submitFeedback","firstName","lastName","telNum","email","agree","contactType","newFeedback","date","Date","toISOString","addFeedback","feedback","ADD_COMMENT","postComment","dishId","rating","author","comment","newComment","addComment","fetchLeaders","leadersLoading","leaders","addLeaders","leadersFailed","LEADERS_LOADING","LEADERS_FAILED","ADD_LEADERS","fetchDishes","dishesLoading","dishes","addDishes","dishesFailed","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS"],"mappings":"AACA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,SAASC,OAAT,QAAwB,mBAAxB,C,CAEA;;AAEA,OAAO,MAAMC,UAAU,GAAIC,YAAD,IAAmBC,QAAD,IAAc;AAGxDC,EAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CH,YAAY,CAAC,CAAD,CAA1D,EAA+D,aAA/D,EAA8EA,YAAY,CAAC,CAAD,CAA1F;AAEA,QAAMI,UAAU,GAAG;AACjBC,IAAAA,EAAE,EAACL,YAAY,CAAC,CAAD,CADE;AAEjBM,IAAAA,QAAQ,EAACN,YAAY,CAAC,CAAD,CAFJ;AAGjBO,IAAAA,KAAK,EAAEP,YAAY,CAAC,CAAD,CAHF;AAIjBQ,IAAAA,aAAa,EAAER,YAAY,CAAC,CAAD,CAJV;AAKjBS,IAAAA,WAAW,EAAET,YAAY,CAAC,CAAD,CALR;AAMjBU,IAAAA,mBAAmB,EAAEV,YAAY,CAAC,CAAD;AANhB,GAAnB;AASA,SAAOW,KAAK,CAACb,OAAO,GAAG,SAAX,EAAsB;AAC9Bc,IAAAA,MAAM,EAAE,MADsB;AAE9BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,UAAf,CAFwB;AAG9BY,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAHqB;AAM9BC,IAAAA,WAAW,EAAE;AANiB,GAAtB,CAAL,CAQNC,IARM,CAQDC,QAAQ,IAAI;AACd,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,aAAOD,QAAP;AACD,KAFD,MAEO;AACL,UAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,WAAWH,QAAQ,CAACI,MAApB,GAA6B,IAA7B,GAAoCJ,QAAQ,CAACK,UAAvD,CAAZ;AACAH,MAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,YAAME,KAAN;AACD;AACF,GAhBI,EAiBLA,KAAK,IAAI;AACH,UAAMA,KAAN;AACL,GAnBI,EAoBNH,IApBM,CAoBDC,QAAQ,IAAIA,QAAQ,CAACM,IAAT,EApBX,EAqBNP,IArBM,CAqBDC,QAAQ,IAAI;AAChBlB,IAAAA,QAAQ,CAACyB,aAAa,CAACP,QAAD,CAAd,CAAR,CADgB,CAEhB;AACD,GAxBM,EAyBNQ,KAzBM,CAyBAN,KAAK,IAAK;AAAEnB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BkB,KAAK,CAACO,OAArC;AAClBC,IAAAA,KAAK,CAAC,gDAA8CR,KAAK,CAACO,OAArD,CAAL;AAAqE,GA1B/D,CAAP;AA2BD,CAzCM;AA2CP,OAAO,MAAMF,aAAa,GAAII,OAAD,KAAc;AACzCC,EAAAA,IAAI,EAAElC,WAAW,CAACmC,WADuB;AAEzCC,EAAAA,OAAO,EAAEH;AAFgC,CAAd,CAAtB,C,CAKP;;AACA,OAAO,MAAMI,YAAY,GAAG,MAAOjC,QAAD,IAAc;AAG9CA,EAAAA,QAAQ,CAACkC,cAAc,CAAC,IAAD,CAAf,CAAR;AAEA,SAAOxB,KAAK,CAACb,OAAO,GAAG,SAAX,CAAL,CACNoB,IADM,CACDC,QAAQ,IAAI;AACd,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACflB,MAAAA,OAAO,CAACC,GAAR,CAAY,wDAAZ,EAAsEgB,QAAtE;AACA,aAAOA,QAAP;AACD,KAHD,MAGO;AACLjB,MAAAA,OAAO,CAACC,GAAR,CAAY,4DAAZ,EAA0EgB,QAA1E;AACA,UAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,WAAWH,QAAQ,CAACI,MAApB,GAA6B,IAA7B,GAAoCJ,QAAQ,CAACK,UAAvD,CAAZ;AACAH,MAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,YAAME,KAAN;AACD;AACF,GAXI,EAYLA,KAAK,IAAI;AACPnB,IAAAA,OAAO,CAACC,GAAR,CAAY,0DAAZ,EAAwEkB,KAAK,CAACO,OAA9E;AACI,QAAIQ,OAAO,GAAG,IAAId,KAAJ,CAAUD,KAAK,CAACO,OAAhB,CAAd;AACA,UAAMQ,OAAN;AACL,GAhBI,EAiBNlB,IAjBM,CAiBDC,QAAQ,IAAIA,QAAQ,CAACM,IAAT,EAjBX,EAkBNP,IAlBM,CAkBDY,OAAO,IAAI7B,QAAQ,CAACoC,UAAU,CAACP,OAAD,CAAX,CAlBlB,EAmBNH,KAnBM,CAmBAN,KAAK,IAAIpB,QAAQ,CAACqC,aAAa,CAACjB,KAAK,CAACO,OAAP,CAAd,CAnBjB,CAAP;AAqBD,CA1BM;AA6BP,OAAO,MAAMO,cAAc,GAAG,MAAM;AAClCjC,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,SAAM;AACN4B,IAAAA,IAAI,EAAElC,WAAW,CAAC0C;AADZ,GAAN;AAEA,CAJK;AAMP,OAAO,MAAMD,aAAa,GAAKF,OAAD,IAAa;AACzC,SAAO;AACPL,IAAAA,IAAI,EAAElC,WAAW,CAAC2C,cADX;AAEPP,IAAAA,OAAO,EAAEG;AAFF,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,UAAU,GAAIP,OAAD,IAAa;AACrC5B,EAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmD2B,OAAnD;AACA,SAAO;AACLC,IAAAA,IAAI,EAAElC,WAAW,CAACmC,WADb;AAELC,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID,CANM,C,CAWP;;AAEA,OAAO,MAAMW,cAAc,GAAG,CAAEC,SAAF,EAAaC,QAAb,EAAuBC,MAAvB,EAA+BC,KAA/B,EAAsCC,KAAtC,EAA6CC,WAA7C,EAA0DnB,OAA1D,KAAuE3B,QAAD,IAAc;AAEhH,QAAM+C,WAAW,GAAG;AAClBN,IAAAA,SAAS,EAAEA,SADO;AAElBC,IAAAA,QAAQ,EAAEA,QAFQ;AAGlBC,IAAAA,MAAM,EAAEA,MAHU;AAIlBC,IAAAA,KAAK,EAAEA,KAJW;AAKlBC,IAAAA,KAAK,EAAEA,KALW;AAMlBC,IAAAA,WAAW,EAAEA,WANK;AAOlBnB,IAAAA,OAAO,EAAEA;AAPS,GAApB,CAFgH,CAYjH;;AACCoB,EAAAA,WAAW,CAACC,IAAZ,GAAmB,IAAIC,IAAJ,GAAWC,WAAX,EAAnB;AAEA,SAAOxC,KAAK,CAACb,OAAO,GAAG,UAAX,EAAuB;AAC/Bc,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeiC,WAAf,CAFyB;AAG/BhC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAHsB;AAM/B;AACAC,IAAAA,WAAW,EAAE;AAPkB,GAAvB,CAAL,CASNC,IATM,CASDC,QAAQ,IAAI;AACd,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,aAAOD,QAAP;AACD,KAFD,MAEO;AACL,UAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,WAAWH,QAAQ,CAACI,MAApB,GAA6B,IAA7B,GAAoCJ,QAAQ,CAACK,UAAvD,CAAZ;AACAH,MAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,YAAME,KAAN;AACD;AACF,GAjBI,EAkBLA,KAAK,IAAI;AACH,UAAMA,KAAN;AACL,GApBI,EAqBNH,IArBM,CAqBDC,QAAQ,IAAIA,QAAQ,CAACM,IAAT,EArBX,EAsBNP,IAtBM,CAsBDC,QAAQ,IAAI;AAChBlB,IAAAA,QAAQ,CAACmD,WAAW,CAACjC,QAAD,CAAZ,CAAR;AACAU,IAAAA,KAAK,CAAC,yCAAD,CAAL;AACD,GAzBM,EA0BNF,KA1BM,CA0BAN,KAAK,IAAK;AAAEnB,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCkB,KAAK,CAACO,OAAtC;AAClBC,IAAAA,KAAK,CAAC,iDAA+CR,KAAK,CAACO,OAAtD,CAAL;AAAsE,GA3BhE,CAAP;AA4BD,CA3CM;AA6CP,OAAO,MAAMwB,WAAW,GAAIC,QAAD,KAAe;AACxCtB,EAAAA,IAAI,EAAElC,WAAW,CAACyD,WADsB;AAExCrB,EAAAA,OAAO,EAAEoB;AAF+B,CAAf,CAApB,C,CAOP;AAEA;;AACA,OAAO,MAAME,WAAW,GAAG,CAACC,MAAD,EAASC,MAAT,EAAiBC,MAAjB,EAAyBC,OAAzB,KAAsC1D,QAAD,IAAc;AAE5E,QAAM2D,UAAU,GAAG;AACfJ,IAAAA,MAAM,EAAEA,MADO;AAEfC,IAAAA,MAAM,EAAEA,MAFO;AAGfC,IAAAA,MAAM,EAAEA,MAHO;AAIfC,IAAAA,OAAO,EAAEA;AAJM,GAAnB,CAF4E,CAS7E;;AACCC,EAAAA,UAAU,CAACX,IAAX,GAAkB,IAAIC,IAAJ,GAAWC,WAAX,EAAlB;AAEA,SAAOxC,KAAK,CAACb,OAAO,GAAG,UAAX,EAAuB;AAC/Bc,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe6C,UAAf,CAFyB;AAG/B5C,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAHsB;AAM/B;AACAC,IAAAA,WAAW,EAAE;AAPkB,GAAvB,CAAL,CASNC,IATM,CASDC,QAAQ,IAAI;AACd,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,aAAOD,QAAP;AACD,KAFD,MAEO;AACL,UAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,WAAWH,QAAQ,CAACI,MAApB,GAA6B,IAA7B,GAAoCJ,QAAQ,CAACK,UAAvD,CAAZ;AACAH,MAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,YAAME,KAAN;AACD;AACF,GAjBI,EAkBLA,KAAK,IAAI;AACH,UAAMA,KAAN;AACL,GApBI,EAqBNH,IArBM,CAqBDC,QAAQ,IAAIA,QAAQ,CAACM,IAAT,EArBX,EAsBNP,IAtBM,CAsBDC,QAAQ,IAAIlB,QAAQ,CAAC4D,UAAU,CAAC1C,QAAD,CAAX,CAtBnB,EAuBNQ,KAvBM,CAuBAN,KAAK,IAAK;AAAEnB,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BkB,KAAK,CAACO,OAAnC;AAA6CC,IAAAA,KAAK,CAAC,8CAA4CR,KAAK,CAACO,OAAnD,CAAL;AAAmE,GAvB5H,CAAP;AAwBD,CApCM;AAuCP,OAAO,MAAMiC,UAAU,GAAIF,OAAD,KAAc;AACtC5B,EAAAA,IAAI,EAAElC,WAAW,CAACyD,WADoB;AAEtCrB,EAAAA,OAAO,EAAE0B;AAF6B,CAAd,CAAnB,C,CAOP;;AAEA,OAAO,MAAMG,YAAY,GAAG,MAAO7D,QAAD,IAAc;AAE9CA,EAAAA,QAAQ,CAAC8D,cAAc,CAAC,IAAD,CAAf,CAAR;AAEA,SAAOpD,KAAK,CAACb,OAAO,GAAG,SAAX,CAAL,CACNoB,IADM,CACDC,QAAQ,IAAI;AACd,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,aAAOD,QAAP;AACD,KAFD,MAEO;AACL,UAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,WAAWH,QAAQ,CAACI,MAApB,GAA6B,IAA7B,GAAoCJ,QAAQ,CAACK,UAAvD,CAAZ;AACAH,MAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,YAAME,KAAN;AACD;AACF,GATI,EAULA,KAAK,IAAI;AACH,QAAIe,OAAO,GAAG,IAAId,KAAJ,CAAUD,KAAK,CAACO,OAAhB,CAAd;AACA,UAAMQ,OAAN;AACL,GAbI,EAcNlB,IAdM,CAcDC,QAAQ,IAAIA,QAAQ,CAACM,IAAT,EAdX,EAeNP,IAfM,CAeD8C,OAAO,IAAI/D,QAAQ,CAACgE,UAAU,CAACD,OAAD,CAAX,CAflB,EAgBNrC,KAhBM,CAgBAN,KAAK,IAAIpB,QAAQ,CAACiE,aAAa,CAAC7C,KAAK,CAACO,OAAP,CAAd,CAhBjB,CAAP;AAkBD,CAtBM;AAyBP,OAAO,MAAMmC,cAAc,GAAG,OAAO;AACnChC,EAAAA,IAAI,EAAElC,WAAW,CAACsE;AADiB,CAAP,CAAvB;AAIP,OAAO,MAAMD,aAAa,GAAK9B,OAAD,IAAa;AACzC,SAAO;AACPL,IAAAA,IAAI,EAAElC,WAAW,CAACuE,cADX;AAEPnC,IAAAA,OAAO,EAAEG;AAFF,GAAP;AAGD,CAJM;AAMP,OAAO,MAAM6B,UAAU,GAAID,OAAD,IAAa;AACrC;AACA,SAAO;AACLjC,IAAAA,IAAI,EAAElC,WAAW,CAACwE,WADb;AAELpC,IAAAA,OAAO,EAAE+B;AAFJ,GAAP;AAID,CANM;AAQP;;;;;;AAOA;;AAGA,OAAO,MAAMM,WAAW,GAAG,MAAOrE,QAAD,IAAc;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACEF,EAAAA,QAAQ,CAACsE,aAAa,CAAC,IAAD,CAAd,CAAR;AAEA,SAAO5D,KAAK,CAACb,OAAO,GAAG,QAAX,CAAL,CACNoB,IADM,CACDC,QAAQ,IAAI;AACd,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,aAAOD,QAAP;AACD,KAFD,MAEO;AACL,UAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,WAAWH,QAAQ,CAACI,MAApB,GAA6B,IAA7B,GAAoCJ,QAAQ,CAACK,UAAvD,CAAZ;AACAH,MAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,YAAME,KAAN;AACD;AACF,GATI,EAULA,KAAK,IAAI;AACH,QAAIe,OAAO,GAAG,IAAId,KAAJ,CAAUD,KAAK,CAACO,OAAhB,CAAd;AACA,UAAMQ,OAAN;AACL,GAbI,EAcNlB,IAdM,CAcDC,QAAQ,IAAIA,QAAQ,CAACM,IAAT,EAdX,EAeNP,IAfM,CAeDsD,MAAM,IAAIvE,QAAQ,CAACwE,SAAS,CAACD,MAAD,CAAV,CAfjB,EAgBN7C,KAhBM,CAgBAN,KAAK,IAAIpB,QAAQ,CAACyE,YAAY,CAACrD,KAAK,CAACO,OAAP,CAAb,CAhBjB,CAAP;AAkBH,CAtBM,C,CAyBP;;AACA,OAAO,MAAM2C,aAAa,GAAG,MAAM;AACjCrE,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACE,SAAM;AAAC4B,IAAAA,IAAI,EAAElC,WAAW,CAAC8E;AAAnB,GAAN;AACH,CAHM;AAKP,OAAO,MAAMD,YAAY,GAAKtC,OAAD,IAAa;AACtC;AACA,SAAO;AACPL,IAAAA,IAAI,EAAElC,WAAW,CAAC+E,aADX;AAEP3C,IAAAA,OAAO,EAAEG;AAFF,GAAP;AAGH,CALM;AAOP,OAAO,MAAMqC,SAAS,GAAID,MAAD,KAAa;AAClCzC,EAAAA,IAAI,EAAElC,WAAW,CAACgF,UADgB;AAElC5C,EAAAA,OAAO,EAAEuC;AAFyB,CAAb,CAAlB,C,CAMP;;AAEA,OAAO,MAAMM,aAAa,GAAG,MAAO7E,QAAD,IAAc;AAC7C,SAAOU,KAAK,CAACb,OAAO,GAAG,UAAX,CAAL,CACNoB,IADM,CACDC,QAAQ,IAAI;AACd,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,aAAOD,QAAP;AACD,KAFD,MAEO;AACL,UAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,WAAWH,QAAQ,CAACI,MAApB,GAA6B,IAA7B,GAAoCJ,QAAQ,CAACK,UAAvD,CAAZ;AACAH,MAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,YAAME,KAAN;AACD;AACF,GATI,EAULA,KAAK,IAAI;AACH,QAAIe,OAAO,GAAG,IAAId,KAAJ,CAAUD,KAAK,CAACO,OAAhB,CAAd;AACA,UAAMQ,OAAN;AACL,GAbI,EAcNlB,IAdM,CAcDC,QAAQ,IAAIA,QAAQ,CAACM,IAAT,EAdX,EAeNP,IAfM,CAeD6D,QAAQ,IAAI9E,QAAQ,CAAC+E,WAAW,CAACD,QAAD,CAAZ,CAfnB,EAgBNpD,KAhBM,CAgBAN,KAAK,IAAIpB,QAAQ,CAACgF,cAAc,CAAC5D,KAAK,CAACO,OAAP,CAAf,CAhBjB,CAAP;AAiBH,CAlBM;AAoBP,OAAO,MAAMqD,cAAc,GAAI7C,OAAD,KAAc;AACxCL,EAAAA,IAAI,EAAElC,WAAW,CAACqF,eADsB;AAExCjD,EAAAA,OAAO,EAAEG;AAF+B,CAAd,CAAvB;AAKP,OAAO,MAAM4C,WAAW,GAAID,QAAD,KAAe;AACtChD,EAAAA,IAAI,EAAElC,WAAW,CAACsF,YADoB;AAEtClD,EAAAA,OAAO,EAAE8C;AAF6B,CAAf,CAApB,C,CAMP;;AAEA,OAAO,MAAMK,WAAW,GAAG,MAAOnF,QAAD,IAAc;AAE3CA,EAAAA,QAAQ,CAACoF,aAAa,EAAd,CAAR;AAEA,SAAO1E,KAAK,CAACb,OAAO,GAAG,YAAX,CAAL,CACNoB,IADM,CACDC,QAAQ,IAAI;AACd,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,aAAOD,QAAP;AACD,KAFD,MAEO;AACL,UAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,WAAWH,QAAQ,CAACI,MAApB,GAA6B,IAA7B,GAAoCJ,QAAQ,CAACK,UAAvD,CAAZ;AACAH,MAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,YAAME,KAAN;AACD;AACF,GATI,EAULA,KAAK,IAAI;AACH,QAAIe,OAAO,GAAG,IAAId,KAAJ,CAAUD,KAAK,CAACO,OAAhB,CAAd;AACA,UAAMQ,OAAN;AACL,GAbI,EAcNlB,IAdM,CAcDC,QAAQ,IAAIA,QAAQ,CAACM,IAAT,EAdX,EAeNP,IAfM,CAeDoE,MAAM,IAAIrF,QAAQ,CAACsF,SAAS,CAACD,MAAD,CAAV,CAfjB,EAgBN3D,KAhBM,CAgBAN,KAAK,IAAIpB,QAAQ,CAACuF,YAAY,CAACnE,KAAK,CAACO,OAAP,CAAb,CAhBjB,CAAP;AAiBH,CArBM;AAuBP,OAAO,MAAMyD,aAAa,GAAG,OAAO;AAChCtD,EAAAA,IAAI,EAAElC,WAAW,CAAC4F;AADc,CAAP,CAAtB;AAIP,OAAO,MAAMD,YAAY,GAAIpD,OAAD,KAAc;AACtCL,EAAAA,IAAI,EAAElC,WAAW,CAAC6F,aADoB;AAEtCzD,EAAAA,OAAO,EAAEG;AAF6B,CAAd,CAArB;AAKP,OAAO,MAAMmD,SAAS,GAAID,MAAD,KAAa;AAClCvD,EAAAA,IAAI,EAAElC,WAAW,CAAC8F,UADgB;AAElC1D,EAAAA,OAAO,EAAEqD;AAFyB,CAAb,CAAlB","sourcesContent":["\nimport * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\n///////////putContnet///////////\n\nexport const putContent = (fields_value) => (dispatch) => {\n\n\n  console.log(\"ActionCreator-putcontent: id: \", fields_value[0], \" password: \", fields_value[1]);\n\n  const newContent = {\n    id:fields_value[0],\n    password:fields_value[1],\n    title: fields_value[2],\n    titleFontSize: fields_value[3],\n    description: fields_value[4],\n    descriptionFontSize: fields_value[5]\n  };\n  \n  return fetch(baseUrl + 'content', {\n      method: \"POST\",\n      body: JSON.stringify(newContent),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"same-origin\"\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => {\n    dispatch(updateContent(response));\n    //alert('Your content was submited successfully');\n  })\n  .catch(error =>  { console.log('submmit content', error.message);\n   alert('Your content could not be submited\\nError: '+error.message); });\n};\n\nexport const updateContent = (content) => ({\n  type: ActionTypes.ADD_CONTENT,\n  payload: content\n});\n\n/// fetch content////\nexport const fetchContent = () => (dispatch) => {\n\n\n  dispatch(contentLoading(true));\n\n  return fetch(baseUrl + 'content')\n  .then(response => {\n      if (response.ok) {\n        console.log(\"ActionCreator-fetchContent, response is OK\\nresponse: \", response);        \n        return response;\n      } else {\n        console.log(\"ActionCreator-fetchContent, response is NOT OK\\nresponse: \", response);   \n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n      console.log(\"ActionCreator-fetchContent, NO response \\error.message: \", error.message); \n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(content => dispatch(addContent(content)))\n  .catch(error => dispatch(contentFailed(error.message)));\n\n}\n\n\nexport const contentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return{\n  type: ActionTypes.CONTENT_LOADING\n}}\n\nexport const contentFailed = ((errmess) => {\n  return({\n  type: ActionTypes.CONTENT_FAILED,\n  payload: errmess});\n});\n\nexport const addContent = (content) => {\n  console.log(\"ActionCreator-addContent, content: \", content); \n  return({\n    type: ActionTypes.ADD_CONTENT,\n    payload: content\n  });\n}\n\n\n\n\n///////////feedback///////////\n\nexport const submitFeedback = ( firstName, lastName, telNum, email, agree, contactType, message) => (dispatch) => {\n\n  const newFeedback = {\n    firstName: firstName,\n    lastName: lastName,\n    telNum: telNum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  };\n  \n //previesdly the id and the date where added in comments.js\n  newFeedback.date = new Date().toISOString();\n  \n  return fetch(baseUrl + 'feedback', {\n      method: \"POST\",\n      body: JSON.stringify(newFeedback),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      //related to the backend \n      credentials: \"same-origin\"\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => {\n    dispatch(addFeedback(response));\n    alert('Your feedback was submited successfully');\n  })\n  .catch(error =>  { console.log('submmit feedback', error.message);\n   alert('Your feedback could not be submited\\nError: '+error.message); });\n};\n\nexport const addFeedback = (feedback) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: feedback\n});\n\n\n\n///////////comments////////////\n\n//since this is a punc, I need to add the dispatch. So, I'll send the function of a function\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n  const newComment = {\n      dishId: dishId,\n      rating: rating,\n      author: author,\n      comment: comment\n  };\n  \n //previesdly the id and the date where added in comments.js\n  newComment.date = new Date().toISOString();\n  \n  return fetch(baseUrl + 'comments', {\n      method: \"POST\",\n      body: JSON.stringify(newComment),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      //related to the backend \n      credentials: \"same-origin\"\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => dispatch(addComment(response)))\n  .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\n};\n\n\nexport const addComment = (comment) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment\n});\n\n\n\n//////////// LEADERS //////////////\n\nexport const fetchLeaders = () => (dispatch) => {\n\n  dispatch(leadersLoading(true));\n\n  return fetch(baseUrl + 'leaders')\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(leaders => dispatch(addLeaders(leaders)))\n  .catch(error => dispatch(leadersFailed(error.message)));\n\n}\n\n\nexport const leadersLoading = () => ({\n  type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = ((errmess) => {\n  return({\n  type: ActionTypes.LEADERS_FAILED,\n  payload: errmess});\n});\n\nexport const addLeaders = (leaders) => {\n  //alert(\"action creator, leader: \"+ JSON.stringify(leaders))\n  return({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n  });\n}\n\n/*\nexport const addLeaders = (leaders) => ({\n  type: ActionTypes.ADD_LEADERS,\n  payload: leaders\n});\n*/\n\n//////////// DISHES //////////////\n\n\nexport const fetchDishes = () => (dispatch) => {\n  console.log(\"ActionCreator-fetchDishes\");\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(dishes => dispatch(addDishes(dishes)))\n    .catch(error => dispatch(dishesFailed(error.message)));\n\n}\n\n\n//returning an action\nexport const dishesLoading = () => {\n  console.log(\"ActionCreator-dishesLoading\");\n    return{type: ActionTypes.DISHES_LOADING}\n}\n\nexport const dishesFailed = ((errmess) => {\n    //alert(\"actionCreator.js - dishesFailed: \"+ errmess);\n    return({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess});\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\n\n//////////// COMMENTS //////////////\n\nexport const fetchComments = () => (dispatch) => {    \n    return fetch(baseUrl + 'comments')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\n\n//////////// PROMOTIONS //////////////\n\nexport const fetchPromos = () => (dispatch) => {\n    \n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)))\n    .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});"]},"metadata":{},"sourceType":"module"}