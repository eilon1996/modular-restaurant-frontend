{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nexport const Leaders = (state = {\n  isLoading: true,\n  errMess: null,\n  leaders: []\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_LEADERS:\n      //alert(\"action creator, leader: \"+ JSON.stringify(action.payload))\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        leaders: action.payload\n      };\n\n    case ActionTypes.LEADERS_LOADING:\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        leaders: []\n      };\n\n    case ActionTypes.LEADERS_FAILED:\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload,\n        leaders: []\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/eilon/programing/full-stack/confusion-new/confusion/src/redux/leaders.js"],"names":["ActionTypes","Leaders","state","isLoading","errMess","leaders","action","type","ADD_LEADERS","payload","LEADERS_LOADING","LEADERS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG;AACJC,EAAAA,SAAS,EAAC,IADN;AAEJC,EAAAA,OAAO,EAAE,IAFL;AAGJC,EAAAA,OAAO,EAAE;AAHL,CAAT,EAIYC,MAJZ,KAIuB;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACQ,SAAKP,WAAW,CAACQ,WAAjB;AAEI;AACA,aAAO,EAAC,GAAGN,KAAJ;AAAWC,QAAAA,SAAS,EAAC,KAArB;AAA4BC,QAAAA,OAAO,EAAC,IAApC;AAA0CC,QAAAA,OAAO,EAAEC,MAAM,CAACG;AAA1D,OAAP;;AAEJ,SAAKT,WAAW,CAACU,eAAjB;AACI,aAAO,EAAC,GAAGR,KAAJ;AAAWC,QAAAA,SAAS,EAAC,IAArB;AAA2BC,QAAAA,OAAO,EAAC,IAAnC;AAAyCC,QAAAA,OAAO,EAAC;AAAjD,OAAP;;AAEJ,SAAKL,WAAW,CAACW,cAAjB;AACI,aAAO,EAAC,GAAGT,KAAJ;AAAWC,QAAAA,SAAS,EAAC,KAArB;AAA4BC,QAAAA,OAAO,EAAEE,MAAM,CAACG,OAA5C;AAAqDJ,QAAAA,OAAO,EAAE;AAA9D,OAAP;;AAEJ;AACI,aAAOH,KAAP;AAbZ;AAeH,CApBM","sourcesContent":["import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = {\n                            isLoading:true, \n                            errMess: null,\n                            leaders: []\n                                }, action) => {\n    switch (action.type) {\n            case ActionTypes.ADD_LEADERS:\n\n                //alert(\"action creator, leader: \"+ JSON.stringify(action.payload))\n                return {...state, isLoading:false, errMess:null, leaders: action.payload}\n            \n            case ActionTypes.LEADERS_LOADING:\n                return {...state, isLoading:true, errMess:null, leaders:[]}\n\n            case ActionTypes.LEADERS_FAILED:\n                return {...state, isLoading:false, errMess: action.payload, leaders: []}\n          \n            default:\n                return state;\n      }\n};"]},"metadata":{},"sourceType":"module"}