{"ast":null,"code":"var _jsxFileName = \"/home/eilon/programing/full-stack/confusion-new/confusion/src/component/Dishdetail.js\";\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport Loading from './Loading';\nimport { baseUrl } from '../shared/externalUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\nimport EditBox from './EditBox';\nimport MultiSelect from \"react-multi-select-component\";\nimport Dropzone from 'react-dropzone';\nimport { putContent } from '../redux/ActionCreators';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst required = val => val && val.length;\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => !val || val.length >= len;\n\nfunction DishDetail(props) {\n  const {\n    myContent,\n    isLoading,\n    errMess\n  } = useSelector(store => store.myContent);\n  const dispatch = useDispatch();\n  const [render, setRender] = useState(0);\n  const [selected, setSelected] = useState(() => {\n    var value = [];\n\n    if (myContent !== null) {\n      if (myContent[\"dishes\"][props.id][\"label\"].indexOf(\"Hot\") > -1) value.push({\n        label: \"Hot ðŸŒ¶\",\n        value: \"Hot ðŸŒ¶\"\n      });\n      if (myContent[\"dishes\"][props.id][\"label\"].indexOf(\"Vegan\") > -1) value.push({\n        label: \"Vegan ðŸŒ±\",\n        value: \"Vegan ðŸŒ±\"\n      });\n    }\n\n    return value;\n  });\n  const labels = selected.length == 2 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 43\n    }\n  }, \"Hot \\uD83C\\uDF36 & Vegan \\uD83C\\uDF31\") : null;\n  const options = [{\n    label: \"Hot ðŸŒ¶\",\n    value: \"Hot ðŸŒ¶\"\n  }, {\n    label: \"Vegan ðŸŒ±\",\n    value: \"Vegan ðŸŒ±\"\n  }];\n  useEffect(() => {\n    if (myContent !== null && selected.map(label => label.label).join() !== myContent[\"dishes\"][props.id][\"label\"]) {\n      console.log(\"selected\", selected);\n      myContent[\"dishes\"][props.id][\"label\"] = selected.map(label => label.label).join();\n      dispatch(putContent(myContent));\n    }\n  }, [selected]);\n\n  const Comments = () => {\n    return myContent ? myContent.dishes[props.id].comments ? /*#__PURE__*/React.createElement(Stagger, {\n      in: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, myContent.dishes[props.id].comments.map(comment => /*#__PURE__*/React.createElement(Fade, {\n      in: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list-unstyled\",\n      key: comment.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 37\n      }\n    }, comment.comment, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 59\n      }\n    }), \"--\", comment.author, \",\", new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: '2-digit'\n    }).format(new Date(Date.parse(comment.date)))))))) : /*#__PURE__*/React.createElement(Stagger, {\n      in: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 37\n      }\n    }, \"be the first to comment!\"))) : /*#__PURE__*/React.createElement(Stagger, {\n      in: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }\n    }, \"loading comments...\")));\n  };\n\n  const AddComment = () => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [rating, setRating] = useState(5);\n    const [author, setAuthor] = useState(\"\");\n    const [comment, setComment] = useState(\"\");\n\n    function handleSubmit(values) {\n      setIsModalOpen(!isModalOpen);\n      const amount = myContent[\"dishes\"][props.id][\"comments\"].length;\n      let newComment = {\n        \"author\": values.author,\n        \"comment\": values.comment,\n        \"date\": new Date().toISOString(),\n        \"id\": amount,\n        \"rating\": values.rating\n      };\n      myContent[\"dishes\"][props.id].comments[amount] = newComment;\n      dispatch(putContent(myContent));\n      setRender(render + 1);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      outline: true,\n      onClick: () => setIsModalOpen(!isModalOpen),\n      className: \"ml-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-pencil fa-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }), \" Submit Comment\"), /*#__PURE__*/React.createElement(Modal, {\n      outline: true,\n      isOpen: isModalOpen,\n      toggle: () => setIsModalOpen(!isModalOpen),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: () => setIsModalOpen(!isModalOpen),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, \"Submit Comment\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(LocalForm, {\n      onSubmit: values => handleSubmit(values),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: {\n        size: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Control.select, {\n      model: \".rating\",\n      name: \"rating\",\n      value: rating,\n      onChange: event => setRating(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 41\n      }\n    }, \"5\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 41\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 41\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 41\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 41\n      }\n    }, \"1\")))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"author\",\n      md: {\n        size: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }, \"Your Name\"), /*#__PURE__*/React.createElement(Col, {\n      md: {\n        size: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Control.text, {\n      model: \".author\",\n      id: \"author\",\n      name: \"author\",\n      placeholder: \"Your Name\",\n      className: \"form-control\",\n      onChange: event => setAuthor(event.target.value),\n      validators: {\n        required,\n        minLength: minLength(3),\n        maxLength: maxLength(15)\n      },\n      value: author,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".author\",\n      show: \"touched\",\n      messages: {\n        required: 'Requierd ',\n        minLength: 'Must be greater than 2 characters ',\n        maxLength: 'Must be 15 characters or less '\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"comment\",\n      md: {\n        size: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 33\n      }\n    }, \"Comment\"), /*#__PURE__*/React.createElement(Col, {\n      md: {\n        size: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Control.textarea, {\n      model: \".comment\",\n      id: \"comment\",\n      name: \"comment\",\n      rows: \"6\",\n      className: \"form-control\",\n      value: comment,\n      onChange: event => setComment(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: {\n        size: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 37\n      }\n    }, \"Submit\")))))));\n  };\n\n  if (isLoading) {\n    console.log(\"loading\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  try {\n    console.log(\"try\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 41\n      }\n    }, \"Menu\")), /*#__PURE__*/React.createElement(BreadcrumbItem, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    }, myContent.dishes[props.id].title.text)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(EditBox, {\n      type: \"dishes\",\n      field: \"title\",\n      id: props.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FadeTransform, {\n      in: true,\n      transformProps: {\n        exitTransform: 'scale(0.5) translateY(-50%)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(CardImg, {\n      top: true,\n      src: myContent.dishes[props.id].image,\n      alt: myContent.dishes[props.id].title.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 41\n      }\n    }, labels, /*#__PURE__*/React.createElement(MultiSelect, {\n      options: options,\n      value: selected,\n      onChange: event => setSelected(Object.values(event)),\n      labelledBy: \"Select\",\n      selectedValues: selected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(EditBox, {\n      field: \"description\",\n      type: \"dishes\",\n      id: props.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 45\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 29\n      }\n    }, \"comments\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-gruop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Comments, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(AddComment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 33\n      }\n    }))))));\n  } catch (e) {\n    console.log(\"catch\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    }, e, errMess);\n  }\n}\n\nexport default DishDetail;","map":{"version":3,"sources":["/home/eilon/programing/full-stack/confusion-new/confusion/src/component/Dishdetail.js"],"names":["React","useState","useMemo","useEffect","Card","CardImg","CardText","CardBody","CardTitle","Link","Breadcrumb","BreadcrumbItem","Button","Modal","ModalBody","ModalHeader","Label","Col","Row","Control","LocalForm","Errors","Loading","baseUrl","FadeTransform","Fade","Stagger","EditBox","MultiSelect","Dropzone","putContent","useSelector","useDispatch","required","val","length","maxLength","len","minLength","DishDetail","props","myContent","isLoading","errMess","store","dispatch","render","setRender","selected","setSelected","value","id","indexOf","push","label","labels","options","map","join","console","log","Comments","dishes","comments","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","AddComment","isModalOpen","setIsModalOpen","rating","setRating","setAuthor","setComment","handleSubmit","values","amount","newComment","toISOString","size","event","target","title","text","exitTransform","image","Object","e"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Label, Col, Row } from 'reactstrap'\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport Loading from './Loading';\nimport { baseUrl } from '../shared/externalUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\nimport EditBox from './EditBox';\nimport MultiSelect from \"react-multi-select-component\";\nimport Dropzone from 'react-dropzone';\nimport { putContent } from '../redux/ActionCreators';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => val => !(val) || (val.length <= len)\nconst minLength = (len) => val => !(val) || (val.length >= len)\n\n\n\n\nfunction DishDetail(props) {\n\n    const { myContent, isLoading, errMess } = useSelector(store => store.myContent);\n    const dispatch = useDispatch()\n\n    const [render, setRender] = useState(0);\n\n    const [selected, setSelected] = useState(() => {\n        var value = []\n        if (myContent !== null) {\n            if (myContent[\"dishes\"][props.id][\"label\"].indexOf(\"Hot\") > -1)\n                value.push({ label: \"Hot ðŸŒ¶\", value: \"Hot ðŸŒ¶\" });\n\n            if (myContent[\"dishes\"][props.id][\"label\"].indexOf(\"Vegan\") > -1)\n                value.push({ label: \"Vegan ðŸŒ±\", value: \"Vegan ðŸŒ±\" });\n        }\n        return value;\n    })\n\n    const labels = selected.length == 2 ? <div>Hot ðŸŒ¶ &amp; Vegan ðŸŒ±</div> : null;\n\n    const options = [\n        { label: \"Hot ðŸŒ¶\", value: \"Hot ðŸŒ¶\" },\n        { label: \"Vegan ðŸŒ±\", value: \"Vegan ðŸŒ±\" }\n    ]\n\n    useEffect(() => {\n        if (myContent !== null && selected.map(label => label.label).join() !== myContent[\"dishes\"][props.id][\"label\"]) {\n            console.log(\"selected\", selected)\n            myContent[\"dishes\"][props.id][\"label\"] = selected.map(label => label.label).join();\n            dispatch(putContent(myContent))\n        }\n    }, [selected])\n\n\n    const Comments = () => {\n\n        return (\n            myContent ?\n                myContent.dishes[props.id].comments ?\n                    <Stagger in>{\n                        myContent.dishes[props.id].comments.map((comment) => (\n                            <Fade in>\n                                <li className=\"list-unstyled\" key={comment.id}>\n                                    <p>\n                                        {comment.comment} <br />\n                                --{comment.author},\n                                {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' })\n                                            .format(new Date(Date.parse(comment.date)))}\n                                    </p>\n                                </li>\n                            </Fade>\n                        ))\n                    }</Stagger>\n                    :\n                    <Stagger in><li><p>be the first to comment!</p></li></Stagger>\n                :\n                <Stagger in><li><p>loading comments...</p></li></Stagger>\n        )\n    }\n\n\n    const AddComment = () => {\n\n        const [isModalOpen, setIsModalOpen] = useState(false);\n\n        const [rating, setRating] = useState(5);\n        const [author, setAuthor] = useState(\"\");\n        const [comment, setComment] = useState(\"\");\n\n\n\n        function handleSubmit(values) {\n            setIsModalOpen(!isModalOpen);\n            const amount = myContent[\"dishes\"][props.id][\"comments\"].length;\n            let newComment = { \"author\": values.author, \"comment\": values.comment, \"date\": new Date().toISOString(), \"id\": amount, \"rating\": values.rating }\n            myContent[\"dishes\"][props.id].comments[amount] = newComment;\n            dispatch(putContent(myContent));\n            setRender(render + 1);\n        }\n    \n\n        return (\n            <div>\n                <Button outline onClick={() => setIsModalOpen(!isModalOpen)} className='ml-auto'>\n                    <span className='fa fa-pencil fa-lg'></span> Submit Comment\n            </Button>\n                <Modal outline isOpen={isModalOpen} toggle={() => setIsModalOpen(!isModalOpen)}>\n                    <ModalHeader toggle={() => setIsModalOpen(!isModalOpen)}>Submit Comment</ModalHeader>\n                    <ModalBody>\n\n                        <LocalForm onSubmit={(values) => handleSubmit(values)}>\n\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 12 }}>\n                                    <Control.select model=\".rating\" name=\"rating\"\n                                        value={rating} onChange={(event) => setRating(event.target.value)}>\n                                        <option>5</option>\n                                        <option>4</option>\n                                        <option>3</option>\n                                        <option>2</option>\n                                        <option>1</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"author\" md={{ size: 12 }}>Your Name</Label>\n                                <Col md={{ size: 12 }}>\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Your Name\"\n                                        className=\"form-control\" onChange={(event) => setAuthor(event.target.value)}\n                                        validators={{ required, minLength: minLength(3), maxLength: maxLength(15) }}\n                                        value={author} />\n                                    <Errors className=\"text-danger\" model=\".author\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Requierd ',\n                                            minLength: 'Must be greater than 2 characters ',\n                                            maxLength: 'Must be 15 characters or less '\n                                        }}>\n                                    </Errors>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"comment\" md={{ size: 12 }}>Comment</Label>\n                                <Col md={{ size: 12 }}>\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\n                                        rows=\"6\" className=\"form-control\" value={comment}\n                                        onChange={(event) => setComment(event.target.value)} />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 12 }}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Submit\n                            </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n\n    }\n\n    if (isLoading) {\n        console.log(\"loading\");\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    try {\n\n        console.log(\"try\");\n\n        return (\n            <div>\n                <div className=\"container\">\n\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{myContent.dishes[props.id].title.text}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <EditBox type=\"dishes\" field=\"title\" id={props.id} />\n                        <hr />\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-5 m-1\">\n                            <FadeTransform in transformProps={{ exitTransform: 'scale(0.5) translateY(-50%)' }}>\n                                <Card>\n                                    <CardImg top src={myContent.dishes[props.id].image} alt={myContent.dishes[props.id].title.text} />\n                                    <CardBody>\n                                        <CardText>\n                                            {labels}\n                                            <MultiSelect\n                                                options={options}\n                                                value={selected}\n                                                onChange={(event) => setSelected(Object.values(event))}\n                                                labelledBy={\"Select\"}\n                                                selectedValues={selected}\n                                            />\n                                            <EditBox field=\"description\" type=\"dishes\" id={props.id} />\n                                        </CardText>\n                                    </CardBody>\n                                </Card>\n                            </FadeTransform>\n                        </div>\n\n                        <div className=\"col-12 col-md-5 m-1\">\n                            <h4>comments</h4>\n                            <ul className=\"list-gruop\">\n                                <Comments />\n                            </ul>\n\n                            <div className=\"row\">\n                                <AddComment/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n    catch (e) {\n        console.log(\"catch\");\n        return (<div>\n            {e}\n            {errMess}\n        </div>)\n    }\n}\n\nexport default DishDetail;"]},"metadata":{},"sourceType":"module"}