{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/externalUrl'; ////////////  signup  ////////////\n\nexport const signup = jsonObject => dispatch => {\n  const id = String(jsonObject.id);\n  const newJson = {};\n  newJson[id] = jsonObject;\n  return fetch(baseUrl + '/content.json', {\n    method: \"PATCH\",\n    body: JSON.stringify(newJson),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    console.log(\"signup\");\n\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => {\n    dispatch(addMyContent(response[id])); // use fetch\n  }).then(response => {\n    dispatch(addContent(response));\n    alert('your sign up was successful');\n  }).catch(error => {\n    console.log('submmit content', error.message);\n    alert('Your content could not be submited\\nError: ' + error.message);\n  });\n}; ///////////putContnet///////////\n\nexport const putContent = jsonObject => dispatch => {\n  console.log(\"ActionCreator-putcontent\", jsonObject);\n  addMyContent(jsonObject);\n  if (jsonObject.id === \"0\") return; // user 0 dont need to update the server\n\n  if (jsonObject.id === \"eilon\") {\n    jsonObject.id = \"0\";\n    jsonObject.password = \"0\";\n  }\n\n  return fetch(baseUrl + '/content/' + jsonObject.id + \".json\", {\n    method: \"PATCH\",\n    body: JSON.stringify(jsonObject),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).catch(error => {\n    console.log('submmit content', error.message);\n    alert('Your content could not be submited\\nError: ' + error.message);\n  });\n}; /// fetch myContent////\n\nexport const fetchMyContent = id => dispatch => {\n  console.log(\"fetchMyContent, id:\", id);\n  dispatch(myContentLoading(true));\n  let tempId;\n  if (id === null) tempId = \"0\";else if (id === \"eilon\") tempId = \"0\";else tempId = id;\n  return fetch(baseUrl + '/content/' + tempId + \".json\").then(response => {\n    if (response.ok) {\n      console.log(\"ActionCreator-fetchmyContent, response is OK\\nresponse: \", response);\n      return response;\n    } else {\n      console.log(\"ActionCreator-fetchmyContent, response is NOT OK\\nresponse: \", response);\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    console.log(\"ActionCreator-fetchmyContent, NO response \\error.message: \", error.message);\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(myContent => {\n    if (id == \"eilon\") myContent.id = \"eilon\";\n    console.log(\"myContent.id , id\", myContent.id, id);\n    dispatch(addMyContent(myContent));\n  }).catch(error => dispatch(myContentFailed(error.message)));\n};\nexport const myContentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.MYCONTENT_LOADING\n  };\n};\nexport const myContentFailed = errmess => {\n  return {\n    type: ActionTypes.MYCONTENT_FAILED,\n    payload: errmess\n  };\n};\nexport const addMyContent = myContent => {\n  console.log(\"ActionCreator-addContent, content: \", myContent);\n  return {\n    type: ActionTypes.ADD_MYCONTENT,\n    payload: myContent\n  };\n}; /// fetch content////\n\nexport const fetchContent = () => dispatch => {\n  return fetch(baseUrl + '/content' + \".json\").then(response => {\n    if (response.ok) {\n      console.log(\"ActionCreator-fetchContent, response is OK\\nresponse: \", response);\n      return response;\n    } else {\n      console.log(\"ActionCreator-fetchContent, response is NOT OK\\nresponse: \", response);\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    console.log(\"ActionCreator-fetchContent, NO response \\error.message: \", error.message);\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(content => dispatch(addContent(content))).catch(error => dispatch(contentFailed(error.message)));\n};\nexport const contentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.CONTENT_LOADING\n  };\n};\nexport const contentFailed = errmess => {\n  return {\n    type: ActionTypes.CONTENT_FAILED,\n    payload: errmess\n  };\n};\nexport const addContent = content => {\n  console.log(\"ActionCreator-addContent, content: \", content);\n  return {\n    type: ActionTypes.ADD_CONTENT,\n    payload: content\n  };\n}; ///////////feedback///////////\n\nexport const postFeedback = (firstName, lastName, telNum, email, agree, contactType, message) => dispatch => {\n  const newFeedback = {\n    firstName: firstName,\n    lastName: lastName,\n    telNum: telNum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  }; //previesdly the id and the date where added in comments.js\n\n  newFeedback.date = new Date().toISOString();\n  return fetch(baseUrl + '/feedback' + \".json\", {\n    method: \"POST\",\n    body: JSON.stringify(newFeedback),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    //related to the backend \n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => {\n    dispatch(addFeedback(response));\n    alert('Your feedback was submited successfully');\n  }).catch(error => {\n    console.log('submmit feedback', error.message);\n    alert('Your feedback could not be submited\\nError: ' + error.message);\n  });\n};\nexport const addFeedback = feedback => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: feedback\n});","map":{"version":3,"sources":["/home/eilon/programing/full-stack/confusion-new/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","signup","jsonObject","dispatch","id","String","newJson","fetch","method","body","JSON","stringify","headers","credentials","then","response","console","log","ok","error","Error","status","statusText","json","addMyContent","addContent","alert","catch","message","putContent","password","fetchMyContent","myContentLoading","tempId","errmess","myContent","myContentFailed","type","MYCONTENT_LOADING","MYCONTENT_FAILED","payload","ADD_MYCONTENT","fetchContent","content","contentFailed","contentLoading","CONTENT_LOADING","CONTENT_FAILED","ADD_CONTENT","postFeedback","firstName","lastName","telNum","email","agree","contactType","newFeedback","date","Date","toISOString","addFeedback","feedback","ADD_COMMENT"],"mappings":"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","sourcesContent":["\nimport * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/externalUrl';\n\n\n////////////  signup  ////////////\n\nexport const signup = (jsonObject) => (dispatch) => {\n  const id = String(jsonObject.id);\n  const newJson = {};\n  newJson[id] = jsonObject;\n\n\n  return fetch(baseUrl + '/content.json', {\n    method: \"PATCH\",\n    body: JSON.stringify(newJson),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  })\n    .then(response => {\n      console.log(\"signup\");\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        throw error;\n      })\n    .then(response => response.json())\n    .then(response => {\n      dispatch(addMyContent(response[id])); // use fetch\n    })\n    .then(response => {\n      dispatch(addContent(response));\n      alert('your sign up was successful');\n    })\n    .catch(error => {\n      console.log('submmit content', error.message);\n      alert('Your content could not be submited\\nError: ' + error.message);\n    });\n};\n\n\n\n///////////putContnet///////////\n\nexport const putContent = (jsonObject) => (dispatch) => {\n\n  console.log(\"ActionCreator-putcontent\", jsonObject);\n\n  addMyContent(jsonObject);\n  \n  if (jsonObject.id === \"0\") return; // user 0 dont need to update the server\n  \n  if (jsonObject.id === \"eilon\") {\n    jsonObject.id = \"0\";\n    jsonObject.password = \"0\";\n  }\n\n  return fetch(baseUrl + '/content/' + jsonObject.id + \".json\", {\n    method: \"PATCH\",\n    body: JSON.stringify(jsonObject),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  })\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => { throw error; })\n    .catch(error => {\n      console.log('submmit content', error.message);\n      alert('Your content could not be submited\\nError: ' + error.message);\n    });\n};\n\n\n\n/// fetch myContent////\n\nexport const fetchMyContent = (id) => (dispatch) => {\n\n  console.log(\"fetchMyContent, id:\", id);\n  dispatch(myContentLoading(true));\n  let tempId;\n  if (id === null)  tempId = \"0\";\n  else if (id === \"eilon\") tempId = \"0\";\n  else tempId = id;\n\n  return fetch(baseUrl + '/content/' + tempId + \".json\")\n    .then(response => {\n      if (response.ok) {\n        console.log(\"ActionCreator-fetchmyContent, response is OK\\nresponse: \", response);\n        return response;\n      } else {\n        console.log(\"ActionCreator-fetchmyContent, response is NOT OK\\nresponse: \", response);\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        console.log(\"ActionCreator-fetchmyContent, NO response \\error.message: \", error.message);\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(myContent => {\n      if(id == \"eilon\") myContent.id = \"eilon\";\n      console.log(\"myContent.id , id\", myContent.id , id)\n      dispatch(addMyContent(myContent))})\n    .catch(error => dispatch(myContentFailed(error.message)));\n\n}\n\nexport const myContentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.MYCONTENT_LOADING\n  }\n}\n\nexport const myContentFailed = ((errmess) => {\n  return ({\n    type: ActionTypes.MYCONTENT_FAILED,\n    payload: errmess\n  });\n});\n\nexport const addMyContent = (myContent) => {\n  console.log(\"ActionCreator-addContent, content: \", myContent);\n  return ({\n    type: ActionTypes.ADD_MYCONTENT,\n    payload: myContent\n  });\n}\n\n\n\n/// fetch content////\n\nexport const fetchContent = () => (dispatch) => {\n\n  return fetch(baseUrl + '/content' + \".json\")\n    .then(response => {\n      if (response.ok) {\n        console.log(\"ActionCreator-fetchContent, response is OK\\nresponse: \", response);\n        return response;\n      } else {\n        console.log(\"ActionCreator-fetchContent, response is NOT OK\\nresponse: \", response);\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        console.log(\"ActionCreator-fetchContent, NO response \\error.message: \", error.message);\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(content => dispatch(addContent(content)))\n    .catch(error => dispatch(contentFailed(error.message)));\n\n}\n\nexport const contentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.CONTENT_LOADING\n  }\n}\n\nexport const contentFailed = ((errmess) => {\n  return ({\n    type: ActionTypes.CONTENT_FAILED,\n    payload: errmess\n  });\n});\n\nexport const addContent = (content) => {\n  console.log(\"ActionCreator-addContent, content: \", content);\n  return ({\n    type: ActionTypes.ADD_CONTENT,\n    payload: content\n  });\n}\n\n\n///////////feedback///////////\n\nexport const postFeedback = (firstName, lastName, telNum, email, agree, contactType, message) => (dispatch) => {\n\n  const newFeedback = {\n    firstName: firstName,\n    lastName: lastName,\n    telNum: telNum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  };\n\n  //previesdly the id and the date where added in comments.js\n  newFeedback.date = new Date().toISOString();\n\n  return fetch(baseUrl + '/feedback' + \".json\", {\n    method: \"POST\",\n    body: JSON.stringify(newFeedback),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    //related to the backend \n    credentials: \"same-origin\"\n  })\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        throw error;\n      })\n    .then(response => response.json())\n    .then(response => {\n      dispatch(addFeedback(response));\n      alert('Your feedback was submited successfully');\n    })\n    .catch(error => {\n      console.log('submmit feedback', error.message);\n      alert('Your feedback could not be submited\\nError: ' + error.message);\n    });\n};\n\nexport const addFeedback = (feedback) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: feedback\n});"]},"metadata":{},"sourceType":"module"}