{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/externalUrl';\nimport cookie from 'react-cookies'; ////////////  signup  ////////////\n\nexport const signup = jsonObject => dispatch => {\n  return fetch(\"https://warm-fjord-92793.herokuapp.com\" + '/signup', {\n    method: \"POST\",\n    body: JSON.stringify(jsonObject),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    redirect: 'follow'\n  }).then(res => res.token).then(res => {\n    // the response is a token\n    console.log(res);\n    cookie.save('auth', res, {\n      path: '/'\n    });\n    jsonObject[\"token\"] = res;\n    dispatch(addMyContent(jsonObject));\n  }).catch(error => {\n    console.log('error', error);\n    alert('Your content could not be submited\\nError: ' + error.message);\n  });\n}; ///////////putContnet///////////\n\nexport const putContent = jsonObject => dispatch => {\n  console.log(\"ActionCreator-putcontent\", jsonObject);\n  addMyContent(jsonObject);\n  if (jsonObject.id === \"0\") return; // user 0 dont need to update the server\n\n  if (jsonObject.id === \"eilon\") {\n    jsonObject.id = \"0\";\n    jsonObject.password = \"0\";\n  }\n\n  return fetch(baseUrl + '/content/' + jsonObject.id + \".json\", {\n    method: \"PATCH\",\n    body: JSON.stringify(jsonObject),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).catch(error => {\n    console.log('submmit content', error.message);\n    alert('Your content could not be submited\\nError: ' + error.message);\n  });\n}; /// fetch myContent////\n\nexport const fetchMyContent = id => dispatch => {\n  console.log(\"fetchMyContent, id:\", id);\n  dispatch(myContentLoading(true));\n  let tempId;\n  if (id === null) tempId = \"0\";else if (id === \"eilon\") tempId = \"0\";else tempId = id;\n  return fetch(baseUrl + '/content/' + tempId + \".json\").then(response => {\n    if (response.ok) {\n      console.log(\"ActionCreator-fetchmyContent, response is OK\\nresponse: \", response);\n      return response;\n    } else {\n      console.log(\"ActionCreator-fetchmyContent, response is NOT OK\\nresponse: \", response);\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    console.log(\"ActionCreator-fetchmyContent, NO response \\error.message: \", error.message);\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(myContent => {\n    if (id == \"eilon\") myContent.id = \"eilon\";\n    console.log(\"myContent.id , id\", myContent.id, id);\n    dispatch(addMyContent(myContent));\n  }).catch(error => dispatch(myContentFailed(error.message)));\n};\nexport const myContentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.MYCONTENT_LOADING\n  };\n};\nexport const myContentFailed = errmess => {\n  return {\n    type: ActionTypes.MYCONTENT_FAILED,\n    payload: errmess\n  };\n};\nexport const addMyContent = myContent => {\n  console.log(\"ActionCreator-addMyContent, content: \", myContent);\n  return {\n    type: ActionTypes.ADD_MYCONTENT,\n    payload: myContent\n  };\n}; /// fetch content////\n\nexport const fetchContent = () => dispatch => {\n  return fetch(baseUrl + '/content' + \".json\").then(response => {\n    if (response.ok) {\n      console.log(\"ActionCreator-fetchContent, response is OK\\nresponse: \", response);\n      return response;\n    } else {\n      console.log(\"ActionCreator-fetchContent, response is NOT OK\\nresponse: \", response);\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    console.log(\"ActionCreator-fetchContent, NO response \\error.message: \", error.message);\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(content => dispatch(addContent(content))).catch(error => dispatch(contentFailed(error.message)));\n};\nexport const contentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.CONTENT_LOADING\n  };\n};\nexport const contentFailed = errmess => {\n  return {\n    type: ActionTypes.CONTENT_FAILED,\n    payload: errmess\n  };\n};\nexport const addContent = content => {\n  console.log(\"ActionCreator-addContent, content: \", content);\n  return {\n    type: ActionTypes.ADD_CONTENT,\n    payload: content\n  };\n}; ///////////feedback///////////\n\nexport const postFeedback = (firstName, lastName, telNum, email, agree, contactType, message) => dispatch => {\n  const newFeedback = {\n    firstName: firstName,\n    lastName: lastName,\n    telNum: telNum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  }; //previesdly the id and the date where added in comments.js\n\n  newFeedback.date = new Date().toISOString();\n  return fetch(baseUrl + '/feedback' + \".json\", {\n    method: \"POST\",\n    body: JSON.stringify(newFeedback),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    //related to the backend \n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => {\n    dispatch(addFeedback(response));\n    alert('Your feedback was submited successfully');\n  }).catch(error => {\n    console.log('submmit feedback', error.message);\n    alert('Your feedback could not be submited\\nError: ' + error.message);\n  });\n};\nexport const addFeedback = feedback => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: feedback\n});","map":{"version":3,"sources":["/home/eilon/programing/full-stack/confusion-new/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","cookie","signup","jsonObject","dispatch","fetch","method","body","JSON","stringify","headers","redirect","then","res","token","console","log","save","path","addMyContent","catch","error","alert","message","putContent","id","password","credentials","response","ok","Error","status","statusText","fetchMyContent","myContentLoading","tempId","errmess","json","myContent","myContentFailed","type","MYCONTENT_LOADING","MYCONTENT_FAILED","payload","ADD_MYCONTENT","fetchContent","content","addContent","contentFailed","contentLoading","CONTENT_LOADING","CONTENT_FAILED","ADD_CONTENT","postFeedback","firstName","lastName","telNum","email","agree","contactType","newFeedback","date","Date","toISOString","addFeedback","feedback","ADD_COMMENT"],"mappings":"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","sourcesContent":["\nimport * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/externalUrl';\nimport cookie from 'react-cookies';\n\n////////////  signup  ////////////\n\nexport const signup = (jsonObject) => (dispatch) => {\n\n  return fetch(\"https://warm-fjord-92793.herokuapp.com\" + '/signup', {\n    method: \"POST\",\n    body: JSON.stringify(jsonObject),\n    headers: {\"Content-Type\": \"application/json\"},\n    redirect: 'follow'\n  })\n    .then(res => res.token)\n    .then(res => {  // the response is a token\n      console.log(res);\n      cookie.save('auth', res, { path: '/'});\n      jsonObject[\"token\"] = res;\n      dispatch(addMyContent(jsonObject));\n    })\n    .catch(error => {\n      console.log('error', error)\n      alert('Your content could not be submited\\nError: ' + error.message);\n    });\n};\n\n\n\n///////////putContnet///////////\n\nexport const putContent = (jsonObject) => (dispatch) => {\n\n  console.log(\"ActionCreator-putcontent\", jsonObject);\n\n  addMyContent(jsonObject);\n\n  if (jsonObject.id === \"0\") return; // user 0 dont need to update the server\n\n  if (jsonObject.id === \"eilon\") {\n    jsonObject.id = \"0\";\n    jsonObject.password = \"0\";\n  }\n\n  return fetch(baseUrl + '/content/' + jsonObject.id + \".json\", {\n    method: \"PATCH\",\n    body: JSON.stringify(jsonObject),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  })\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => { throw error; })\n    .catch(error => {\n      console.log('submmit content', error.message);\n      alert('Your content could not be submited\\nError: ' + error.message);\n    });\n};\n\n\n\n/// fetch myContent////\n\nexport const fetchMyContent = (id) => (dispatch) => {\n\n  console.log(\"fetchMyContent, id:\", id);\n  dispatch(myContentLoading(true));\n  let tempId;\n  if (id === null) tempId = \"0\";\n  else if (id === \"eilon\") tempId = \"0\";\n  else tempId = id;\n\n  return fetch(baseUrl + '/content/' + tempId + \".json\")\n    .then(response => {\n      if (response.ok) {\n        console.log(\"ActionCreator-fetchmyContent, response is OK\\nresponse: \", response);\n        return response;\n      } else {\n        console.log(\"ActionCreator-fetchmyContent, response is NOT OK\\nresponse: \", response);\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        console.log(\"ActionCreator-fetchmyContent, NO response \\error.message: \", error.message);\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(myContent => {\n      if (id == \"eilon\") myContent.id = \"eilon\";\n      console.log(\"myContent.id , id\", myContent.id, id)\n      dispatch(addMyContent(myContent))\n    })\n    .catch(error => dispatch(myContentFailed(error.message)));\n\n}\n\nexport const myContentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.MYCONTENT_LOADING\n  }\n}\n\nexport const myContentFailed = ((errmess) => {\n  return ({\n    type: ActionTypes.MYCONTENT_FAILED,\n    payload: errmess\n  });\n});\n\nexport const addMyContent = (myContent) => {\n  console.log(\"ActionCreator-addMyContent, content: \", myContent);\n  return ({\n    type: ActionTypes.ADD_MYCONTENT,\n    payload: myContent\n  });\n}\n\n\n\n/// fetch content////\n\nexport const fetchContent = () => (dispatch) => {\n\n  return fetch(baseUrl + '/content' + \".json\")\n    .then(response => {\n      if (response.ok) {\n        console.log(\"ActionCreator-fetchContent, response is OK\\nresponse: \", response);\n        return response;\n      } else {\n        console.log(\"ActionCreator-fetchContent, response is NOT OK\\nresponse: \", response);\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        console.log(\"ActionCreator-fetchContent, NO response \\error.message: \", error.message);\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(content => dispatch(addContent(content)))\n    .catch(error => dispatch(contentFailed(error.message)));\n\n}\n\nexport const contentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.CONTENT_LOADING\n  }\n}\n\nexport const contentFailed = ((errmess) => {\n  return ({\n    type: ActionTypes.CONTENT_FAILED,\n    payload: errmess\n  });\n});\n\nexport const addContent = (content) => {\n  console.log(\"ActionCreator-addContent, content: \", content);\n  return ({\n    type: ActionTypes.ADD_CONTENT,\n    payload: content\n  });\n}\n\n\n///////////feedback///////////\n\nexport const postFeedback = (firstName, lastName, telNum, email, agree, contactType, message) => (dispatch) => {\n\n  const newFeedback = {\n    firstName: firstName,\n    lastName: lastName,\n    telNum: telNum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  };\n\n  //previesdly the id and the date where added in comments.js\n  newFeedback.date = new Date().toISOString();\n\n  return fetch(baseUrl + '/feedback' + \".json\", {\n    method: \"POST\",\n    body: JSON.stringify(newFeedback),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    //related to the backend \n    credentials: \"same-origin\"\n  })\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        throw error;\n      })\n    .then(response => response.json())\n    .then(response => {\n      dispatch(addFeedback(response));\n      alert('Your feedback was submited successfully');\n    })\n    .catch(error => {\n      console.log('submmit feedback', error.message);\n      alert('Your feedback could not be submited\\nError: ' + error.message);\n    });\n};\n\nexport const addFeedback = (feedback) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: feedback\n});"]},"metadata":{},"sourceType":"module"}