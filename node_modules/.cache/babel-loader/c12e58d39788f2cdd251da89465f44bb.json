{"ast":null,"code":"var _jsxFileName = \"/home/eilon/programing/full-stack/React/confusion2/src/component/DishdetailComponent.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => !val || val.length >= len;\n\nclass DishDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false,\n      name: '',\n      rate: 5,\n      comment: '',\n      touched: {\n        name: false,\n        rate: false,\n        comment: false\n      }\n    }; // necessary for using \"this\" in the callback\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.RenderSubmitComment = this.RenderSubmitComment.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  handleSubmit(values) {\n    console.log(\"current state is: \" + JSON.stringify(values));\n    alert(\"current state is: \" + JSON.stringify(values));\n  }\n\n  render() {\n    const RenderDish = ({\n      dish\n    }) => {\n      if (dish != null) {\n        return /*#__PURE__*/React.createElement(Card, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CardImg, {\n          width: \"100%\",\n          top: true,\n          src: dish.image,\n          alt: dish.name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(CardBody, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(CardTitle, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }\n        }, dish.name), /*#__PURE__*/React.createElement(CardText, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }\n        }, dish.description)));\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }\n        });\n      }\n    };\n\n    const RenderComments = ({\n      comments\n    }) => {\n      if (comments != null) {\n        const comments_text = comments.map(comment => {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            className: \"list-unstyled\",\n            key: comment.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }\n          }, comment.comment, \" \", /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 43\n            }\n          }), \"--\", comment.author, \",\", new Intl.DateTimeFormat('en-US', {\n            year: 'numeric',\n            month: 'short',\n            day: '2-digit'\n          }).format(new Date(Date.parse(comment.date))))); //we use here in a script that translate date to readble date\n        });\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }\n        }, \"comments\"), /*#__PURE__*/React.createElement(\"ul\", {\n          className: \"list-gruop\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }\n        }, comments_text));\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }\n        });\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 41\n      }\n    }, \"Menu\")), /*#__PURE__*/React.createElement(BreadcrumbItem, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, this.props.dish.name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, this.props.dish.name), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, RenderDish(props.dish)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, RenderComments(props.comments), /*#__PURE__*/React.createElement(Button, {\n      onClick: RenderSubmitComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-pencil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 63\n      }\n    }), \" Submit Comment\"))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.isModalOpen,\n      toggle: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, \"Submit Comment\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(LocalForm, {\n      onSubmit: values => this.handleSubmit(values),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Control.select, {\n      model: \".rate\",\n      name: \"rate\",\n      value: this.state.rate,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 37\n      }\n    }, \"5\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 37\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 37\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 37\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 37\n      }\n    }, \"1\")))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    }, \"Your Name\"), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Control.text, {\n      model: \".name\",\n      id: \"name\",\n      name: \"name\",\n      placeholder: \"Your Name\",\n      className: \"form-control\",\n      validators: {\n        required,\n        minLength: minLength(3),\n        maxLength: maxLength(15)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".firstname\",\n      show: \"touched\",\n      messages: {\n        required: 'Requierd ',\n        minLength: 'Must be greater than 2 characters ',\n        maxLength: 'Must be 15 characters or less '\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"Comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    }, \"Comment\"), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Control.textarea, {\n      model: \".Comment\",\n      id: \"Comment\",\n      name: \"Comment\",\n      rows: \"6\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 33\n      }\n    })))))));\n  }\n\n}\n\nexport default DishDetail;","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion2/src/component/DishdetailComponent.js"],"names":["React","Component","Card","CardImg","CardText","CardBody","CardTitle","Link","Breadcrumb","BreadcrumbItem","Button","Modal","ModalBody","ModalHeader","Control","LocalForm","Errors","required","val","length","maxLength","len","minLength","DishDetail","constructor","props","state","isModalOpen","name","rate","comment","touched","handleSubmit","bind","RenderSubmitComment","toggleModal","setState","values","console","log","JSON","stringify","alert","render","RenderDish","dish","image","description","RenderComments","comments","comments_text","map","id","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","handleInputChange"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader } from 'reactstrap'\nimport { Control, LocalForm, Errors} from 'react-redux-form';\n\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => val => !(val) || (val.length <= len)\nconst minLength = (len) => val => !(val) || (val.length >= len)\n\nclass DishDetail extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            isModalOpen: false,\n            name: '',\n            rate: 5,\n            comment: '',\n            touched: {\n                name: false, \n                rate: false, \n                comment: false\n            }\n        }\n        // necessary for using \"this\" in the callback\n        \n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.RenderSubmitComment = this.RenderSubmitComment.bind(this);\n     }\n \n     \n    toggleModal() {\n        this.setState({\n          isModalOpen: !this.state.isModalOpen\n        });\n      }\n\n\n    handleSubmit(values){\n        console.log(\"current state is: \" + JSON.stringify(values));\n        alert(\"current state is: \" + JSON.stringify(values));\n    }\n\n\n    render(){\n\n        const RenderDish = ({dish}) => {\n            if(dish != null){\n                return(\n                    <Card>\n                        <CardImg width=\"100%\" top src={dish.image} alt={dish.name} />\n                        <CardBody>\n                            <CardTitle>{dish.name}</CardTitle>\n                            <CardText>{dish.description}</CardText>\n                        </CardBody>\n                    </Card>\n                );\n            } else{\n                return(\n                    <div></div>\n                );\n            }\n\n        }\n\n        const RenderComments = ({comments}) => {\n            \n            if(comments != null ){\n                const comments_text = comments.map((comment)=>{\n                return (\n                    <li className=\"list-unstyled\" key={comment.id}>\n                    <p>\n                        {comment.comment} <br/>\n                        --{comment.author},\n                        {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'})\n                            .format(new Date(Date.parse(comment.date)))}\n                    </p>\n                    </li>\n                );\n                //we use here in a script that translate date to readble date\n            });\n\n                return(\n                    <div className=\"container\">\n                        <h4>comments</h4>\n                        <ul className=\"list-gruop\">\n                            {comments_text}\n                        </ul>\n                    </div>\n                );\n            } else{\n                return(\n                    <div></div>\n                );\n            }\n        }\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{this.props.dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>{this.props.dish.name}</h3>\n                        <hr />\n                    </div>                \n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-5 m-1\">\n                        {RenderDish(props.dish)}\n                    </div>\n                    <div className=\"col-12 col-md-5 m-1\">\n                        {RenderComments(props.comments)}\n                        <Button onClick={RenderSubmitComment}><span className=\"fa fa-pencil\"/> Submit Comment</Button> \n                        \n                    </div>\n                </div>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                <ModalBody>\n\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                        \n                        <Row className=\"form-group\">\n                            <Col>\n                                <Control.select model=\".rate\" name=\"rate\"\n                                        value={this.state.rate} onChange={this.handleInputChange}>\n                                    <option>5</option>\n                                    <option>4</option>\n                                    <option>3</option>\n                                    <option>2</option>\n                                    <option>1</option>\n                                </Control.select>\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"name\">Your Name</Label>\n                            <Col>\n                                <Control.text model=\".name\" id=\"name\" name=\"name\" placeholder=\"Your Name\" \n                                    className=\"form-control\" \n                                    validators={{required, minLength:minLength(3), maxLength:maxLength(15)}}/>\n                                <Errors className=\"text-danger\" model=\".firstname\"\n                                show=\"touched\" \n                                messages={{\n                                        required: 'Requierd ',\n                                        minLength: 'Must be greater than 2 characters ',\n                                        maxLength: 'Must be 15 characters or less '\n                                }}>\n                                </Errors>\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"Comment\">Comment</Label>\n                            <Col>\n                                <Control.textarea model=\".Comment\" id=\"Comment\" name=\"Comment\"\n                                    rows=\"6\" className=\"form-control\" />\n                            </Col>\n                        </Row>\n                    </LocalForm>\n                </ModalBody>\n            </Modal>\n            </div>\n        );\n    }\n}\n\n    \nexport default DishDetail;"]},"metadata":{},"sourceType":"module"}