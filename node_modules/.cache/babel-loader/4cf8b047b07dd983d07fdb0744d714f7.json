{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/externalUrl';\nimport { object } from 'prop-types'; ////////////  signup  ////////////\n\nexport const signup = jsonObject => dispatch => {\n  const id = String(jsonObject.id);\n  const newJson = {};\n  newJson[id] = jsonObject;\n  return fetch(baseUrl + '/content.json', {\n    method: \"PATCH\",\n    body: JSON.stringify(newJson),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    console.log(\"signup\");\n    alert('Your content was submited successfully0');\n\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => {\n    alert('Your content was submited successfully1');\n    dispatch(addMyContent(response[id])); // use fetch\n  }).then(response => {\n    alert('Your content was submited successfully2');\n    dispatch(addContent(response));\n  }).catch(error => {\n    console.log('submmit content', error.message);\n    alert('Your content could not be submited\\nError: ' + error.message);\n  });\n}; ///////////putContnet///////////\n\nexport const putContent = jsonObject => dispatch => {\n  console.log(\"ActionCreator-putcontent\", jsonObject);\n  return fetch(baseUrl + '/content/' + jsonObject.id + \".json\", {\n    method: \"PATCH\",\n    body: JSON.stringify(jsonObject),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => {\n    dispatch(addMyContent(response));\n  }).catch(error => {\n    console.log('submmit content', error.message);\n    alert('Your content could not be submited\\nError: ' + error.message);\n  });\n}; /// fetch myContent////\n\nexport const fetchMyContent = id => dispatch => {\n  dispatch(myContentLoading(true));\n\n  if (id === null) {\n    id = \"0\";\n  }\n\n  return fetch(baseUrl + '/content/' + id + \".json\").then(response => {\n    if (response.ok) {\n      console.log(\"ActionCreator-fetchmyContent, response is OK\\nresponse: \", response);\n      return response;\n    } else {\n      console.log(\"ActionCreator-fetchmyContent, response is NOT OK\\nresponse: \", response);\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    console.log(\"ActionCreator-fetchmyContent, NO response \\error.message: \", error.message);\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(myContent => dispatch(addMyContent(myContent))).catch(error => dispatch(myContentFailed(error.message)));\n};\nexport const myContentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.MYCONTENT_LOADING\n  };\n};\nexport const myContentFailed = errmess => {\n  return {\n    type: ActionTypes.MYCONTENT_FAILED,\n    payload: errmess\n  };\n};\nexport const addMyContent = myContent => {\n  console.log(\"ActionCreator-addContent, content: \", myContent);\n  return {\n    type: ActionTypes.ADD_MYCONTENT,\n    payload: myContent\n  };\n}; /// fetch content////\n\nexport const fetchContent = () => dispatch => {\n  dispatch(contentLoading(true));\n  return fetch(baseUrl + '/content' + \".json\").then(response => {\n    if (response.ok) {\n      console.log(\"ActionCreator-fetchContent, response is OK\\nresponse: \", response);\n      return response;\n    } else {\n      console.log(\"ActionCreator-fetchContent, response is NOT OK\\nresponse: \", response);\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    console.log(\"ActionCreator-fetchContent, NO response \\error.message: \", error.message);\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(content => dispatch(addContent(content))).catch(error => dispatch(contentFailed(error.message)));\n};\nexport const contentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.CONTENT_LOADING\n  };\n};\nexport const contentFailed = errmess => {\n  return {\n    type: ActionTypes.CONTENT_FAILED,\n    payload: errmess\n  };\n};\nexport const addContent = content => {\n  console.log(\"ActionCreator-addContent, content: \", content);\n  return {\n    type: ActionTypes.ADD_CONTENT,\n    payload: content\n  };\n}; ///////////feedback///////////\n\nexport const postFeedback = (firstName, lastName, telNum, email, agree, contactType, message) => dispatch => {\n  const newFeedback = {\n    firstName: firstName,\n    lastName: lastName,\n    telNum: telNum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  }; //previesdly the id and the date where added in comments.js\n\n  newFeedback.date = new Date().toISOString();\n  return fetch(baseUrl + '/feedback' + \".json\", {\n    method: \"POST\",\n    body: JSON.stringify(newFeedback),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    //related to the backend \n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => {\n    dispatch(addFeedback(response));\n    alert('Your feedback was submited successfully');\n  }).catch(error => {\n    console.log('submmit feedback', error.message);\n    alert('Your feedback could not be submited\\nError: ' + error.message);\n  });\n};\nexport const addFeedback = feedback => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: feedback\n}); ///////////comments////////////\n//since this is a punc, I need to add the dispatch. So, I'll send the function of a function\n\nexport const postComment = (dishId, rating, author, comment) => dispatch => {\n  const newComment = {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment\n  }; //previesdly the id and the date where added in comments.js\n\n  newComment.date = new Date().toISOString();\n  return fetch(baseUrl + '/comments' + \".json\", {\n    method: \"POST\",\n    body: JSON.stringify(newComment),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    //related to the backend \n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => dispatch(addComment(response))).catch(error => {\n    console.log('post comments', error.message);\n    alert('Your comment could not be posted\\nError: ' + error.message);\n  });\n};\nexport const addComment = comment => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment\n}); //////////// LEADERS //////////////\n\nexport const fetchLeaders = () => dispatch => {\n  dispatch(leadersLoading(true));\n  return fetch(baseUrl + '/leaders' + \".json\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(leaders => dispatch(addLeaders(leaders))).catch(error => dispatch(leadersFailed(error.message)));\n};\nexport const leadersLoading = () => ({\n  type: ActionTypes.LEADERS_LOADING\n});\nexport const leadersFailed = errmess => {\n  return {\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n  };\n};\nexport const addLeaders = leaders => {\n  //alert(\"action creator, leader: \"+ JSON.stringify(leaders))\n  return {\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n  };\n};\n/*\nexport const addLeaders = (leaders) => ({\n  type: ActionTypes.ADD_LEADERS,\n  payload: leaders\n});\n*/\n//////////// DISHES //////////////\n\nexport const fetchDishes = () => dispatch => {\n  console.log(\"ActionCreator-fetchDishes\");\n  dispatch(dishesLoading(true));\n  return fetch(baseUrl + '/dishes' + \".json\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(dishes => dispatch(addDishes(dishes))).catch(error => dispatch(dishesFailed(error.message)));\n}; //returning an action\n\nexport const dishesLoading = () => {\n  console.log(\"ActionCreator-dishesLoading\");\n  return {\n    type: ActionTypes.DISHES_LOADING\n  };\n};\nexport const dishesFailed = errmess => {\n  //alert(\"actionCreator.js - dishesFailed: \"+ errmess);\n  return {\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n  };\n};\nexport const addDishes = dishes => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n}); //////////// COMMENTS //////////////\n\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + '/comments' + \".json\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(comments => dispatch(addComments(comments))).catch(error => dispatch(commentsFailed(error.message)));\n};\nexport const commentsFailed = errmess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n}); //////////// PROMOTIONS //////////////\n\nexport const fetchPromos = () => dispatch => {\n  dispatch(promosLoading());\n  return fetch(baseUrl + '/promotions' + \".json\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(promos => dispatch(addPromos(promos))).catch(error => dispatch(promosFailed(error.message)));\n};\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING\n});\nexport const promosFailed = errmess => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess\n});\nexport const addPromos = promos => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","object","signup","jsonObject","dispatch","id","String","newJson","fetch","method","body","JSON","stringify","headers","credentials","then","response","console","log","alert","ok","error","Error","status","statusText","json","addMyContent","addContent","catch","message","putContent","fetchMyContent","myContentLoading","errmess","myContent","myContentFailed","type","MYCONTENT_LOADING","MYCONTENT_FAILED","payload","ADD_MYCONTENT","fetchContent","contentLoading","content","contentFailed","CONTENT_LOADING","CONTENT_FAILED","ADD_CONTENT","postFeedback","firstName","lastName","telNum","email","agree","contactType","newFeedback","date","Date","toISOString","addFeedback","feedback","ADD_COMMENT","postComment","dishId","rating","author","comment","newComment","addComment","fetchLeaders","leadersLoading","leaders","addLeaders","leadersFailed","LEADERS_LOADING","LEADERS_FAILED","ADD_LEADERS","fetchDishes","dishesLoading","dishes","addDishes","dishesFailed","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS"],"mappings":"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","sourcesContent":["\nimport * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/externalUrl';\nimport { object } from 'prop-types';\n\n\n////////////  signup  ////////////\n\nexport const signup = (jsonObject) => (dispatch) => {\n  const id = String(jsonObject.id);\n  const newJson = {};\n  newJson[id]=jsonObject;\n  \n  \n  return fetch(baseUrl + '/content.json', {\n      method: \"PATCH\",\n      body: JSON.stringify(newJson),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"same-origin\"\n  })\n  .then(response => {\n    console.log(\"signup\");\n    alert('Your content was submited successfully0');\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => {\n    alert('Your content was submited successfully1');\n    dispatch(addMyContent(response[id])); // use fetch\n  })\n  .then(response => {\n    alert('Your content was submited successfully2');\n    dispatch(addContent(response));\n  })\n  .catch(error =>  { console.log('submmit content', error.message);\n   alert('Your content could not be submited\\nError: '+error.message); });\n};\n\n\n\n///////////putContnet///////////\n\nexport const putContent = (jsonObject) => (dispatch) => {\n\n\n  console.log(\"ActionCreator-putcontent\", jsonObject);\n\n  return fetch(baseUrl + '/content/'+jsonObject.id+\".json\", {\n      method: \"PATCH\",\n      body: JSON.stringify(jsonObject),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"same-origin\"\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => {dispatch(addMyContent(response));  })\n  .catch(error =>  { console.log('submmit content', error.message);\n   alert('Your content could not be submited\\nError: '+error.message); });\n};\n\n\n\n/// fetch myContent////\n\nexport const fetchMyContent = (id) => (dispatch) => {\n\n  dispatch(myContentLoading(true));\n\n  if(id === null){\n    id = \"0\";\n  }\n  return fetch(baseUrl + '/content/'+id+\".json\")\n  .then(response => {\n      if (response.ok) {\n        console.log(\"ActionCreator-fetchmyContent, response is OK\\nresponse: \", response);        \n        return response;\n      } else {\n        console.log(\"ActionCreator-fetchmyContent, response is NOT OK\\nresponse: \", response);   \n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n      console.log(\"ActionCreator-fetchmyContent, NO response \\error.message: \", error.message); \n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(myContent => dispatch(addMyContent(myContent)))\n  .catch(error => dispatch(myContentFailed(error.message)));\n\n}\n\nexport const myContentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return{\n  type: ActionTypes.MYCONTENT_LOADING\n}}\n\nexport const myContentFailed = ((errmess) => {\n  return({\n  type: ActionTypes.MYCONTENT_FAILED,\n  payload: errmess});\n});\n\nexport const addMyContent = (myContent) => {\n  console.log(\"ActionCreator-addContent, content: \", myContent); \n  return({\n    type: ActionTypes.ADD_MYCONTENT,\n    payload: myContent\n  });\n}\n\n\n\n/// fetch content////\n\nexport const fetchContent = () => (dispatch) => {\n\n  dispatch(contentLoading(true));\n\n  return fetch(baseUrl + '/content'+\".json\")\n  .then(response => {\n      if (response.ok) {\n        console.log(\"ActionCreator-fetchContent, response is OK\\nresponse: \", response);        \n        return response;\n      } else {\n        console.log(\"ActionCreator-fetchContent, response is NOT OK\\nresponse: \", response);   \n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n      console.log(\"ActionCreator-fetchContent, NO response \\error.message: \", error.message); \n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(content => dispatch(addContent(content)))\n  .catch(error => dispatch(contentFailed(error.message)));\n\n}\n\nexport const contentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return{\n  type: ActionTypes.CONTENT_LOADING\n}}\n\nexport const contentFailed = ((errmess) => {\n  return({\n  type: ActionTypes.CONTENT_FAILED,\n  payload: errmess});\n});\n\nexport const addContent = (content) => {\n  console.log(\"ActionCreator-addContent, content: \", content); \n  return({\n    type: ActionTypes.ADD_CONTENT,\n    payload: content\n  });\n}\n\n\n\n\n///////////feedback///////////\n\nexport const postFeedback = ( firstName, lastName, telNum, email, agree, contactType, message) => (dispatch) => {\n\n  const newFeedback = {\n    firstName: firstName,\n    lastName: lastName,\n    telNum: telNum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  };\n  \n //previesdly the id and the date where added in comments.js\n  newFeedback.date = new Date().toISOString();\n  \n  return fetch(baseUrl + '/feedback'+\".json\", {\n      method: \"POST\",\n      body: JSON.stringify(newFeedback),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      //related to the backend \n      credentials: \"same-origin\"\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => {\n    dispatch(addFeedback(response));\n    alert('Your feedback was submited successfully');\n  })\n  .catch(error =>  { console.log('submmit feedback', error.message);\n   alert('Your feedback could not be submited\\nError: '+error.message); });\n};\n\nexport const addFeedback = (feedback) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: feedback\n});\n\n\n\n///////////comments////////////\n\n//since this is a punc, I need to add the dispatch. So, I'll send the function of a function\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n  const newComment = {\n      dishId: dishId,\n      rating: rating,\n      author: author,\n      comment: comment\n  };\n  \n //previesdly the id and the date where added in comments.js\n  newComment.date = new Date().toISOString();\n  \n  return fetch(baseUrl + '/comments'+\".json\", {\n      method: \"POST\",\n      body: JSON.stringify(newComment),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      //related to the backend \n      credentials: \"same-origin\"\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => dispatch(addComment(response)))\n  .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\n};\n\n\nexport const addComment = (comment) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment\n});\n\n\n\n//////////// LEADERS //////////////\n\nexport const fetchLeaders = () => (dispatch) => {\n\n  dispatch(leadersLoading(true));\n\n  return fetch(baseUrl + '/leaders'+\".json\")\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(leaders => dispatch(addLeaders(leaders)))\n  .catch(error => dispatch(leadersFailed(error.message)));\n\n}\n\n\nexport const leadersLoading = () => ({\n  type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = ((errmess) => {\n  return({\n  type: ActionTypes.LEADERS_FAILED,\n  payload: errmess});\n});\n\nexport const addLeaders = (leaders) => {\n  //alert(\"action creator, leader: \"+ JSON.stringify(leaders))\n  return({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n  });\n}\n\n/*\nexport const addLeaders = (leaders) => ({\n  type: ActionTypes.ADD_LEADERS,\n  payload: leaders\n});\n*/\n\n//////////// DISHES //////////////\n\n\nexport const fetchDishes = () => (dispatch) => {\n  console.log(\"ActionCreator-fetchDishes\");\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + '/dishes'+\".json\")\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(dishes => dispatch(addDishes(dishes)))\n    .catch(error => dispatch(dishesFailed(error.message)));\n\n}\n\n\n//returning an action\nexport const dishesLoading = () => {\n  console.log(\"ActionCreator-dishesLoading\");\n    return{type: ActionTypes.DISHES_LOADING}\n}\n\nexport const dishesFailed = ((errmess) => {\n    //alert(\"actionCreator.js - dishesFailed: \"+ errmess);\n    return({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess});\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\n\n//////////// COMMENTS //////////////\n\nexport const fetchComments = () => (dispatch) => {    \n    return fetch(baseUrl + '/comments'+\".json\")\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\n\n//////////// PROMOTIONS //////////////\n\nexport const fetchPromos = () => (dispatch) => {\n    \n    dispatch(promosLoading());\n\n    return fetch(baseUrl + '/promotions'+\".json\")\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)))\n    .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});"]},"metadata":{},"sourceType":"module"}