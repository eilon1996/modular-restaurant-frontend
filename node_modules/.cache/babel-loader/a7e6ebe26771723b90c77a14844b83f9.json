{"ast":null,"code":"var _jsxFileName = \"/home/eilon/programing/full-stack/React/confusion2/src/component/DishdetailComponent.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Nav, NavItem, Button, Modal, ModalBody, ModalHeader, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Reducer } from '../redux/reducer';\n\nconst required = val => val && val.length;\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => val && val.length >= len;\n\nclass CommentForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false,\n      name: '',\n      rate: 5,\n      comment: '',\n      touched: {\n        name: false\n      }\n    }; // necessary for using \"this\" in the callback\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  handleSubmit(values) {\n    console.log(\"current state is: \" + JSON.stringify(values));\n    alert(\"current state is: \" + JSON.stringify(values));\n    this.toggleModal();\n  }\n\n  render() {\n    const RenderDish = dish => {\n      return /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardImg, {\n        width: \"100%\",\n        top: true,\n        src: dish.image,\n        alt: dish.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }, dish.name), /*#__PURE__*/React.createElement(CardText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, dish.description)));\n    };\n\n    const RenderComments = comments => {\n      const comments_text = comments.map(comment => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"list-unstyled\",\n          key: comment.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }\n        }, comment.comment, \" \", /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 39\n          }\n        }), \"--\", comment.author, \",\", new Intl.DateTimeFormat('en-US', {\n          year: 'numeric',\n          month: 'short',\n          day: '2-digit'\n        }).format(new Date(Date.parse(comment.date))))); //we use here in a script that translate date to readble date\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, \"comments\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"list-gruop\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, comments_text)); //we use here in a script that translate date to readble date\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"                 \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 50\n      }\n    }, \"Menu\")), /*#__PURE__*/React.createElement(BreadcrumbItem, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, this.props.dish.name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, this.props.dish.name), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, RenderDish(this.props.dish)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, RenderComments(this.props.comments), /*#__PURE__*/React.createElement(Nav, {\n      className: \"ml-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-pencil fa-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }\n    }), \" Submit Comment\"))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.isModalOpen,\n      toggle: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, \"Submit Comment\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(LocalForm, {\n      onSubmit: values => this.handleSubmit(values),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"rating\",\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }, \"Rating\"), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Control.select, {\n      model: \".rating\",\n      className: \"form-control\",\n      id: \"rating\",\n      name: \"rating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 37\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 37\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 37\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 37\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 37\n      }\n    }, \"5\")))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"author\",\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 33\n      }\n    }, \"Your Name\"), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Control.text, {\n      model: \".author\",\n      className: \"form-control\",\n      id: \"author\",\n      name: \"author\",\n      placeholder: \"Your Name\",\n      validators: {\n        required,\n        minLength: minLength(3),\n        maxLength: maxLength(15)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".yourname\",\n      show: \"touched\",\n      messages: {\n        required: 'required ',\n        minLength: 'must be greater than 2 caracters',\n        maxLength: 'must be 15 caracters or less'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"feedback\",\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 33\n      }\n    }, \"Comment\"), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Control.textarea, {\n      model: \".message\",\n      className: \"form-control\",\n      id: \"message\",\n      name: \"message\",\n      rows: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: {\n        size: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 33\n      }\n    }, \"Submit\")))))))));\n  }\n\n}\n\nexport default CommentForm;","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion2/src/component/DishdetailComponent.js"],"names":["React","Component","Card","CardImg","CardText","CardBody","CardTitle","Link","Breadcrumb","BreadcrumbItem","Nav","NavItem","Button","Modal","ModalBody","ModalHeader","Label","Col","Row","Control","LocalForm","Errors","Reducer","required","val","length","maxLength","len","minLength","CommentForm","constructor","props","state","isModalOpen","name","rate","comment","touched","handleSubmit","bind","toggleModal","setState","values","console","log","JSON","stringify","alert","render","RenderDish","dish","image","description","RenderComments","comments","comments_text","map","id","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","size"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem,Nav, NavItem, Button, Modal, ModalBody, ModalHeader, Label, Col , Row } from 'reactstrap'\nimport { Control, LocalForm, Errors} from 'react-redux-form';\nimport { Reducer } from '../redux/reducer';\n\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\n\nclass CommentForm extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            isModalOpen: false,\n            name: '',\n            rate: 5,\n            comment: '',\n            touched: {\n                name: false\n            }\n        }\n        // necessary for using \"this\" in the callback\n        \n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n     }\n\n    toggleModal() {\n        this.setState({ isModalOpen: !this.state.isModalOpen });\n    }\n\n\n    handleSubmit(values){\n        console.log(\"current state is: \" + JSON.stringify(values));\n        alert(\"current state is: \" + JSON.stringify(values));\n        this.toggleModal();\n    }\n\n\n  render() {\n\n\n    const RenderDish = (dish) => {\n        return(\n            <Card>\n                <CardImg width=\"100%\" top src={dish.image} alt={dish.name} />\n                <CardBody>\n                    <CardTitle>{dish.name}</CardTitle>\n                    <CardText>{dish.description}</CardText>\n                </CardBody>\n            </Card>\n        );\n    }\n\n    const RenderComments = (comments) => {\n        const comments_text = comments.map((comment)=>{\n            return (\n                <li className=\"list-unstyled\" key={comment.id}>\n                <p>\n                    {comment.comment} <br/>\n                    --{comment.author},\n                    {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'})\n                        .format(new Date(Date.parse(comment.date)))}\n                </p>\n                </li>\n            );\n            //we use here in a script that translate date to readble date\n        });\n\n        return(\n            <div className=\"container\">\n                <h4>comments</h4>\n                <ul className=\"list-gruop\">\n                    {comments_text}\n                </ul>\n            </div>\n        )\n        //we use here in a script that translate date to readble date\n    }\n      \n    return (    \n            <div className='container'>\n            <div className=\"row\">\n              <Breadcrumb>\n                <BreadcrumbItem>                 <Link to='/menu'>Menu</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem active>{this.props.dish.name}</BreadcrumbItem>\n              </Breadcrumb>\n              <div className='col-12'>\n                <h3>{this.props.dish.name}</h3>\n                <hr />\n              </div>             \n            </div>\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-5 m-1\">\n                        {RenderDish(this.props.dish)}\n                    </div>\n                    <div className=\"col-12 col-md-5 m-1\">\n                        {RenderComments(this.props.comments)}\n                        <Nav className='ml-auto'>\n                            <NavItem>\n                                <Button onClick={this.toggleModal}>\n                                <span className='fa fa-pencil fa-lg'></span> Submit Comment\n                                </Button>\n                            </NavItem>\n                        </Nav>\n                        <Modal\n                        isOpen={this.state.isModalOpen}\n                        toggle={this.toggleModal}\n                        >\n                        <ModalHeader toggle={this.toggleModal}>\n                            Submit Comment\n                        </ModalHeader>\n                        <ModalBody>\n                            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className='form-group'>\n                                <Label htmlFor='rating' md={12}>\n                                Rating\n                                </Label>\n                                <Col md={12}>\n                                <Control.select\n                                    model='.rating'\n                                    className='form-control'\n                                    id='rating'\n                                    name='rating'\n                                >\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                </Control.select>\n                                </Col>\n                            </Row>\n\n                            <Row className='form-group'>\n                                <Label htmlFor='author' md={12}>\n                                Your Name\n                                </Label>\n                                <Col md={12}>\n                                <Control.text\n                                    model='.author'\n                                    className='form-control'\n                                    id='author'\n                                    name='author'\n                                    placeholder='Your Name'\n                                    validators={{\n                                    required,\n                                    minLength: minLength(3),\n                                    maxLength: maxLength(15),\n                                    }}\n                                />\n                                <Errors\n                                    className='text-danger'\n                                    model='.yourname'\n                                    show='touched'\n                                    messages={{\n                                    required: 'required ',\n                                    minLength: 'must be greater than 2 caracters',\n                                    maxLength: 'must be 15 caracters or less',\n                                    }}\n                                />\n                                </Col>\n                            </Row>\n\n                            <Row className='form-group'>\n                                <Label htmlFor='feedback' md={12}>\n                                Comment\n                                </Label>\n                                <Col md={12}>\n                                <Control.textarea\n                                    model='.message'\n                                    className='form-control'\n                                    id='message'\n                                    name='message'\n                                    rows='12'\n                                />\n                                </Col>\n                            </Row>\n\n                            <Row className='form-group'>\n                                <Col md={{ size: 12 }}>\n                                <Button type='submit' color='primary'>\n                                    Submit\n                                </Button>\n                                </Col>\n                            </Row>\n                            </LocalForm>\n                        </ModalBody>\n                        </Modal>\n                </div>\n              </div>\n            </div>\n          );\n        \n      }\n      \n}\n\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}