{"ast":null,"code":"var _jsxFileName = \"/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/src/component/DishdetailComponent.js\";\nimport React, { useState } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport Loading from './LoadingComponent';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\nimport EditBox from './EditBoxComponent';\n\nfunction DishDetail(props) {\n  /*\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [rating, setRating] = useState(5);\n  const [author, setAuthor] = useState(\"\");\n  const [userComment, setUserComment] = useState(\"\");\n  */\n  const [isModalOpen, setIsModalOpen] = useState();\n  const [rating, setRating] = useState();\n  const [author, setAuthor] = useState();\n  const [userComment, setUserComment] = useState();\n\n  if (props.isLoading) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 18\n      }\n    });\n  }\n\n  if (isModalOpen == null) {\n    setIsModalOpen(false);\n    setRating(5);\n    setAuthor(\"\");\n    setUserComment(\"\");\n  }\n\n  const required = val => val && val.length;\n\n  const maxLength = len => val => !val || val.length <= len;\n\n  const minLength = len => val => !val || val.length >= len;\n\n  function handleSubmit(values) {\n    setIsModalOpen(!isModalOpen);\n    props.postComment(props.dishId, rating, author, userComment);\n    alert(\"current state is: \" + JSON.stringify(values));\n  }\n\n  const comments_text = props.comments.map(comment => {\n    return /*#__PURE__*/React.createElement(Fade, {\n      in: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list-unstyled\",\n      key: comment.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, comment.comment, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 43\n      }\n    }), \"--\", comment.author, \",\", new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: '2-digit'\n    }).format(new Date(Date.parse(comment.date)))))); //we use here in a script that translate date to readble date\n  });\n\n  try {\n    //    const dish = props.myContent.dishes[props.dishId]\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 37\n      }\n    }, \"Menu\")), /*#__PURE__*/React.createElement(BreadcrumbItem, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, props.myContent.dishes[props.dishId].title.text)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(EditBox, {\n      type: \"dishes\",\n      field: \"title\",\n      id: props.dishId,\n      putContent: props.putContent,\n      myContent: props.myContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FadeTransform, {\n      in: true,\n      transformProps: {\n        exitTransform: 'scale(0.5) translateY(-50%)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardImg, {\n      top: true,\n      src: props.myContent.dishes[props.dishId].image,\n      alt: props.myContent.dishes[props.dishId].title.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(EditBox, {\n      field: \"description\",\n      type: \"dishes\",\n      id: props.dishId,\n      putContent: props.putContent,\n      myContent: props.myContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, \"comments\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-gruop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Stagger, {\n      in: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }, comments_text)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      outline: true,\n      onClick: setIsModalOpen(!isModalOpen),\n      className: \"ml-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-pencil fa-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }), \" Submit Comment\")), /*#__PURE__*/React.createElement(Modal, {\n      outline: true,\n      isOpen: isModalOpen,\n      toggle: setIsModalOpen(!isModalOpen),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: setIsModalOpen(!isModalOpen),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, \"Submit Comment\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(LocalForm, {\n      onSubmit: values => handleSubmit(values),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: {\n        size: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Control.select, {\n      model: \".rating\",\n      name: \"rating\",\n      value: rating,\n      onChange: event => setRating(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 45\n      }\n    }, \"5\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 45\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 45\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 45\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 45\n      }\n    }, \"1\")))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"author\",\n      md: {\n        size: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 37\n      }\n    }, \"Your Name\"), /*#__PURE__*/React.createElement(Col, {\n      md: {\n        size: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Control.text, {\n      model: \".author\",\n      id: \"author\",\n      name: \"author\",\n      placeholder: \"Your Name\",\n      className: \"form-control\",\n      onChange: event => setAuthor(event.target.value),\n      validators: {\n        required,\n        minLength: minLength(3),\n        maxLength: maxLength(15)\n      },\n      value: author,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".author\",\n      show: \"touched\",\n      messages: {\n        required: 'Requierd ',\n        minLength: 'Must be greater than 2 characters ',\n        maxLength: 'Must be 15 characters or less '\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"userComment\",\n      md: {\n        size: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 37\n      }\n    }, \"Comment\"), /*#__PURE__*/React.createElement(Col, {\n      md: {\n        size: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Control.textarea, {\n      model: \".userComment\",\n      id: \"userComment\",\n      name: \"userComment\",\n      rows: \"6\",\n      className: \"form-control\",\n      value: userComment,\n      onChange: event => setUserComment(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: {\n        size: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 41\n      }\n    }, \"Submit\")))))))));\n  } catch (e) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, props.errMess, e));\n  }\n}\n\nexport default DishDetail;","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/src/component/DishdetailComponent.js"],"names":["React","useState","Card","CardImg","CardText","CardBody","CardTitle","Link","Breadcrumb","BreadcrumbItem","Button","Modal","ModalBody","ModalHeader","Label","Col","Row","Control","LocalForm","Errors","Loading","FadeTransform","Fade","Stagger","EditBox","DishDetail","props","isModalOpen","setIsModalOpen","rating","setRating","author","setAuthor","userComment","setUserComment","isLoading","required","val","length","maxLength","len","minLength","handleSubmit","values","postComment","dishId","alert","JSON","stringify","comments_text","comments","map","comment","id","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","myContent","dishes","title","text","putContent","exitTransform","image","size","event","target","value","e","errMess"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Label, Col , Row } from 'reactstrap'\nimport { Control, LocalForm, Errors} from 'react-redux-form';\nimport Loading from './LoadingComponent';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\nimport EditBox from './EditBoxComponent';\n\n\n\n\nfunction DishDetail(props){\n\n    /*\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [rating, setRating] = useState(5);\n    const [author, setAuthor] = useState(\"\");\n    const [userComment, setUserComment] = useState(\"\");\n    */\n    const [isModalOpen, setIsModalOpen] = useState();\n    const [rating, setRating] = useState();\n    const [author, setAuthor] = useState();\n    const [userComment, setUserComment] = useState();\n\n    if (props.isLoading){\n        return ( <Loading/> );\n    }\n    if(isModalOpen == null){\n        setIsModalOpen(false);\n        setRating(5);\n        setAuthor(\"\");\n        setUserComment(\"\")\n    }\n\n    const required = (val) => val && val.length;\n    const maxLength = (len) => val => !(val) || (val.length <= len)\n    const minLength = (len) => val => !(val) || (val.length >= len)\n\n    function handleSubmit(values){\n        setIsModalOpen(! isModalOpen);\n        props.postComment(props.dishId, rating, author, userComment);\n        alert(\"current state is: \" + JSON.stringify(values));\n    }\n\n    const comments_text = props.comments.map((comment)=>{\n        return (\n            <Fade in>\n                <li className=\"list-unstyled\" key={comment.id}>\n                    <p>\n                        {comment.comment} <br/>\n                        --{comment.author},\n                        {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'})\n                            .format(new Date(Date.parse(comment.date)))}\n                    </p>\n                </li>\n            </Fade>\n        );\n        //we use here in a script that translate date to readble date\n    });\n\n   \n    try{\n\n    //    const dish = props.myContent.dishes[props.dishId]\n        return(\n            <div className=\"container\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>{props.myContent.dishes[props.dishId].title.text}</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                        <EditBox type=\"dishes\" field=\"title\" id={props.dishId} putContent ={props.putContent} myContent={props.myContent}/>\n                    <hr />\n                </div>       \n                <div className=\"row\">\n                    <div className=\"col-12 col-md-5 m-1\">        \n                    <FadeTransform in transformProps={{ exitTransform: 'scale(0.5) translateY(-50%)' }}>\n                    <Card>\n                        <CardImg top src={props.myContent.dishes[props.dishId].image} alt={props.myContent.dishes[props.dishId].title.text} />\n                        <CardBody>\n                            <CardText> \n                                \n                                <EditBox field=\"description\" type=\"dishes\" id={props.dishId} putContent ={props.putContent} myContent={props.myContent}/>\n                            </CardText>\n                        </CardBody>\n                    </Card>\n                    </FadeTransform>\n                    </div>\n                    <div className=\"col-12 col-md-5 m-1\">\n                        <h4>comments</h4>\n                        <ul className=\"list-gruop\">\n                            <Stagger in>\n                                {comments_text}\n                            </Stagger>\n                        </ul>\n                        {/*comment*/}\n                    <div className=\"row\">\n                        <Button outline onClick={setIsModalOpen(! isModalOpen)} className='ml-auto'>\n                            <span className='fa fa-pencil fa-lg'></span> Submit Comment\n                        </Button>\n                    </div>\n                    <Modal outline isOpen={isModalOpen} toggle={setIsModalOpen(! isModalOpen)}>\n                        <ModalHeader toggle={setIsModalOpen(! isModalOpen)}>Submit Comment</ModalHeader>\n                        <ModalBody>\n\n                            <LocalForm onSubmit={(values) => handleSubmit(values)}>\n                                \n                                <Row className=\"form-group\">\n                                    <Col md={{ size: 12 }}>\n                                        <Control.select model=\".rating\" name=\"rating\"\n                                            value={rating} onChange={(event) => setRating(event.target.value)}>\n                                            <option>5</option>\n                                            <option>4</option>\n                                            <option>3</option>\n                                            <option>2</option>\n                                            <option>1</option>\n                                        </Control.select>\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"author\" md={{ size: 12 }}>Your Name</Label>\n                                    <Col md={{ size: 12 }}>\n                                        <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Your Name\" \n                                            className=\"form-control\" onChange={(event) => setAuthor(event.target.value)}\n                                            validators={{required, minLength:minLength(3), maxLength:maxLength(15)}}\n                                            value={author}/>\n                                        <Errors className=\"text-danger\" model=\".author\"\n                                        show=\"touched\" \n                                        messages={{\n                                                required: 'Requierd ',\n                                                minLength: 'Must be greater than 2 characters ',\n                                                maxLength: 'Must be 15 characters or less '\n                                        }}>\n                                        </Errors>\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"userComment\" md={{ size: 12 }}>Comment</Label>\n                                    <Col md={{ size: 12 }}> \n                                        <Control.textarea model=\".userComment\" id=\"userComment\" name=\"userComment\"\n                                            rows=\"6\" className=\"form-control\"  value={userComment}\n                                            onChange={(event) => setUserComment(event.target.value)}/>\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Col md={{ size: 12 }}>\n                                        <Button type=\"submit\" color=\"primary\">\n                                            Submit\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </LocalForm>\n                        </ModalBody>\n                    </Modal>\n                    </div>\n                </div>         \n            </div>\n        );\n\n    }\n    catch (e){\n\n        return (\n            <div>\n                <h4>{props.errMess}{e}</h4>\n            </div>\n        );\n    }\n}\n\n    \nexport default DishDetail;"]},"metadata":{},"sourceType":"module"}