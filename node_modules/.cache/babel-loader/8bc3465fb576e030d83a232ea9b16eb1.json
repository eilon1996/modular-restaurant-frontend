{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/externalUrl';\nimport cookie from 'react-cookies'; ////////////  signup  ////////////\n\nexport const signup = userDetails => dispatch => {\n  const id = String(userDetails.id);\n  var jsonObject = {};\n  jsonObject[id] = userDetails;\n  var row = JSON.stringify(jsonObject); //row = {id:\"1\", pass:\"123\"};\n\n  console.log(\"jsonObject\", row); //return fetch(\"https://warm-fjord-92793.herokuapp.com\" + '/signup', {\n\n  return fetch('/signup', {\n    method: \"POST\",\n    body: row,\n    //headers: {\"Content-Type\": \"application/json\"},\n    headers: {\n      \"Content-Type\": \"html/text\"\n    }\n  }).then(res => res.json()).then(res => {\n    // the response is a token\n    const token = res.token; //delete previouse coookie?\n\n    cookie.remove(\"auth\");\n    cookie.save(\"auth\", token, {\n      path: '/'\n    });\n    jsonObject[\"token\"] = token;\n    dispatch(addMyContent(jsonObject));\n  }).catch(error => {\n    console.log('error', error);\n    alert('Your content could not be submited\\nError: ' + error.message);\n  });\n}; ///////////putContnet///////////\n\nexport const putContent = jsonObject => dispatch => {\n  console.log(\"ActionCreator-putcontent\", jsonObject);\n  addMyContent(jsonObject);\n  if (jsonObject.id === \"0\") return; // user 0 dont need to update the server\n\n  if (jsonObject.id === \"eilon\") {\n    jsonObject.id = \"0\";\n    jsonObject.password = \"0\";\n  }\n\n  return fetch(baseUrl + '/content/' + jsonObject.id + \".json\", {\n    method: \"PATCH\",\n    body: JSON.stringify(jsonObject),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).catch(error => {\n    console.log('submmit content', error.message);\n    alert('Your content could not be submited\\nError: ' + error.message);\n  });\n}; /// fetch myContent////\n\nexport const fetchMyContent = id => dispatch => {\n  console.log(\"fetchMyContent, id:\", id);\n  dispatch(myContentLoading(true));\n  let tempId;\n  if (id === null) tempId = \"0\";else if (id === \"eilon\") tempId = \"0\";else tempId = id;\n  return fetch(baseUrl + '/content/' + tempId + \".json\").then(response => {\n    if (response.ok) {\n      console.log(\"ActionCreator-fetchmyContent, response is OK\\nresponse: \", response);\n      return response;\n    } else {\n      console.log(\"ActionCreator-fetchmyContent, response is NOT OK\\nresponse: \", response);\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    console.log(\"ActionCreator-fetchmyContent, NO response \\error.message: \", error.message);\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(myContent => {\n    if (id == \"eilon\") myContent.id = \"eilon\";\n    console.log(\"myContent.id , id\", myContent.id, id);\n    dispatch(addMyContent(myContent));\n  }).catch(error => dispatch(myContentFailed(error.message)));\n};\nexport const myContentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.MYCONTENT_LOADING\n  };\n};\nexport const myContentFailed = errmess => {\n  return {\n    type: ActionTypes.MYCONTENT_FAILED,\n    payload: errmess\n  };\n};\nexport const addMyContent = myContent => {\n  console.log(\"ActionCreator-addMyContent, content: \", myContent);\n  return {\n    type: ActionTypes.ADD_MYCONTENT,\n    payload: myContent\n  };\n}; /// fetch content////\n\nexport const fetchContent = () => dispatch => {\n  return fetch(baseUrl + '/content' + \".json\").then(response => {\n    if (response.ok) {\n      console.log(\"ActionCreator-fetchContent, response is OK\\nresponse: \", response);\n      return response;\n    } else {\n      console.log(\"ActionCreator-fetchContent, response is NOT OK\\nresponse: \", response);\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    console.log(\"ActionCreator-fetchContent, NO response \\error.message: \", error.message);\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(content => dispatch(addContent(content))).catch(error => dispatch(contentFailed(error.message)));\n};\nexport const contentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.CONTENT_LOADING\n  };\n};\nexport const contentFailed = errmess => {\n  return {\n    type: ActionTypes.CONTENT_FAILED,\n    payload: errmess\n  };\n};\nexport const addContent = content => {\n  console.log(\"ActionCreator-addContent, content: \", content);\n  return {\n    type: ActionTypes.ADD_CONTENT,\n    payload: content\n  };\n}; ///////////feedback///////////\n\nexport const postFeedback = (firstName, lastName, telNum, email, agree, contactType, message) => dispatch => {\n  const newFeedback = {\n    firstName: firstName,\n    lastName: lastName,\n    telNum: telNum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  }; //previesdly the id and the date where added in comments.js\n\n  newFeedback.date = new Date().toISOString();\n  return fetch(baseUrl + '/feedback' + \".json\", {\n    method: \"POST\",\n    body: JSON.stringify(newFeedback),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    //related to the backend \n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => {\n    dispatch(addFeedback(response));\n    alert('Your feedback was submited successfully');\n  }).catch(error => {\n    console.log('submmit feedback', error.message);\n    alert('Your feedback could not be submited\\nError: ' + error.message);\n  });\n};\nexport const addFeedback = feedback => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: feedback\n});","map":{"version":3,"sources":["/home/eilon/programing/full-stack/confusion-new/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","cookie","signup","userDetails","dispatch","id","String","jsonObject","row","JSON","stringify","console","log","fetch","method","body","headers","then","res","json","token","remove","save","path","addMyContent","catch","error","alert","message","putContent","password","credentials","response","ok","Error","status","statusText","fetchMyContent","myContentLoading","tempId","errmess","myContent","myContentFailed","type","MYCONTENT_LOADING","MYCONTENT_FAILED","payload","ADD_MYCONTENT","fetchContent","content","addContent","contentFailed","contentLoading","CONTENT_LOADING","CONTENT_FAILED","ADD_CONTENT","postFeedback","firstName","lastName","telNum","email","agree","contactType","newFeedback","date","Date","toISOString","addFeedback","feedback","ADD_COMMENT"],"mappings":"AACA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,OAAOC,MAAP,MAAmB,eAAnB,C,CAEA;;AAEA,OAAO,MAAMC,MAAM,GAAIC,WAAD,IAAkBC,QAAD,IAAc;AACnD,QAAMC,EAAE,GAAGC,MAAM,CAACH,WAAW,CAACE,EAAb,CAAjB;AACA,MAAIE,UAAU,GAAG,EAAjB;AACAA,EAAAA,UAAU,CAACF,EAAD,CAAV,GAAiBF,WAAjB;AAEA,MAAIK,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAeH,UAAf,CAAV,CALmD,CAMnD;;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,GAA1B,EARmD,CASnD;;AACA,SAAOK,KAAK,CAAC,SAAD,EAAY;AACtBC,IAAAA,MAAM,EAAE,MADc;AAEtBC,IAAAA,IAAI,EAAEP,GAFgB;AAGtB;AACAQ,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB;AAJa,GAAZ,CAAL,CAMJC,IANI,CAMCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANR,EAOJF,IAPI,CAOCC,GAAG,IAAI;AAAG;AACd,UAAME,KAAK,GAAGF,GAAG,CAACE,KAAlB,CADW,CAEX;;AACAnB,IAAAA,MAAM,CAACoB,MAAP,CAAc,MAAd;AACApB,IAAAA,MAAM,CAACqB,IAAP,CAAY,MAAZ,EAAoBF,KAApB,EAA2B;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAA3B;AACAhB,IAAAA,UAAU,CAAC,OAAD,CAAV,GAAsBa,KAAtB;AACAhB,IAAAA,QAAQ,CAACoB,YAAY,CAACjB,UAAD,CAAb,CAAR;AACD,GAdI,EAeJkB,KAfI,CAeEC,KAAK,IAAI;AACdf,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBc,KAArB;AACAC,IAAAA,KAAK,CAAC,gDAAgDD,KAAK,CAACE,OAAvD,CAAL;AACD,GAlBI,CAAP;AAmBD,CA7BM,C,CAiCP;;AAEA,OAAO,MAAMC,UAAU,GAAItB,UAAD,IAAiBH,QAAD,IAAc;AAEtDO,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCL,UAAxC;AAEAiB,EAAAA,YAAY,CAACjB,UAAD,CAAZ;AAEA,MAAIA,UAAU,CAACF,EAAX,KAAkB,GAAtB,EAA2B,OAN2B,CAMnB;;AAEnC,MAAIE,UAAU,CAACF,EAAX,KAAkB,OAAtB,EAA+B;AAC7BE,IAAAA,UAAU,CAACF,EAAX,GAAgB,GAAhB;AACAE,IAAAA,UAAU,CAACuB,QAAX,GAAsB,GAAtB;AACD;;AAED,SAAOjB,KAAK,CAACb,OAAO,GAAG,WAAV,GAAwBO,UAAU,CAACF,EAAnC,GAAwC,OAAzC,EAAkD;AAC5DS,IAAAA,MAAM,EAAE,OADoD;AAE5DC,IAAAA,IAAI,EAAEN,IAAI,CAACC,SAAL,CAAeH,UAAf,CAFsD;AAG5DS,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAHmD;AAM5De,IAAAA,WAAW,EAAE;AAN+C,GAAlD,CAAL,CAQJd,IARI,CAQCe,QAAQ,IAAI;AAChB,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,aAAOD,QAAP;AACD,KAFD,MAEO;AACL,UAAIN,KAAK,GAAG,IAAIQ,KAAJ,CAAU,WAAWF,QAAQ,CAACG,MAApB,GAA6B,IAA7B,GAAoCH,QAAQ,CAACI,UAAvD,CAAZ;AACAV,MAAAA,KAAK,CAACM,QAAN,GAAiBA,QAAjB;AACA,YAAMN,KAAN;AACD;AACF,GAhBI,EAiBHA,KAAK,IAAI;AAAE,UAAMA,KAAN;AAAc,GAjBtB,EAkBJD,KAlBI,CAkBEC,KAAK,IAAI;AACdf,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+Bc,KAAK,CAACE,OAArC;AACAD,IAAAA,KAAK,CAAC,gDAAgDD,KAAK,CAACE,OAAvD,CAAL;AACD,GArBI,CAAP;AAsBD,CAnCM,C,CAuCP;;AAEA,OAAO,MAAMS,cAAc,GAAIhC,EAAD,IAASD,QAAD,IAAc;AAElDO,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCP,EAAnC;AACAD,EAAAA,QAAQ,CAACkC,gBAAgB,CAAC,IAAD,CAAjB,CAAR;AACA,MAAIC,MAAJ;AACA,MAAIlC,EAAE,KAAK,IAAX,EAAiBkC,MAAM,GAAG,GAAT,CAAjB,KACK,IAAIlC,EAAE,KAAK,OAAX,EAAoBkC,MAAM,GAAG,GAAT,CAApB,KACAA,MAAM,GAAGlC,EAAT;AAEL,SAAOQ,KAAK,CAACb,OAAO,GAAG,WAAV,GAAwBuC,MAAxB,GAAiC,OAAlC,CAAL,CACJtB,IADI,CACCe,QAAQ,IAAI;AAChB,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACftB,MAAAA,OAAO,CAACC,GAAR,CAAY,0DAAZ,EAAwEoB,QAAxE;AACA,aAAOA,QAAP;AACD,KAHD,MAGO;AACLrB,MAAAA,OAAO,CAACC,GAAR,CAAY,8DAAZ,EAA4EoB,QAA5E;AACA,UAAIN,KAAK,GAAG,IAAIQ,KAAJ,CAAU,WAAWF,QAAQ,CAACG,MAApB,GAA6B,IAA7B,GAAoCH,QAAQ,CAACI,UAAvD,CAAZ;AACAV,MAAAA,KAAK,CAACM,QAAN,GAAiBA,QAAjB;AACA,YAAMN,KAAN;AACD;AACF,GAXI,EAYHA,KAAK,IAAI;AACPf,IAAAA,OAAO,CAACC,GAAR,CAAY,4DAAZ,EAA0Ec,KAAK,CAACE,OAAhF;AACA,QAAIY,OAAO,GAAG,IAAIN,KAAJ,CAAUR,KAAK,CAACE,OAAhB,CAAd;AACA,UAAMY,OAAN;AACD,GAhBE,EAiBJvB,IAjBI,CAiBCe,QAAQ,IAAIA,QAAQ,CAACb,IAAT,EAjBb,EAkBJF,IAlBI,CAkBCwB,SAAS,IAAI;AACjB,QAAIpC,EAAE,IAAI,OAAV,EAAmBoC,SAAS,CAACpC,EAAV,GAAe,OAAf;AACnBM,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC6B,SAAS,CAACpC,EAA3C,EAA+CA,EAA/C;AACAD,IAAAA,QAAQ,CAACoB,YAAY,CAACiB,SAAD,CAAb,CAAR;AACD,GAtBI,EAuBJhB,KAvBI,CAuBEC,KAAK,IAAItB,QAAQ,CAACsC,eAAe,CAAChB,KAAK,CAACE,OAAP,CAAhB,CAvBnB,CAAP;AAyBD,CAlCM;AAoCP,OAAO,MAAMU,gBAAgB,GAAG,MAAM;AACpC3B,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,SAAO;AACL+B,IAAAA,IAAI,EAAE5C,WAAW,CAAC6C;AADb,GAAP;AAGD,CALM;AAOP,OAAO,MAAMF,eAAe,GAAKF,OAAD,IAAa;AAC3C,SAAQ;AACNG,IAAAA,IAAI,EAAE5C,WAAW,CAAC8C,gBADZ;AAENC,IAAAA,OAAO,EAAEN;AAFH,GAAR;AAID,CALM;AAOP,OAAO,MAAMhB,YAAY,GAAIiB,SAAD,IAAe;AACzC9B,EAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqD6B,SAArD;AACA,SAAQ;AACNE,IAAAA,IAAI,EAAE5C,WAAW,CAACgD,aADZ;AAEND,IAAAA,OAAO,EAAEL;AAFH,GAAR;AAID,CANM,C,CAUP;;AAEA,OAAO,MAAMO,YAAY,GAAG,MAAO5C,QAAD,IAAc;AAE9C,SAAOS,KAAK,CAACb,OAAO,GAAG,UAAV,GAAuB,OAAxB,CAAL,CACJiB,IADI,CACCe,QAAQ,IAAI;AAChB,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACftB,MAAAA,OAAO,CAACC,GAAR,CAAY,wDAAZ,EAAsEoB,QAAtE;AACA,aAAOA,QAAP;AACD,KAHD,MAGO;AACLrB,MAAAA,OAAO,CAACC,GAAR,CAAY,4DAAZ,EAA0EoB,QAA1E;AACA,UAAIN,KAAK,GAAG,IAAIQ,KAAJ,CAAU,WAAWF,QAAQ,CAACG,MAApB,GAA6B,IAA7B,GAAoCH,QAAQ,CAACI,UAAvD,CAAZ;AACAV,MAAAA,KAAK,CAACM,QAAN,GAAiBA,QAAjB;AACA,YAAMN,KAAN;AACD;AACF,GAXI,EAYHA,KAAK,IAAI;AACPf,IAAAA,OAAO,CAACC,GAAR,CAAY,0DAAZ,EAAwEc,KAAK,CAACE,OAA9E;AACA,QAAIY,OAAO,GAAG,IAAIN,KAAJ,CAAUR,KAAK,CAACE,OAAhB,CAAd;AACA,UAAMY,OAAN;AACD,GAhBE,EAiBJvB,IAjBI,CAiBCe,QAAQ,IAAIA,QAAQ,CAACb,IAAT,EAjBb,EAkBJF,IAlBI,CAkBCgC,OAAO,IAAI7C,QAAQ,CAAC8C,UAAU,CAACD,OAAD,CAAX,CAlBpB,EAmBJxB,KAnBI,CAmBEC,KAAK,IAAItB,QAAQ,CAAC+C,aAAa,CAACzB,KAAK,CAACE,OAAP,CAAd,CAnBnB,CAAP;AAqBD,CAvBM;AAyBP,OAAO,MAAMwB,cAAc,GAAG,MAAM;AAClCzC,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,SAAO;AACL+B,IAAAA,IAAI,EAAE5C,WAAW,CAACsD;AADb,GAAP;AAGD,CALM;AAOP,OAAO,MAAMF,aAAa,GAAKX,OAAD,IAAa;AACzC,SAAQ;AACNG,IAAAA,IAAI,EAAE5C,WAAW,CAACuD,cADZ;AAENR,IAAAA,OAAO,EAAEN;AAFH,GAAR;AAID,CALM;AAOP,OAAO,MAAMU,UAAU,GAAID,OAAD,IAAa;AACrCtC,EAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDqC,OAAnD;AACA,SAAQ;AACNN,IAAAA,IAAI,EAAE5C,WAAW,CAACwD,WADZ;AAENT,IAAAA,OAAO,EAAEG;AAFH,GAAR;AAID,CANM,C,CASP;;AAEA,OAAO,MAAMO,YAAY,GAAG,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,MAAtB,EAA8BC,KAA9B,EAAqCC,KAArC,EAA4CC,WAA5C,EAAyDlC,OAAzD,KAAsExB,QAAD,IAAc;AAE7G,QAAM2D,WAAW,GAAG;AAClBN,IAAAA,SAAS,EAAEA,SADO;AAElBC,IAAAA,QAAQ,EAAEA,QAFQ;AAGlBC,IAAAA,MAAM,EAAEA,MAHU;AAIlBC,IAAAA,KAAK,EAAEA,KAJW;AAKlBC,IAAAA,KAAK,EAAEA,KALW;AAMlBC,IAAAA,WAAW,EAAEA,WANK;AAOlBlC,IAAAA,OAAO,EAAEA;AAPS,GAApB,CAF6G,CAY7G;;AACAmC,EAAAA,WAAW,CAACC,IAAZ,GAAmB,IAAIC,IAAJ,GAAWC,WAAX,EAAnB;AAEA,SAAOrD,KAAK,CAACb,OAAO,GAAG,WAAV,GAAwB,OAAzB,EAAkC;AAC5Cc,IAAAA,MAAM,EAAE,MADoC;AAE5CC,IAAAA,IAAI,EAAEN,IAAI,CAACC,SAAL,CAAeqD,WAAf,CAFsC;AAG5C/C,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAHmC;AAM5C;AACAe,IAAAA,WAAW,EAAE;AAP+B,GAAlC,CAAL,CASJd,IATI,CASCe,QAAQ,IAAI;AAChB,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,aAAOD,QAAP;AACD,KAFD,MAEO;AACL,UAAIN,KAAK,GAAG,IAAIQ,KAAJ,CAAU,WAAWF,QAAQ,CAACG,MAApB,GAA6B,IAA7B,GAAoCH,QAAQ,CAACI,UAAvD,CAAZ;AACAV,MAAAA,KAAK,CAACM,QAAN,GAAiBA,QAAjB;AACA,YAAMN,KAAN;AACD;AACF,GAjBI,EAkBHA,KAAK,IAAI;AACP,UAAMA,KAAN;AACD,GApBE,EAqBJT,IArBI,CAqBCe,QAAQ,IAAIA,QAAQ,CAACb,IAAT,EArBb,EAsBJF,IAtBI,CAsBCe,QAAQ,IAAI;AAChB5B,IAAAA,QAAQ,CAAC+D,WAAW,CAACnC,QAAD,CAAZ,CAAR;AACAL,IAAAA,KAAK,CAAC,yCAAD,CAAL;AACD,GAzBI,EA0BJF,KA1BI,CA0BEC,KAAK,IAAI;AACdf,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCc,KAAK,CAACE,OAAtC;AACAD,IAAAA,KAAK,CAAC,iDAAiDD,KAAK,CAACE,OAAxD,CAAL;AACD,GA7BI,CAAP;AA8BD,CA7CM;AA+CP,OAAO,MAAMuC,WAAW,GAAIC,QAAD,KAAe;AACxCzB,EAAAA,IAAI,EAAE5C,WAAW,CAACsE,WADsB;AAExCvB,EAAAA,OAAO,EAAEsB;AAF+B,CAAf,CAApB","sourcesContent":["\nimport * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/externalUrl';\nimport cookie from 'react-cookies';\n\n////////////  signup  ////////////\n\nexport const signup = (userDetails) => (dispatch) => {\n  const id = String(userDetails.id);\n  var jsonObject = {};\n  jsonObject[id] = userDetails;\n\n  var row = JSON.stringify(jsonObject);\n  //row = {id:\"1\", pass:\"123\"};\n  \n  console.log(\"jsonObject\", row);\n  //return fetch(\"https://warm-fjord-92793.herokuapp.com\" + '/signup', {\n  return fetch('/signup', {\n    method: \"POST\",\n    body: row,\n    //headers: {\"Content-Type\": \"application/json\"},\n    headers: {\"Content-Type\": \"html/text\"},\n  })\n    .then(res => res.json())\n    .then(res => {  // the response is a token\n      const token = res.token;\n      //delete previouse coookie?\n      cookie.remove(\"auth\")\n      cookie.save(\"auth\", token, { path: '/'});\n      jsonObject[\"token\"] = token;\n      dispatch(addMyContent(jsonObject));\n    })\n    .catch(error => {\n      console.log('error', error)\n      alert('Your content could not be submited\\nError: ' + error.message);\n    });\n};\n\n\n\n///////////putContnet///////////\n\nexport const putContent = (jsonObject) => (dispatch) => {\n\n  console.log(\"ActionCreator-putcontent\", jsonObject);\n\n  addMyContent(jsonObject);\n\n  if (jsonObject.id === \"0\") return; // user 0 dont need to update the server\n\n  if (jsonObject.id === \"eilon\") {\n    jsonObject.id = \"0\";\n    jsonObject.password = \"0\";\n  }\n\n  return fetch(baseUrl + '/content/' + jsonObject.id + \".json\", {\n    method: \"PATCH\",\n    body: JSON.stringify(jsonObject),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  })\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => { throw error; })\n    .catch(error => {\n      console.log('submmit content', error.message);\n      alert('Your content could not be submited\\nError: ' + error.message);\n    });\n};\n\n\n\n/// fetch myContent////\n\nexport const fetchMyContent = (id) => (dispatch) => {\n\n  console.log(\"fetchMyContent, id:\", id);\n  dispatch(myContentLoading(true));\n  let tempId;\n  if (id === null) tempId = \"0\";\n  else if (id === \"eilon\") tempId = \"0\";\n  else tempId = id;\n\n  return fetch(baseUrl + '/content/' + tempId + \".json\")\n    .then(response => {\n      if (response.ok) {\n        console.log(\"ActionCreator-fetchmyContent, response is OK\\nresponse: \", response);\n        return response;\n      } else {\n        console.log(\"ActionCreator-fetchmyContent, response is NOT OK\\nresponse: \", response);\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        console.log(\"ActionCreator-fetchmyContent, NO response \\error.message: \", error.message);\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(myContent => {\n      if (id == \"eilon\") myContent.id = \"eilon\";\n      console.log(\"myContent.id , id\", myContent.id, id)\n      dispatch(addMyContent(myContent))\n    })\n    .catch(error => dispatch(myContentFailed(error.message)));\n\n}\n\nexport const myContentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.MYCONTENT_LOADING\n  }\n}\n\nexport const myContentFailed = ((errmess) => {\n  return ({\n    type: ActionTypes.MYCONTENT_FAILED,\n    payload: errmess\n  });\n});\n\nexport const addMyContent = (myContent) => {\n  console.log(\"ActionCreator-addMyContent, content: \", myContent);\n  return ({\n    type: ActionTypes.ADD_MYCONTENT,\n    payload: myContent\n  });\n}\n\n\n\n/// fetch content////\n\nexport const fetchContent = () => (dispatch) => {\n\n  return fetch(baseUrl + '/content' + \".json\")\n    .then(response => {\n      if (response.ok) {\n        console.log(\"ActionCreator-fetchContent, response is OK\\nresponse: \", response);\n        return response;\n      } else {\n        console.log(\"ActionCreator-fetchContent, response is NOT OK\\nresponse: \", response);\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        console.log(\"ActionCreator-fetchContent, NO response \\error.message: \", error.message);\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(content => dispatch(addContent(content)))\n    .catch(error => dispatch(contentFailed(error.message)));\n\n}\n\nexport const contentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.CONTENT_LOADING\n  }\n}\n\nexport const contentFailed = ((errmess) => {\n  return ({\n    type: ActionTypes.CONTENT_FAILED,\n    payload: errmess\n  });\n});\n\nexport const addContent = (content) => {\n  console.log(\"ActionCreator-addContent, content: \", content);\n  return ({\n    type: ActionTypes.ADD_CONTENT,\n    payload: content\n  });\n}\n\n\n///////////feedback///////////\n\nexport const postFeedback = (firstName, lastName, telNum, email, agree, contactType, message) => (dispatch) => {\n\n  const newFeedback = {\n    firstName: firstName,\n    lastName: lastName,\n    telNum: telNum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  };\n\n  //previesdly the id and the date where added in comments.js\n  newFeedback.date = new Date().toISOString();\n\n  return fetch(baseUrl + '/feedback' + \".json\", {\n    method: \"POST\",\n    body: JSON.stringify(newFeedback),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    //related to the backend \n    credentials: \"same-origin\"\n  })\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        throw error;\n      })\n    .then(response => response.json())\n    .then(response => {\n      dispatch(addFeedback(response));\n      alert('Your feedback was submited successfully');\n    })\n    .catch(error => {\n      console.log('submmit feedback', error.message);\n      alert('Your feedback could not be submited\\nError: ' + error.message);\n    });\n};\n\nexport const addFeedback = (feedback) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: feedback\n});"]},"metadata":{},"sourceType":"module"}