{"ast":null,"code":"var _jsxFileName = \"/home/eilon/programing/full-stack/confusion-new/confusion/src/component/UploadS3.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport 'react-dropzone-uploader/dist/styles.css';\nimport '../uploadS3.css';\nimport Dropzone from 'react-dropzone-uploader';\n\nconst UploadS3 = props => {\n  const [progress, setprogress] = useState(\"p0\"); // specify upload params and url for your files\n  // responsible for the progress bar\n  //const getUploadParams = ({ meta }) => { return { url: 'https://httpbin.org/post' } }\n  // called every time a file's `status` changes\n\n  const handleChangeStatus = ({\n    meta,\n    file\n  }, status) => {\n    console.log(\"uploader\", status, meta, file); // turn in to progress bar\n\n    if (status === \"done\") {\n      var data = new FormData();\n      var ending = file.name.split('.'); //const imgName = \"users/\"+props.type+\"/\"+props.myId+\"-\"+props.itemId+\".\"+ending[ending.length-1];\n\n      const imgName = \"users/dishes/test1.png\";\n      console.log(\"imgName, file\", imgName, file);\n      data.append('image', file, imgName);\n      var config = {\n        method: 'POST',\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Credentials\": true,\n        dirName: 'users/dishes',\n\n        /* optional, not working */\n        crossorigin: true,\n        //url: \"http://localhost:5001/upload\",\n        url: \"https://warm-fjord-92793.herokuapp.com/upload\",\n        //url: process.env.BACKEND_PORT+\"/upload\",\n        data: data\n      };\n      axios(config).then(function (response) {\n        alert(\"axios res\");\n        console.log(JSON.stringify(\"axios response\", JSON.stringify(response)));\n        props.setImgUrl(response.data);\n      }).catch(function (error) {\n        alert(\"axios error\");\n        console.log(\"error\", error);\n      });\n    }\n  };\n\n  return progress !== \"showImg\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone //getUploadParams={getUploadParams} // responsible for the progress bar\n  , {\n    onChangeStatus: handleChangeStatus,\n    accept: \"image/*\",\n    maxFiles: 1,\n    inputContent: (files, extra) => extra.reject ? 'Only Image file is allowed' : 'Drop Image Here',\n    styles: {\n      dropzoneReject: {\n        borderColor: '#F19373',\n        backgroundColor: '#F1BDAB'\n      },\n      inputLabel: (files, extra) => extra.reject ? {\n        color: '#A02800'\n      } : {}\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    id: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }))) : /*#__PURE__*/React.createElement(\"img\", {\n    src: \"src\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  });\n}; // to add submit button to the dropzone add in <Dropzone>   onSubmit={handleSubmit}\n\n\nexport default UploadS3;","map":{"version":3,"sources":["/home/eilon/programing/full-stack/confusion-new/confusion/src/component/UploadS3.js"],"names":["React","useState","axios","Dropzone","UploadS3","props","progress","setprogress","handleChangeStatus","meta","file","status","console","log","data","FormData","ending","name","split","imgName","append","config","method","dirName","crossorigin","url","then","response","alert","JSON","stringify","setImgUrl","catch","error","files","extra","reject","dropzoneReject","borderColor","backgroundColor","inputLabel","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport 'react-dropzone-uploader/dist/styles.css'\nimport '../uploadS3.css';\n\nimport Dropzone from 'react-dropzone-uploader'\n\n\n\nconst UploadS3 = (props) => {\n\n    const [progress, setprogress] = useState(\"p0\");\n\n\n    // specify upload params and url for your files\n    // responsible for the progress bar\n    //const getUploadParams = ({ meta }) => { return { url: 'https://httpbin.org/post' } }\n\n    // called every time a file's `status` changes\n    const handleChangeStatus = ({ meta, file }, status) => {\n        console.log(\"uploader\",status, meta, file) // turn in to progress bar\n        if (status === \"done\") {\n            var data = new FormData();\n            var ending = file.name.split('.');\n            //const imgName = \"users/\"+props.type+\"/\"+props.myId+\"-\"+props.itemId+\".\"+ending[ending.length-1];\n            const imgName = \"users/dishes/test1.png\";\n            console.log(\"imgName, file\", imgName, file)\n            data.append('image', file, imgName);\n\n            var config = {\n                method: 'POST',\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Access-Control-Allow-Credentials\": true,\n                dirName: 'users/dishes', /* optional, not working */\n                crossorigin: true,\n                //url: \"http://localhost:5001/upload\",\n                url: \"https://warm-fjord-92793.herokuapp.com/upload\",\n                //url: process.env.BACKEND_PORT+\"/upload\",\n                data: data\n            };\n\n            axios(config)\n                .then(function (response) {\n                    alert(\"axios res\");\n                    console.log(JSON.stringify(\"axios response\", JSON.stringify(response)));\n                    props.setImgUrl(response.data);\n                })\n                .catch(function (error) {\n                    alert(\"axios error\");\n                    console.log(\"error\", error);\n                });\n        }\n    }\n\n\n\n    return (\n        progress !== \"showImg\" ?\n            <div>\n                < Dropzone\n                    //getUploadParams={getUploadParams} // responsible for the progress bar\n                    onChangeStatus={handleChangeStatus}\n                    accept=\"image/*\"\n                    maxFiles={1}\n                    inputContent={(files, extra) => (extra.reject ? 'Only Image file is allowed' : 'Drop Image Here')}\n                    styles={{\n                        dropzoneReject: { borderColor: '#F19373', backgroundColor: '#F1BDAB' },\n                        inputLabel: (files, extra) => (extra.reject ? { color: '#A02800' } : {}),\n                    }}\n                />\n                <div className=\"wrapper\">\n                    <div className=\"progress\" id={progress}></div>\n                </div>\n            </div>\n            :\n            <img src=\"src\" />\n    )\n}\n\n// to add submit button to the dropzone add in <Dropzone>   onSubmit={handleSubmit}\n\n\nexport default UploadS3;"]},"metadata":{},"sourceType":"module"}