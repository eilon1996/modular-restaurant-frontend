{"ast":null,"code":"var _jsxFileName = \"/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/src/component/HeaderComponent.js\";\nimport React, { Component, useState } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap'; // nav link auto maticly impliment the active component and a tag\n\nimport { NavLink } from 'react-router-dom';\nimport EditBox from './EditBoxComponent';\nimport { Tabs, Tab } from \"react-bootstrap\";\n\nconst Header = props => {\n  const [isNavOpen, setIsNavOpen] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalTab, setModalTab] = useState(\"login\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [repassword, setRepassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [user, setUser] = useState(0); // setup\n\n  console.log(\"HeaderComponent: render, content\", props.content);\n  var content = null;\n  var title = \"\";\n\n  if (props.content !== null) {\n    console.log(\"HeaderComponent, if, content\", props.content[0]);\n    content = props.content[0];\n    title = props.content[0].title;\n  }\n\n  function handleLogin(event) {\n    setError(\"\");\n    const userIndex = props.content.findIndex(user => user.id === username);\n\n    if (userIndex > 0) {\n      if (props.content[userIndex].password === password) {\n        setUser(userIndex);\n      } else {\n        //wrong password\n        setError(\"wrong password or user name\");\n      }\n    } else {\n      //create new user?\n      setError(\"user name not found\\nyou can quickly creat new account in the sign up\");\n    }\n\n    if (error === \"\") {\n      const fields = [username.value, password.value, props.content.title, props.content.titleFontSize, props.content.description, props.content.descriptionFontSize];\n      props.putContent(fields);\n      setIsModalOpen(!isModalOpen);\n    }\n\n    event.preventDefault();\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    dark: true,\n    expand: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(NavbarToggler, {\n    onClick: () => setIsNavOpen(!isNavOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(NavbarBrand, {\n    className: \"mr-auto\",\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"assets/images/logo.png\",\n    height: \"30\",\n    width: \"41\",\n    alt: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Collapse, {\n    isOpen: isNavOpen,\n    navbar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    navbar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"nav-link ml-md-5 offset-2 offset-md-0\",\n    to: \"/home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa fa-home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 37\n    }\n  }), \" Home\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"nav-link offset-2 offset-md-0\",\n    to: \"/aboutus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa fa-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 37\n    }\n  }), \" About Us\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"nav-link offset-2 offset-md-0\",\n    to: \"/menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa fa-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 37\n    }\n  }), \" Menu\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"nav-link offset-2 offset-md-0\",\n    to: \"/contactus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa fa-address-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 37\n    }\n  }), \" Contact US\"))), /*#__PURE__*/React.createElement(Nav, {\n    className: \"ml-auto\",\n    navbar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    onClick: () => setIsModalOpen(!isModalOpen),\n    className: \"nav-link offset-2 offset-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa fa-sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 136\n    }\n  }), \" Login\")))))), /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row row-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-sm-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(EditBox, {\n    field_name: \"title\",\n    putContent: props.putContent,\n    content: content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(EditBox, {\n    field_name: \"description\",\n    putContent: props.putContent,\n    content: content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isModalOpen,\n    toggle: () => setIsModalOpen(!isModalOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    id: \"controlled-tab-example\",\n    activeKey: modalTab,\n    onSelect: k => setModalTab(k),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    eventKey: \"login\",\n    title: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 37\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"username\",\n    name: \"username\",\n    innerRef: input => setUsername(input),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 37\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    innerRef: input => setPassword(input),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    check: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    check: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"checkbox\",\n    name: \"remember\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 41\n    }\n  }), \"Remember me\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    value: \"submit\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 33\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 33\n    }\n  }, error))), /*#__PURE__*/React.createElement(Tab, {\n    eventKey: \"signUp\",\n    title: \"sign up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }, \"aaaa\"))))));\n  /*\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n              <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n              <ModalBody>\r\n              <Form onSubmit={this.handleLogin}>\r\n                      <FormGroup>\r\n                          <Label htmlFor=\"username\">Username</Label>\r\n                          <Input type=\"text\" id=\"username\" name=\"username\"\r\n                              innerRef={(input) => this.username = input} />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                          <Label htmlFor=\"password\">Password</Label>\r\n                          <Input type=\"password\" id=\"password\" name=\"password\"\r\n                              innerRef={(input) => this.password = input}  />\r\n                      </FormGroup>\r\n                      <FormGroup check>\r\n                          <Label check>\r\n                              <Input type=\"checkbox\" name=\"remember\"\r\n                              innerRef={(input) => this.remember = input}  />\r\n                              Remember me\r\n                          </Label>\r\n                      </FormGroup>\r\n                      <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                  </Form>\r\n              </ModalBody>\r\n          </Modal>\r\n  */\n};\n\nexport default Header;","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/src/component/HeaderComponent.js"],"names":["React","Component","useState","Navbar","NavbarBrand","Nav","NavbarToggler","Collapse","NavItem","Jumbotron","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Input","Label","NavLink","EditBox","Tabs","Tab","Header","props","isNavOpen","setIsNavOpen","isModalOpen","setIsModalOpen","modalTab","setModalTab","username","setUsername","password","setPassword","repassword","setRepassword","error","setError","user","setUser","console","log","content","title","handleLogin","event","userIndex","findIndex","id","fields","value","titleFontSize","description","descriptionFontSize","putContent","preventDefault","k","input"],"mappings":"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","sourcesContent":["import React, {Component, useState } from 'react';\r\nimport {Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n     Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label} from 'reactstrap'\r\n// nav link auto maticly impliment the active component and a tag\r\nimport {NavLink} from 'react-router-dom';\r\nimport EditBox from './EditBoxComponent';\r\nimport {Tabs, Tab} from \"react-bootstrap\" ;\r\n\r\nconst Header = (props) => {\r\n\r\n    const [isNavOpen, setIsNavOpen] = useState(false);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [modalTab, setModalTab] = useState(\"login\");\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [repassword, setRepassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const [user, setUser] = useState(0);\r\n\r\n    \r\n\r\n\r\n    // setup\r\n    console.log(\"HeaderComponent: render, content\", props.content)\r\n    var content = null;\r\n    var title = \"\"\r\n\r\n    if(props.content !== null){\r\n        console.log(\"HeaderComponent, if, content\", props.content[0])\r\n        content = props.content[0]\r\n        title = props.content[0].title\r\n    }\r\n\r\n\r\n    function handleLogin(event){\r\n        setError(\"\");\r\n        const userIndex = props.content.findIndex((user) => user.id === username);\r\n        if(userIndex > 0){\r\n            if(props.content[userIndex].password === password){\r\n                setUser(userIndex)\r\n            }\r\n            else{\r\n                //wrong password\r\n                setError(\"wrong password or user name\");\r\n            }\r\n        }\r\n        else{\r\n            //create new user?\r\n            setError(\"user name not found\\nyou can quickly creat new account in the sign up\");\r\n        }\r\n\r\n        if(error === \"\"){\r\n            const fields = [username.value, password.value, props.content.title, props.content.titleFontSize, \r\n                            props.content.description , props.content.descriptionFontSize];\r\n\r\n            \r\n            props.putContent(fields);\r\n            setIsModalOpen(!isModalOpen);\r\n        }\r\n\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    \r\n  \r\n    return(\r\n        <React.Fragment>\r\n            <Navbar dark expand=\"md\">\r\n                <div className=\"container\">\r\n                    <NavbarToggler onClick={() => setIsNavOpen(!isNavOpen)}/>\r\n                    <NavbarBrand className='mr-auto' href=\"/\">\r\n                        <img src='assets/images/logo.png' height=\"30\" width=\"41\"\r\n                            alt={title}/>\r\n                    </NavbarBrand>\r\n                    <Collapse isOpen={isNavOpen} navbar>\r\n                        <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link ml-md-5 offset-2 offset-md-0\" to=\"/home\">\r\n                                    <span className=\"fa fa-home\"></span> Home\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link offset-2 offset-md-0\" to=\"/aboutus\">\r\n                                    <span className=\"fa fa-info\"></span> About Us\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link offset-2 offset-md-0\" to=\"/menu\">\r\n                                    <span className=\"fa fa-list\"></span> Menu\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link offset-2 offset-md-0\" to=\"/contactus\">\r\n                                    <span className=\"fa fa-address-card\"></span> Contact US\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem >\r\n                                <Button outline onClick={() => setIsModalOpen(!isModalOpen)} className=\"nav-link offset-2 offset-md-0\"><span className=\"fa fa-sign-in\"></span> Login</Button>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                </div>\r\n            </Navbar>\r\n            <Jumbotron>\r\n                <div className=\"container\">\r\n                    <div className='row row-header'>\r\n                        <div className='col-12 col-sm-6'>\r\n                            <EditBox field_name=\"title\" putContent ={ props.putContent} content={content}/>\r\n                            <EditBox field_name=\"description\" putContent ={ props.putContent} content={content}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Jumbotron>\r\n            <Modal isOpen={isModalOpen} toggle={() => setIsModalOpen(!isModalOpen)}>\r\n                <ModalBody>\r\n\r\n                    <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={modalTab}\r\n                    onSelect={(k) => setModalTab(k)}\r\n                    >\r\n                        <Tab eventKey=\"login\" title=\"login\">\r\n                            <Form onSubmit={handleLogin}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"username\">Username</Label>\r\n                                    <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                        innerRef={(input) => setUsername(input)} />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"password\">Password</Label>\r\n                                    <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                        innerRef={(input) => setPassword(input)}  />\r\n                                </FormGroup>\r\n                                <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"checkbox\" name=\"remember\"/>\r\n                                        Remember me\r\n                                    </Label>\r\n                                </FormGroup>\r\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                                <strong>{error}</strong>\r\n                            </Form>\r\n\r\n                        </Tab>\r\n\r\n                        <Tab eventKey=\"signUp\" title=\"sign up\">\r\n                            <Form onSubmit={handleLogin}>\r\n                                aaaa\r\n                                </Form>\r\n                        </Tab>\r\n                    </Tabs>\r\n                </ModalBody>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n\r\n        /*\r\n\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n        */\r\n    \r\n\r\n}\r\n\r\nexport default Header"]},"metadata":{},"sourceType":"module"}