{"ast":null,"code":"var _jsxFileName = \"/home/eilon/programing/full-stack/React/confusion/confusion-origin/confusion/src/component/EditBoxComponent.js\";\nimport { Link } from 'react-router-dom';\nimport React, { useState, useEffect, Component } from 'react';\nimport { Form, Input, Button, Label } from 'reactstrap';\nimport { Control, Errors } from 'react-redux-form';\n\nconst EditBox = props => {\n  const [text, setValue] = useState(currentText);\n\n  if (props.content === null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 16\n      }\n    });\n  }\n\n  var placeHolder = \"\";\n  var currentText = \"\";\n  var type = \"text\";\n  console.log(\"EditBox: props.content\", props.content, \" props.feild_name: \", props.field_name);\n\n  switch (props.field_name) {\n    case \"title\":\n      currentText = props.content.title;\n      placeHolder = \"my restrunt name\";\n      break;\n\n    case \"description\":\n      currentText = props.content.description;\n      placeHolder = \"my restrunt name\";\n      type = \"textarea\";\n  } //handleChange is emplemented in the form itself\n\n\n  function handleSubmit(event) {\n    // alert(title);\n    props.putContent(text, props.field_name);\n    event.preventDefault();\n  }\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: event => handleSubmit(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, props.field_name, /*#__PURE__*/React.createElement(Input, {\n    type: type,\n    value: text,\n    onChange: event => setValue(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"submit\")));\n};\n\nexport default EditBox;\n/*\nimport React, {Component} from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Label, Col , Row } from 'reactstrap'\nimport { Control, Form, Errors, Input} from 'react-redux-form';\n\nclass EditBox extends Component{\n\n    constructor(props){\n        super (props)\n\n        this.state = {\n            edit: false,\n            text:this.props.text\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values){\n        console.log(\"handleSubmit\", values)\n        this.props.putText(this.state.text, this.props.id, this.props.username);\n\n        this.setState({\n            edit: !this.state.edit\n        });\n    }\n\n\n    onClick(){\n\n        console.log(\"onClick\", this.state.edit)\n        this.setState({\n            edit: !this.state.edit\n        });\n    }\n\n    handleInputChange(event){\n            // This will update specific key in your form object inside the local state\n        this.setState({\n            form: Object.assign({}, this.state.form, {\n            [event.target.text]: event.target.value,\n        }),\n        });\n    }\n\n\n    render(){\n\n        \n\n        if(this.state.edit){\n\n            return( \n                <div>\n            <Form model=\"text\" onSubmit={(values) => this.handleSubmit(values)}>\n                <Control.textarea model=\".text\" id={this.props.id} name=\"text\" style = {{fontSize:\"35px\"}}\n                    rows={this.props.rows_num} \n                    className=\"form-control\"  \n                    onChange={event => this.handleInputChange(event)}\n                    defaultValue={this.props.text}/>\n\n                <Button type=\"submit\">save</Button>\n            </Form>\n\n            \n                </div>\n            );        \n            // onChange={this.handleInputChange}                   \n        }               \n        else{\n            return(\n            <div>\n                <div className = 'row'>\n                    <span style = {{fontSize:\"45px\", fontWeight:\"normal\"}}>{this.props.text} </span>\n                </div>\n                \n                <div className = 'row'>\n                    <Button onClick={()=>this.onClick()}>edit</Button>\n                </div>\n            </div>\n            );\n        }\n\n    }\n}\n\nexport default EditBox;\n\n*/","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion/confusion-origin/confusion/src/component/EditBoxComponent.js"],"names":["Link","React","useState","useEffect","Component","Form","Input","Button","Label","Control","Errors","EditBox","props","text","setValue","currentText","content","placeHolder","type","console","log","field_name","title","description","handleSubmit","event","putContent","preventDefault","target","value"],"mappings":";AACA,SAAQA,IAAR,QAAmB,kBAAnB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,SAApC,QAAoD,OAApD;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,KAA9B,QAA0C,YAA1C;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAA+B,kBAA/B;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB,QAAM,CAACC,IAAD,EAAOC,QAAP,IAAmBZ,QAAQ,CAACa,WAAD,CAAjC;;AACA,MAAIH,KAAK,CAACI,OAAN,KAAkB,IAAtB,EAA2B;AACvB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,MAAIC,WAAW,GAAC,EAAhB;AACA,MAAIF,WAAW,GAAC,EAAhB;AACA,MAAIG,IAAI,GAAG,MAAX;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCR,KAAK,CAACI,OAA5C,EAAqD,qBAArD,EAA4EJ,KAAK,CAACS,UAAlF;;AACA,UAAQT,KAAK,CAACS,UAAd;AACI,SAAK,OAAL;AACIN,MAAAA,WAAW,GAACH,KAAK,CAACI,OAAN,CAAcM,KAA1B;AACAL,MAAAA,WAAW,GAAC,kBAAZ;AACA;;AAEJ,SAAK,aAAL;AACIF,MAAAA,WAAW,GAACH,KAAK,CAACI,OAAN,CAAcO,WAA1B;AACAN,MAAAA,WAAW,GAAC,kBAAZ;AACAC,MAAAA,IAAI,GAAG,UAAP;AATR,GAZuB,CAyBvB;;;AAEA,WAASM,YAAT,CAAsBC,KAAtB,EAA4B;AAC3B;AACCb,IAAAA,KAAK,CAACc,UAAN,CAAiBb,IAAjB,EAAuBD,KAAK,CAACS,UAA7B;AACAI,IAAAA,KAAK,CAACE,cAAN;AACD;;AAED,sBACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAGF,KAAD,IAAUD,YAAY,CAACC,KAAD,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,KAAK,CAACS,UADT,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEH,IAAb;AAAmB,IAAA,KAAK,EAAEL,IAA1B;AAAgC,IAAA,QAAQ,EAAGY,KAAD,IAAWX,QAAQ,CAACW,KAAK,CAACG,MAAN,CAAaC,KAAd,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CADF,CADJ;AAWH,CA5CD;;AA8CA,eAAelB,OAAf;AAOA","sourcesContent":["\nimport {Link} from 'react-router-dom';\nimport React, {useState, useEffect, Component} from 'react';\nimport { Form, Input, Button, Label} from 'reactstrap';\nimport { Control, Errors} from 'react-redux-form';\n\n\nconst EditBox = (props) => {\n\n    const [text, setValue] = useState(currentText);\n    if (props.content === null){\n        return <div></div>\n    }\n\n    var placeHolder=\"\";\n    var currentText=\"\";\n    var type = \"text\";\n\n    console.log(\"EditBox: props.content\", props.content, \" props.feild_name: \", props.field_name)\n    switch (props.field_name){\n        case \"title\":\n            currentText=props.content.title;\n            placeHolder=\"my restrunt name\";\n            break;\n\n        case \"description\":\n            currentText=props.content.description;\n            placeHolder=\"my restrunt name\";\n            type = \"textarea\";\n    }\n\n\n    //handleChange is emplemented in the form itself\n  \n    function handleSubmit(event){\n     // alert(title);\n      props.putContent(text, props.field_name);\n      event.preventDefault();\n    }\n  \n    return(\n        <Form onSubmit={(event)=> handleSubmit(event)}>\n          <Label>\n            {props.field_name} \n            <Input type={type} value={text} onChange={(event) => setValue(event.target.value)}/>\n            <Button type=\"submit\" value=\"Submit\">submit</Button>\n          </Label>\n        </Form>\n    );\n\n\n}\n\nexport default EditBox;\n\n\n\n\n\n\n/*\nimport React, {Component} from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Label, Col , Row } from 'reactstrap'\nimport { Control, Form, Errors, Input} from 'react-redux-form';\n\nclass EditBox extends Component{\n\n    constructor(props){\n        super (props)\n\n        this.state = {\n            edit: false,\n            text:this.props.text\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values){\n        console.log(\"handleSubmit\", values)\n        this.props.putText(this.state.text, this.props.id, this.props.username);\n\n        this.setState({\n            edit: !this.state.edit\n        });\n    }\n\n\n    onClick(){\n\n        console.log(\"onClick\", this.state.edit)\n        this.setState({\n            edit: !this.state.edit\n        });\n    }\n\n    handleInputChange(event){\n            // This will update specific key in your form object inside the local state\n        this.setState({\n            form: Object.assign({}, this.state.form, {\n            [event.target.text]: event.target.value,\n        }),\n        });\n    }\n\n\n    render(){\n\n        \n\n        if(this.state.edit){\n\n            return( \n                <div>\n            <Form model=\"text\" onSubmit={(values) => this.handleSubmit(values)}>\n                <Control.textarea model=\".text\" id={this.props.id} name=\"text\" style = {{fontSize:\"35px\"}}\n                    rows={this.props.rows_num} \n                    className=\"form-control\"  \n                    onChange={event => this.handleInputChange(event)}\n                    defaultValue={this.props.text}/>\n\n                <Button type=\"submit\">save</Button>\n            </Form>\n\n            \n                </div>\n            );        \n            // onChange={this.handleInputChange}                   \n        }               \n        else{\n            return(\n            <div>\n                <div className = 'row'>\n                    <span style = {{fontSize:\"45px\", fontWeight:\"normal\"}}>{this.props.text} </span>\n                </div>\n                \n                <div className = 'row'>\n                    <Button onClick={()=>this.onClick()}>edit</Button>\n                </div>\n            </div>\n            );\n        }\n\n    }\n}\n\nexport default EditBox;\n\n*/"]},"metadata":{},"sourceType":"module"}