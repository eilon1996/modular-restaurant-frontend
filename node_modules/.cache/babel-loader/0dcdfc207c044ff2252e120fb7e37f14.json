{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\nexport const postComment = (dishId, rating, author, comment) => fetch(\"comments\", \"\", \"POST\", {\n  dishId: dishId,\n  rating: rating,\n  author: author,\n  comment: comment,\n  date: new Date().toISOString()\n}); ////// feedback //////\n\nexport const postFeedback = (firstName, lastName, telNum, email, agree, contactType, message) => fetch(\"comments\", \"\", \"POST\", {\n  firstName: firstName,\n  lastName: lastName,\n  telNum: telNum,\n  email: email,\n  agree: agree,\n  contactType: contactType,\n  message: message,\n  date: new Date().toISOString()\n}); ////////////  signup  ////////////\n\nexport const signup = fields_value => fetch(\"content\", fields_value[0], \"POST\", {\n  id: fields_value[0],\n  password: fields_value[1],\n  title: fields_value[2],\n  titleFontSize: fields_value[3],\n  description: fields_value[4],\n  descriptionFontSize: fields_value[5]\n}); ///////////putContnet///////////\n\nexport const putContent = fields_value => fetch(\"myContent\", fields_value[0], \"PUT\", {\n  id: fields_value[0],\n  password: fields_value[1],\n  title: fields_value[2],\n  titleFontSize: fields_value[3],\n  description: fields_value[4],\n  descriptionFontSize: fields_value[5]\n}); ////////FETCH //////////////\n\nexport const fetchMyContent = id => fetch(\"myContent\", id, \"GET\", null);\nexport const fetchContent = () => fetch(\"content\", \"\", \"GET\", null);\nexport const fetchDishes = () => fetch(\"dishes\", \"\", \"GET\", null);\nexport const fetchLeaders = () => fetch(\"leaders\", \"\", \"GET\", null);\nexport const fetchPromos = () => fetch(\"promotions\", \"\", \"GET\", null);\nexport const fetchComments = () => fetch(\"comments\", \"\", \"GET\", null); ////// ACTION GENERATOR /////\n\nexport const fetch = (type, id, method, newJson) => dispatch => {\n  if (method === \"GET\") dispatch(loading(type));\n\n  if (type === \"myContent\" && id === null) {\n    id = \"0\";\n  }\n\n  return fetch(baseUrl + '/' + type + '/' + id + \".json\", {\n    method: method,\n    body: JSON.stringify(newJson),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      console.log(\"ActionCreator-fetch \" + type + id + \", response is OK\\nresponse: \", response);\n      return response;\n    } else {\n      console.log(\"ActionCreator-fetchmyContent, response is NOT OK\\nresponse: \", response);\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    console.log(\"ActionCreator-fetchmyContent, NO response \\error.message: \", error.message);\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(values => dispatch(add(values, type))).catch(error => dispatch(failed(error.message)));\n};\nexport const loading = type => {\n  console.log(\"ActionCreator-loading type: \", type);\n  var actionType = null;\n\n  switch (type) {\n    case \"myContent\":\n      actionType = ActionTypes.MYCONTENT_LOADING;\n      break;\n\n    case \"dishes\":\n      actionType = ActionTypes.DISHES_LOADING;\n      break;\n\n    case \"leaders\":\n      actionType = ActionTypes.LEADERS_LOADING;\n      break;\n\n    case \"promotions\":\n      actionType = ActionTypes.PROMOS_LOADING;\n      break;\n  }\n\n  return {\n    type: actionType\n  };\n};\nexport const failed = (errmess, type) => {\n  console.log(\"ActionCreator-failed, errmess: \", errmess, \" type: \", type);\n  var actionType = null;\n\n  switch (type) {\n    case \"myContent\":\n      actionType = ActionTypes.MYCONTENT_FAILED;\n      break;\n\n    case \"content\":\n      actionType = ActionTypes.CONTENT_FAILED;\n      break;\n\n    case \"dishes\":\n      actionType = ActionTypes.DISHES_FAILED;\n      break;\n\n    case \"leaders\":\n      actionType = ActionTypes.LEADERS_FAILED;\n      break;\n\n    case \"promotions\":\n      actionType = ActionTypes.PROMOS_FAILED;\n      break;\n\n    case \"comments\":\n      actionType = ActionTypes.COMMENTS_FAILED;\n      break;\n  }\n\n  return {\n    type: actionType,\n    payload: errmess\n  };\n};\nexport const add = (values, type) => {\n  console.log(\"ActionCreator-add, values: \", values, \" type: \", type);\n  var actionType = null;\n\n  switch (type) {\n    case \"myContent\":\n      actionType = ActionTypes.ADD_MYCONTENT;\n      break;\n\n    case \"content\":\n      actionType = ActionTypes.ADD_CONTENT;\n      break;\n\n    case \"dishes\":\n      actionType = ActionTypes.ADD_DISHES;\n      break;\n\n    case \"leaders\":\n      actionType = ActionTypes.ADD_LEADERS;\n      break;\n\n    case \"comments\":\n      actionType = ActionTypes.ADD_COMMENTS;\n      break;\n  }\n\n  return {\n    type: actionType,\n    payload: values\n  };\n};","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","postComment","dishId","rating","author","comment","fetch","date","Date","toISOString","postFeedback","firstName","lastName","telNum","email","agree","contactType","message","signup","fields_value","id","password","title","titleFontSize","description","descriptionFontSize","putContent","fetchMyContent","fetchContent","fetchDishes","fetchLeaders","fetchPromos","fetchComments","type","method","newJson","dispatch","loading","body","JSON","stringify","headers","credentials","then","response","ok","console","log","error","Error","status","statusText","errmess","json","values","add","catch","failed","actionType","MYCONTENT_LOADING","DISHES_LOADING","LEADERS_LOADING","PROMOS_LOADING","MYCONTENT_FAILED","CONTENT_FAILED","DISHES_FAILED","LEADERS_FAILED","PROMOS_FAILED","COMMENTS_FAILED","payload","ADD_MYCONTENT","ADD_CONTENT","ADD_DISHES","ADD_LEADERS","ADD_COMMENTS"],"mappings":"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","sourcesContent":["\nimport * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\nexport const postComment = (dishId, rating, author, comment) => fetch(\"comments\", \"\", \"POST\", {\n\n      dishId: dishId,\n      rating: rating,\n      author: author,\n      comment: comment,\n      date:new Date().toISOString()\n  })\n\n////// feedback //////\n\nexport const postFeedback = ( firstName, lastName, telNum, email, agree, contactType, message) => fetch(\"comments\", \"\", \"POST\", {\n    firstName: firstName,\n    lastName: lastName,\n    telNum: telNum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message,\n    date:new Date().toISOString()\n  })\n\n////////////  signup  ////////////\n\nexport const signup = (fields_value) => fetch(\"content\", fields_value[0], \"POST\", {\n  id:fields_value[0],\n  password:fields_value[1],\n  title: fields_value[2],\n  titleFontSize: fields_value[3],\n  description: fields_value[4],\n  descriptionFontSize: fields_value[5]\n})\n\n\n///////////putContnet///////////\n\nexport const putContent = (fields_value) => fetch(\"myContent\", fields_value[0], \"PUT\", {\n  id:fields_value[0],\n  password:fields_value[1],\n  title: fields_value[2],\n  titleFontSize: fields_value[3],\n  description: fields_value[4],\n  descriptionFontSize: fields_value[5]\n})\n\n////////FETCH //////////////\n\nexport const fetchMyContent = (id) => fetch(\"myContent\", id, \"GET\", null)\n\nexport const fetchContent = () => fetch(\"content\", \"\", \"GET\", null)\n\nexport const fetchDishes = () => fetch(\"dishes\", \"\", \"GET\", null)\n\nexport const fetchLeaders = () => fetch(\"leaders\", \"\", \"GET\", null)\n\nexport const fetchPromos = () => fetch(\"promotions\", \"\", \"GET\", null)\n\nexport const fetchComments = () => fetch(\"comments\", \"\", \"GET\", null)\n\n\n////// ACTION GENERATOR /////\n\nexport const fetch = (type, id, method, newJson) => (dispatch) => {\n\n  if(method === \"GET\") dispatch(loading(type));\n  if(type === \"myContent\" && id === null){\n    id = \"0\";\n  }\n  return fetch(baseUrl + '/'+type+'/'+id+\".json\", {\n    method: method,\n    body: JSON.stringify(newJson),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n})\n  .then(response => {\n      if (response.ok) {\n        console.log(\"ActionCreator-fetch \"+type+id+\", response is OK\\nresponse: \", response);        \n        return response;\n      } else {\n        console.log(\"ActionCreator-fetchmyContent, response is NOT OK\\nresponse: \", response);   \n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n      console.log(\"ActionCreator-fetchmyContent, NO response \\error.message: \", error.message); \n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(values => dispatch(add(values, type)))\n  .catch(error => dispatch(failed(error.message)));\n\n}\n\nexport const loading = (type) => { \n\n  console.log(\"ActionCreator-loading type: \", type); \n  var actionType = null;\n  switch (type){\n    case \"myContent\":\n      actionType = ActionTypes.MYCONTENT_LOADING\n      break\n    case \"dishes\":\n      actionType = ActionTypes.DISHES_LOADING\n      break\n    case \"leaders\":\n      actionType = ActionTypes.LEADERS_LOADING\n      break\n    case \"promotions\":\n      actionType = ActionTypes.PROMOS_LOADING\n      break\n  }\n  return{\n  type: actionType\n}}\n\nexport const failed = ((errmess, type) => {  \n  console.log(\"ActionCreator-failed, errmess: \", errmess, \" type: \", type); \n  var actionType = null;\n  switch (type){\n    case \"myContent\":\n      actionType = ActionTypes.MYCONTENT_FAILED\n      break\n    case \"content\":\n      actionType = ActionTypes.CONTENT_FAILED\n      break\n    case \"dishes\":\n      actionType = ActionTypes.DISHES_FAILED\n      break\n    case \"leaders\":\n      actionType = ActionTypes.LEADERS_FAILED\n      break\n    case \"promotions\":\n      actionType = ActionTypes.PROMOS_FAILED\n      break\n    case \"comments\":\n      actionType = ActionTypes.COMMENTS_FAILED\n      break\n  }\n  return({\n  type: actionType,\n  payload: errmess});\n});\n\nexport const add = (values, type) => {\n  console.log(\"ActionCreator-add, values: \", values, \" type: \", type); \n  var actionType = null;\n  switch (type){\n    case \"myContent\":\n      actionType = ActionTypes.ADD_MYCONTENT\n      break\n    case \"content\":\n      actionType = ActionTypes.ADD_CONTENT\n      break\n    case \"dishes\":\n      actionType = ActionTypes.ADD_DISHES\n      break\n    case \"leaders\":\n      actionType = ActionTypes.ADD_LEADERS\n      break\n    case \"comments\":\n      actionType = ActionTypes.ADD_COMMENTS\n      break\n  }\n  return({\n    type: actionType,\n    payload: values\n  });\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}