{"ast":null,"code":"import _objectSpread from\"/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as ActionTypes from'./ActionTypes';export var Dishes=function Dishes(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{isLoading:true,errMess:null,dishes:[]};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ActionTypes.ADD_DISHES:console.log(\"dishes.js: type: \"+action.type+\" payload: \"+JSON.stringify(action.payload));return _objectSpread(_objectSpread({},state),{},{isLoading:false,errMess:null,dishes:action.payload});case ActionTypes.DISHES_LOADING:console.log(\"dishes.js: type: \"+action.type);// returning a new state (not chaning it) with the values given\nreturn _objectSpread(_objectSpread({},state),{},{isLoading:true,errMess:null,dishes:[]});case ActionTypes.DISHES_FAILED:console.log(\"dishes.js: type: \"+action.type);//alert(\"dishes.js- DISHES_FAILED: \"+ action.payload);\nreturn _objectSpread(_objectSpread({},state),{},{isLoading:false,errMess:action.payload,dishes:[]});default:return state;}};","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion/confusion-new/confusion/src/redux/dishes.js"],"names":["ActionTypes","Dishes","state","isLoading","errMess","dishes","action","type","ADD_DISHES","console","log","JSON","stringify","payload","DISHES_LOADING","DISHES_FAILED"],"mappings":"+LAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,eAA7B,CAEA,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAIwB,IAJvBC,CAAAA,KAIuB,2DAJf,CACHC,SAAS,CAAC,IADP,CAEHC,OAAO,CAAE,IAFN,CAGHC,MAAM,CAAE,EAHL,CAIe,IAAXC,CAAAA,MAAW,2CAE1C,OAAQA,MAAM,CAACC,IAAf,EACQ,IAAKP,CAAAA,WAAW,CAACQ,UAAjB,CACIC,OAAO,CAACC,GAAR,CAAY,oBAAsBJ,MAAM,CAACC,IAA7B,CAAoC,YAApC,CAAiDI,IAAI,CAACC,SAAL,CAAeN,MAAM,CAACO,OAAtB,CAA7D,EACA,sCAAWX,KAAX,MAAkBC,SAAS,CAAC,KAA5B,CAAmCC,OAAO,CAAC,IAA3C,CAAiDC,MAAM,CAAEC,MAAM,CAACO,OAAhE,GAEJ,IAAKb,CAAAA,WAAW,CAACc,cAAjB,CACIL,OAAO,CAACC,GAAR,CAAY,oBAAsBJ,MAAM,CAACC,IAAzC,EACA;AACA,sCAAWL,KAAX,MAAkBC,SAAS,CAAC,IAA5B,CAAkCC,OAAO,CAAC,IAA1C,CAAgDC,MAAM,CAAC,EAAvD,GAEJ,IAAKL,CAAAA,WAAW,CAACe,aAAjB,CACIN,OAAO,CAACC,GAAR,CAAY,oBAAsBJ,MAAM,CAACC,IAAzC,EACA;AACA,sCAAWL,KAAX,MAAkBC,SAAS,CAAC,KAA5B,CAAmCC,OAAO,CAAEE,MAAM,CAACO,OAAnD,CAA4DR,MAAM,CAAE,EAApE,GAKJ,QACI,MAAOH,CAAAA,KAAP,CAnBZ,CAqBH,CA3BM","sourcesContent":["import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n                            isLoading:true, \n                            errMess: null,\n                            dishes: []\n                                }, action) => {\n    \n    switch (action.type) {\n            case ActionTypes.ADD_DISHES:\n                console.log(\"dishes.js: type: \" +(action.type)+ \" payload: \"+JSON.stringify(action.payload));\n                return {...state, isLoading:false, errMess:null, dishes: action.payload}\n            \n            case ActionTypes.DISHES_LOADING:\n                console.log(\"dishes.js: type: \" +(action.type));\n                // returning a new state (not chaning it) with the values given\n                return {...state, isLoading:true, errMess:null, dishes:[]}\n\n            case ActionTypes.DISHES_FAILED:\n                console.log(\"dishes.js: type: \" +(action.type));\n                //alert(\"dishes.js- DISHES_FAILED: \"+ action.payload);\n                return {...state, isLoading:false, errMess: action.payload, dishes: []}\n\n                \n\n          \n            default:\n                return state;\n      }\n};"]},"metadata":{},"sourceType":"module"}