{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/externalUrl'; ////////////  signup  ////////////\n\nexport const signup = jsonObject => dispatch => {\n  const id = String(jsonObject.id);\n  const newJson = {};\n  newJson[id] = jsonObject;\n  return fetch(\"https://warm-fjord-92793.herokuapp.com\" + '/signup', {\n    method: \"POST\",\n    body: JSON.stringify(jsonObject),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    redirect: 'follow'\n  }).then(res => {\n    console.log(\"signup, res:\", res);\n\n    if (res) {\n      // res is token\n      console.log(\"response: \", res, res.text());\n      return res.text();\n    } else {\n      var error = new Error('Error ' + res.status + ': ' + res.statusText);\n      error.response = res;\n      throw error;\n    }\n  }).then(response => {\n    dispatch(addMyContent(response[id]));\n  }).then(response => {\n    dispatch(addContent(response));\n    alert('your sign up was successful');\n  }).catch(error => {\n    console.log('submmit content', error.message);\n    alert('Your content could not be submited\\nError: ' + error.message);\n  });\n}; ///////////putContnet///////////\n\nexport const putContent = jsonObject => dispatch => {\n  console.log(\"ActionCreator-putcontent\", jsonObject);\n  addMyContent(jsonObject);\n  if (jsonObject.id === \"0\") return; // user 0 dont need to update the server\n\n  if (jsonObject.id === \"eilon\") {\n    jsonObject.id = \"0\";\n    jsonObject.password = \"0\";\n  }\n\n  return fetch(baseUrl + '/content/' + jsonObject.id + \".json\", {\n    method: \"PATCH\",\n    body: JSON.stringify(jsonObject),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).catch(error => {\n    console.log('submmit content', error.message);\n    alert('Your content could not be submited\\nError: ' + error.message);\n  });\n}; /// fetch myContent////\n\nexport const fetchMyContent = id => dispatch => {\n  console.log(\"fetchMyContent, id:\", id);\n  dispatch(myContentLoading(true));\n  let tempId;\n  if (id === null) tempId = \"0\";else if (id === \"eilon\") tempId = \"0\";else tempId = id;\n  return fetch(baseUrl + '/content/' + tempId + \".json\").then(response => {\n    if (response.ok) {\n      console.log(\"ActionCreator-fetchmyContent, response is OK\\nresponse: \", response);\n      return response;\n    } else {\n      console.log(\"ActionCreator-fetchmyContent, response is NOT OK\\nresponse: \", response);\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    console.log(\"ActionCreator-fetchmyContent, NO response \\error.message: \", error.message);\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(myContent => {\n    if (id == \"eilon\") myContent.id = \"eilon\";\n    console.log(\"myContent.id , id\", myContent.id, id);\n    dispatch(addMyContent(myContent));\n  }).catch(error => dispatch(myContentFailed(error.message)));\n};\nexport const myContentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.MYCONTENT_LOADING\n  };\n};\nexport const myContentFailed = errmess => {\n  return {\n    type: ActionTypes.MYCONTENT_FAILED,\n    payload: errmess\n  };\n};\nexport const addMyContent = myContent => {\n  console.log(\"ActionCreator-addMyContent, content: \", myContent);\n  return {\n    type: ActionTypes.ADD_MYCONTENT,\n    payload: myContent\n  };\n}; /// fetch content////\n\nexport const fetchContent = () => dispatch => {\n  return fetch(baseUrl + '/content' + \".json\").then(response => {\n    if (response.ok) {\n      console.log(\"ActionCreator-fetchContent, response is OK\\nresponse: \", response);\n      return response;\n    } else {\n      console.log(\"ActionCreator-fetchContent, response is NOT OK\\nresponse: \", response);\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    console.log(\"ActionCreator-fetchContent, NO response \\error.message: \", error.message);\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(content => dispatch(addContent(content))).catch(error => dispatch(contentFailed(error.message)));\n};\nexport const contentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.CONTENT_LOADING\n  };\n};\nexport const contentFailed = errmess => {\n  return {\n    type: ActionTypes.CONTENT_FAILED,\n    payload: errmess\n  };\n};\nexport const addContent = content => {\n  console.log(\"ActionCreator-addContent, content: \", content);\n  return {\n    type: ActionTypes.ADD_CONTENT,\n    payload: content\n  };\n}; ///////////feedback///////////\n\nexport const postFeedback = (firstName, lastName, telNum, email, agree, contactType, message) => dispatch => {\n  const newFeedback = {\n    firstName: firstName,\n    lastName: lastName,\n    telNum: telNum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  }; //previesdly the id and the date where added in comments.js\n\n  newFeedback.date = new Date().toISOString();\n  return fetch(baseUrl + '/feedback' + \".json\", {\n    method: \"POST\",\n    body: JSON.stringify(newFeedback),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    //related to the backend \n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => {\n    dispatch(addFeedback(response));\n    alert('Your feedback was submited successfully');\n  }).catch(error => {\n    console.log('submmit feedback', error.message);\n    alert('Your feedback could not be submited\\nError: ' + error.message);\n  });\n};\nexport const addFeedback = feedback => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: feedback\n});","map":{"version":3,"sources":["/home/eilon/programing/full-stack/confusion-new/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","signup","jsonObject","dispatch","id","String","newJson","fetch","method","body","JSON","stringify","headers","redirect","then","res","console","log","text","error","Error","status","statusText","response","addMyContent","addContent","alert","catch","message","putContent","password","credentials","ok","fetchMyContent","myContentLoading","tempId","errmess","json","myContent","myContentFailed","type","MYCONTENT_LOADING","MYCONTENT_FAILED","payload","ADD_MYCONTENT","fetchContent","content","contentFailed","contentLoading","CONTENT_LOADING","CONTENT_FAILED","ADD_CONTENT","postFeedback","firstName","lastName","telNum","email","agree","contactType","newFeedback","date","Date","toISOString","addFeedback","feedback","ADD_COMMENT"],"mappings":"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","sourcesContent":["\nimport * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/externalUrl';\n\n\n////////////  signup  ////////////\n\nexport const signup = (jsonObject) => (dispatch) => {\n  const id = String(jsonObject.id);\n  const newJson = {};\n  newJson[id] = jsonObject;\n\n\n  return fetch(\"https://warm-fjord-92793.herokuapp.com\" + '/signup', {\n    method: \"POST\",\n    body: JSON.stringify(jsonObject),\n    headers: {\"Content-Type\": \"application/json\"},\n    redirect: 'follow'\n  })\n    .then(res => {\n      console.log(\"signup, res:\", res);\n      if (res) { // res is token\n        console.log(\"response: \", res, res.text());\n        return res.text();\n      } else {\n        var error = new Error('Error ' + res.status + ': ' + res.statusText);\n        error.response = res;\n        throw error;\n      }\n    })\n    .then(response => {\n      dispatch(addMyContent(response[id]));\n    })\n    .then(response => {\n      dispatch(addContent(response));\n      alert('your sign up was successful');\n    })\n    .catch(error => {\n      console.log('submmit content', error.message);\n      alert('Your content could not be submited\\nError: ' + error.message);\n    });\n};\n\n\n\n///////////putContnet///////////\n\nexport const putContent = (jsonObject) => (dispatch) => {\n\n  console.log(\"ActionCreator-putcontent\", jsonObject);\n\n  addMyContent(jsonObject);\n\n  if (jsonObject.id === \"0\") return; // user 0 dont need to update the server\n\n  if (jsonObject.id === \"eilon\") {\n    jsonObject.id = \"0\";\n    jsonObject.password = \"0\";\n  }\n\n  return fetch(baseUrl + '/content/' + jsonObject.id + \".json\", {\n    method: \"PATCH\",\n    body: JSON.stringify(jsonObject),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  })\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => { throw error; })\n    .catch(error => {\n      console.log('submmit content', error.message);\n      alert('Your content could not be submited\\nError: ' + error.message);\n    });\n};\n\n\n\n/// fetch myContent////\n\nexport const fetchMyContent = (id) => (dispatch) => {\n\n  console.log(\"fetchMyContent, id:\", id);\n  dispatch(myContentLoading(true));\n  let tempId;\n  if (id === null) tempId = \"0\";\n  else if (id === \"eilon\") tempId = \"0\";\n  else tempId = id;\n\n  return fetch(baseUrl + '/content/' + tempId + \".json\")\n    .then(response => {\n      if (response.ok) {\n        console.log(\"ActionCreator-fetchmyContent, response is OK\\nresponse: \", response);\n        return response;\n      } else {\n        console.log(\"ActionCreator-fetchmyContent, response is NOT OK\\nresponse: \", response);\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        console.log(\"ActionCreator-fetchmyContent, NO response \\error.message: \", error.message);\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(myContent => {\n      if (id == \"eilon\") myContent.id = \"eilon\";\n      console.log(\"myContent.id , id\", myContent.id, id)\n      dispatch(addMyContent(myContent))\n    })\n    .catch(error => dispatch(myContentFailed(error.message)));\n\n}\n\nexport const myContentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.MYCONTENT_LOADING\n  }\n}\n\nexport const myContentFailed = ((errmess) => {\n  return ({\n    type: ActionTypes.MYCONTENT_FAILED,\n    payload: errmess\n  });\n});\n\nexport const addMyContent = (myContent) => {\n  console.log(\"ActionCreator-addMyContent, content: \", myContent);\n  return ({\n    type: ActionTypes.ADD_MYCONTENT,\n    payload: myContent\n  });\n}\n\n\n\n/// fetch content////\n\nexport const fetchContent = () => (dispatch) => {\n\n  return fetch(baseUrl + '/content' + \".json\")\n    .then(response => {\n      if (response.ok) {\n        console.log(\"ActionCreator-fetchContent, response is OK\\nresponse: \", response);\n        return response;\n      } else {\n        console.log(\"ActionCreator-fetchContent, response is NOT OK\\nresponse: \", response);\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        console.log(\"ActionCreator-fetchContent, NO response \\error.message: \", error.message);\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(content => dispatch(addContent(content)))\n    .catch(error => dispatch(contentFailed(error.message)));\n\n}\n\nexport const contentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.CONTENT_LOADING\n  }\n}\n\nexport const contentFailed = ((errmess) => {\n  return ({\n    type: ActionTypes.CONTENT_FAILED,\n    payload: errmess\n  });\n});\n\nexport const addContent = (content) => {\n  console.log(\"ActionCreator-addContent, content: \", content);\n  return ({\n    type: ActionTypes.ADD_CONTENT,\n    payload: content\n  });\n}\n\n\n///////////feedback///////////\n\nexport const postFeedback = (firstName, lastName, telNum, email, agree, contactType, message) => (dispatch) => {\n\n  const newFeedback = {\n    firstName: firstName,\n    lastName: lastName,\n    telNum: telNum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  };\n\n  //previesdly the id and the date where added in comments.js\n  newFeedback.date = new Date().toISOString();\n\n  return fetch(baseUrl + '/feedback' + \".json\", {\n    method: \"POST\",\n    body: JSON.stringify(newFeedback),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    //related to the backend \n    credentials: \"same-origin\"\n  })\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        throw error;\n      })\n    .then(response => response.json())\n    .then(response => {\n      dispatch(addFeedback(response));\n      alert('Your feedback was submited successfully');\n    })\n    .catch(error => {\n      console.log('submmit feedback', error.message);\n      alert('Your feedback could not be submited\\nError: ' + error.message);\n    });\n};\n\nexport const addFeedback = (feedback) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: feedback\n});"]},"metadata":{},"sourceType":"module"}