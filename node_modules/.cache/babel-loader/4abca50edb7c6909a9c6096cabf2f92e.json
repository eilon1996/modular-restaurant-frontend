{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/externalUrl';\nimport cookie from 'react-cookies'; ////////////  signup  ////////////\n\nexport const signup = jsonObject => dispatch => {\n  //return fetch(\"https://warm-fjord-92793.herokuapp.com/signup\", {\n  return fetch(\"http://localhost:5001/signup\", {\n    method: \"POST\",\n    body: JSON.stringify(jsonObject),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    console.log(\"response\", response);\n    return response.json();\n  }).then(response => {\n    if (response.err) {\n      throw response.err;\n    }\n\n    console.log(\"response.token\", response.token);\n    jsonObject[\"token\"] = response.token; // cookie is not being saved. will work with a short string\n    //cookie.save('auth',response[\"token\"], { path: '/', maxAge: 3600 * 24 * 30 });\n\n    addMyContent(jsonObject);\n    alert(\"you signed up succefuly\");\n    return \"\";\n  }).catch(error => {\n    console.log('signup error: ', error);\n    return error;\n  });\n}; /////////login////////////\n\nexport const login = details => dispatch => {\n  // details is an object {username, password}\n  //return fetch(\"https://warm-fjord-92793.herokuapp.com/login\", {\n  return fetch(\"http://localhost:5001/login\", {\n    method: \"POST\",\n    body: JSON.stringify(details),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    console.log(\"response\", response);\n    return response.json();\n  }).then(response => {\n    if (response.err) {\n      throw response.err;\n    }\n\n    console.log(\"response\", response); //user details\n\n    addMyContent(response.user);\n    alert(\"you logged in succefuly\");\n    return \"\";\n  }).catch(error => {\n    console.log('login error: ', error);\n    return error;\n  });\n}; ///////////putContnet///////////\n\nexport const putContent = jsonObject => dispatch => {\n  console.log(\"ActionCreator-putcontent\", jsonObject);\n  addMyContent(jsonObject);\n  if (jsonObject.id === \"0\") return; // user 0 dont need to update the server\n\n  return fetch(baseUrl + '/content/' + jsonObject.id + \".json\", {\n    method: \"PATCH\",\n    body: JSON.stringify(jsonObject),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }) //.then(response => response.json())\n  //.then(response => {dispatch(addMyContent(response));  })\n  .catch(error => {\n    console.log('submmit content', error.message);\n    alert('Your content could not be submited\\nError: ' + error.message);\n  });\n}; /// fetch myContent////\n\nexport const fetchMyContent = id => dispatch => {\n  console.log(\"fetchMyContent, id:\", id);\n  dispatch(myContentLoading(true));\n\n  if (id === null) {\n    id = \"0\";\n  }\n\n  return fetch(baseUrl + '/content/' + id + \".json\").then(response => {\n    if (response.ok) {\n      console.log(\"ActionCreator-fetchmyContent, response is OK\\nresponse: \", response);\n      return response;\n    } else {\n      console.log(\"ActionCreator-fetchmyContent, response is NOT OK\\nresponse: \", response);\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    console.log(\"ActionCreator-fetchmyContent, NO response \\error.message: \", error.message);\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(myContent => dispatch(addMyContent(myContent))).catch(error => dispatch(myContentFailed(error.message)));\n};\nexport const myContentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.MYCONTENT_LOADING\n  };\n};\nexport const myContentFailed = errmess => {\n  return {\n    type: ActionTypes.MYCONTENT_FAILED,\n    payload: errmess\n  };\n};\nexport const addMyContent = myContent => {\n  console.log(\"ActionCreator-addContent, content: \", myContent);\n  return {\n    type: ActionTypes.ADD_MYCONTENT,\n    payload: myContent\n  };\n}; /// fetch content////\n\nexport const fetchContent = () => dispatch => {\n  return fetch(baseUrl + '/content' + \".json\").then(response => {\n    if (response.ok) {\n      console.log(\"ActionCreator-fetchContent, response is OK\\nresponse: \", response);\n      return response;\n    } else {\n      console.log(\"ActionCreator-fetchContent, response is NOT OK\\nresponse: \", response);\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    console.log(\"ActionCreator-fetchContent, NO response \\error.message: \", error.message);\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(content => dispatch(addContent(content))).catch(error => dispatch(contentFailed(error.message)));\n};\nexport const contentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.CONTENT_LOADING\n  };\n};\nexport const contentFailed = errmess => {\n  return {\n    type: ActionTypes.CONTENT_FAILED,\n    payload: errmess\n  };\n};\nexport const addContent = content => {\n  console.log(\"ActionCreator-addContent, content: \", content);\n  return {\n    type: ActionTypes.ADD_CONTENT,\n    payload: content\n  };\n}; ///////////feedback///////////\n\nexport const postFeedback = (firstName, lastName, telNum, email, agree, contactType, message) => dispatch => {\n  const newFeedback = {\n    firstName: firstName,\n    lastName: lastName,\n    telNum: telNum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  }; //previesdly the id and the date where added in comments.js\n\n  newFeedback.date = new Date().toISOString();\n  return fetch(baseUrl + '/feedback' + \".json\", {\n    method: \"POST\",\n    body: JSON.stringify(newFeedback),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    //related to the backend \n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => {\n    dispatch(addFeedback(response));\n    alert('Your feedback was submited successfully');\n  }).catch(error => {\n    console.log('submmit feedback', error.message);\n    alert('Your feedback could not be submited\\nError: ' + error.message);\n  });\n};\nexport const addFeedback = feedback => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: feedback\n}); ///////////comments////////////\n//since this is a punc, I need to add the dispatch. So, I'll send the function of a function\n\nexport const postComment = (id, rating, author, comment) => dispatch => {\n  const newComment = {\n    dishId: id,\n    rating: rating,\n    author: author,\n    comment: comment,\n    date: new Date().toISOString()\n  }; // add the comment place and id\n\n  return fetch(baseUrl + \"/comments.json\", {\n    method: \"POST\",\n    body: JSON.stringify(newComment),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    //related to the backend \n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }) // add the comment value\n\n  /*\n  .then( (originResponse) => \n    fetch(baseUrl + \"/comments/\"+count+\".json\", {\n      method: \"PATCH\",\n      body: JSON.stringify(newCommentContent),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      //related to the backend \n      credentials: \"same-origin\"\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  )*/\n  .then(response => response.json()).then(response => dispatch(addComment(response))).catch(error => {\n    console.log('post comments', error.message);\n    alert('Your comment could not be posted\\nError: ' + error.message);\n  });\n};\nexport const addComment = comment => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment\n}); //////////// LEADERS //////////////\n\nexport const fetchLeaders = () => dispatch => {\n  dispatch(leadersLoading(true));\n  return fetch(baseUrl + '/leaders' + \".json\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(leaders => dispatch(addLeaders(leaders))).catch(error => dispatch(leadersFailed(error.message)));\n};\nexport const leadersLoading = () => ({\n  type: ActionTypes.LEADERS_LOADING\n});\nexport const leadersFailed = errmess => {\n  return {\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n  };\n};\nexport const addLeaders = leaders => {\n  //alert(\"action creator, leader: \"+ JSON.stringify(leaders))\n  return {\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n  };\n};\n/*\nexport const addLeaders = (leaders) => ({\n  type: ActionTypes.ADD_LEADERS,\n  payload: leaders\n});\n*/\n//////////// DISHES //////////////\n\nexport const fetchDishes = () => dispatch => {\n  console.log(\"ActionCreator-fetchDishes\");\n  dispatch(dishesLoading(true));\n  return fetch(baseUrl + '/dishes' + \".json\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(dishes => dispatch(addDishes(dishes))).catch(error => dispatch(dishesFailed(error.message)));\n}; //returning an action\n\nexport const dishesLoading = () => {\n  console.log(\"ActionCreator-dishesLoading\");\n  return {\n    type: ActionTypes.DISHES_LOADING\n  };\n};\nexport const dishesFailed = errmess => {\n  //alert(\"actionCreator.js - dishesFailed: \"+ errmess);\n  return {\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n  };\n};\nexport const addDishes = dishes => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n}); //////////// COMMENTS //////////////\n\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + '/comments' + \".json\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(comments => dispatch(addComments(comments))).catch(error => dispatch(commentsFailed(error.message)));\n};\nexport const commentsFailed = errmess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n}); //////////// PROMOTIONS //////////////\n\nexport const fetchPromos = () => dispatch => {\n  dispatch(promosLoading());\n  return fetch(baseUrl + '/promotions' + \".json\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(promos => dispatch(addPromos(promos))).catch(error => dispatch(promosFailed(error.message)));\n};\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING\n});\nexport const promosFailed = errmess => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess\n});\nexport const addPromos = promos => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});","map":{"version":3,"sources":["/home/eilon/programing/full-stack/confusion-new/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","cookie","signup","jsonObject","dispatch","fetch","method","body","JSON","stringify","headers","credentials","then","response","console","log","json","err","token","addMyContent","alert","catch","error","login","details","user","putContent","id","ok","Error","status","statusText","message","fetchMyContent","myContentLoading","errmess","myContent","myContentFailed","type","MYCONTENT_LOADING","MYCONTENT_FAILED","payload","ADD_MYCONTENT","fetchContent","content","addContent","contentFailed","contentLoading","CONTENT_LOADING","CONTENT_FAILED","ADD_CONTENT","postFeedback","firstName","lastName","telNum","email","agree","contactType","newFeedback","date","Date","toISOString","addFeedback","feedback","ADD_COMMENT","postComment","rating","author","comment","newComment","dishId","addComment","fetchLeaders","leadersLoading","leaders","addLeaders","leadersFailed","LEADERS_LOADING","LEADERS_FAILED","ADD_LEADERS","fetchDishes","dishesLoading","dishes","addDishes","dishesFailed","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS"],"mappings":"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","sourcesContent":["\nimport * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/externalUrl';\nimport cookie from 'react-cookies';\n\n\n////////////  signup  ////////////\n\nexport const signup = (jsonObject) => (dispatch) => {\n\n  //return fetch(\"https://warm-fjord-92793.herokuapp.com/signup\", {\n  return fetch(\"http://localhost:5001/signup\", {\n    method: \"POST\",\n    body: JSON.stringify(jsonObject),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    credentials: \"same-origin\"\n  })\n    .then(response => {\n      console.log(\"response\", response);\n      return response.json()\n    })\n    .then(response => {\n      if (response.err) {\n        throw response.err;\n      }\n      console.log(\"response.token\", response.token);\n      jsonObject[\"token\"] = response.token;\n      // cookie is not being saved. will work with a short string\n      //cookie.save('auth',response[\"token\"], { path: '/', maxAge: 3600 * 24 * 30 });\n      addMyContent(jsonObject);\n      alert(\"you signed up succefuly\");\n      return \"\";\n    })\n    .catch(error => {\n      console.log('signup error: ', error);\n      return error;\n    });\n};\n\n/////////login////////////\n\nexport const login = (details) => (dispatch) => {\n  // details is an object {username, password}\n\n  //return fetch(\"https://warm-fjord-92793.herokuapp.com/login\", {\n  return fetch(\"http://localhost:5001/login\", {\n    method: \"POST\",\n    body: JSON.stringify(details),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    credentials: \"same-origin\"\n  })\n    .then(response => {\n      console.log(\"response\", response);\n      return response.json()\n    })\n    .then(response => {\n      if (response.err) {\n        throw response.err;\n      }\n      console.log(\"response\", response); //user details\n      addMyContent(response.user);\n      alert(\"you logged in succefuly\");\n      return \"\";\n    })\n    .catch(error => {\n      console.log('login error: ', error);\n      return error;\n    });\n};\n\n\n\n///////////putContnet///////////\n\nexport const putContent = (jsonObject) => (dispatch) => {\n\n  console.log(\"ActionCreator-putcontent\", jsonObject);\n\n  addMyContent(jsonObject);\n  if (jsonObject.id === \"0\") return; // user 0 dont need to update the server\n\n  return fetch(baseUrl + '/content/' + jsonObject.id + \".json\", {\n    method: \"PATCH\",\n    body: JSON.stringify(jsonObject),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  })\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        throw error;\n      })\n    //.then(response => response.json())\n    //.then(response => {dispatch(addMyContent(response));  })\n    .catch(error => {\n      console.log('submmit content', error.message);\n      alert('Your content could not be submited\\nError: ' + error.message);\n    });\n};\n\n\n\n/// fetch myContent////\n\nexport const fetchMyContent = (id) => (dispatch) => {\n\n  console.log(\"fetchMyContent, id:\", id);\n  dispatch(myContentLoading(true));\n\n  if (id === null) {\n    id = \"0\";\n  }\n  return fetch(baseUrl + '/content/' + id + \".json\")\n    .then(response => {\n      if (response.ok) {\n        console.log(\"ActionCreator-fetchmyContent, response is OK\\nresponse: \", response);\n        return response;\n      } else {\n        console.log(\"ActionCreator-fetchmyContent, response is NOT OK\\nresponse: \", response);\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        console.log(\"ActionCreator-fetchmyContent, NO response \\error.message: \", error.message);\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(myContent => dispatch(addMyContent(myContent)))\n    .catch(error => dispatch(myContentFailed(error.message)));\n\n}\n\nexport const myContentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.MYCONTENT_LOADING\n  }\n}\n\nexport const myContentFailed = ((errmess) => {\n  return ({\n    type: ActionTypes.MYCONTENT_FAILED,\n    payload: errmess\n  });\n});\n\nexport const addMyContent = (myContent) => {\n  console.log(\"ActionCreator-addContent, content: \", myContent);\n  return ({\n    type: ActionTypes.ADD_MYCONTENT,\n    payload: myContent\n  });\n}\n\n\n\n/// fetch content////\n\nexport const fetchContent = () => (dispatch) => {\n\n  return fetch(baseUrl + '/content' + \".json\")\n    .then(response => {\n      if (response.ok) {\n        console.log(\"ActionCreator-fetchContent, response is OK\\nresponse: \", response);\n        return response;\n      } else {\n        console.log(\"ActionCreator-fetchContent, response is NOT OK\\nresponse: \", response);\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        console.log(\"ActionCreator-fetchContent, NO response \\error.message: \", error.message);\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(content => dispatch(addContent(content)))\n    .catch(error => dispatch(contentFailed(error.message)));\n\n}\n\nexport const contentLoading = () => {\n  console.log(\"ActionCreator-contentLoading\");\n  return {\n    type: ActionTypes.CONTENT_LOADING\n  }\n}\n\nexport const contentFailed = ((errmess) => {\n  return ({\n    type: ActionTypes.CONTENT_FAILED,\n    payload: errmess\n  });\n});\n\nexport const addContent = (content) => {\n  console.log(\"ActionCreator-addContent, content: \", content);\n  return ({\n    type: ActionTypes.ADD_CONTENT,\n    payload: content\n  });\n}\n\n\n\n\n///////////feedback///////////\n\nexport const postFeedback = (firstName, lastName, telNum, email, agree, contactType, message) => (dispatch) => {\n\n  const newFeedback = {\n    firstName: firstName,\n    lastName: lastName,\n    telNum: telNum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  };\n\n  //previesdly the id and the date where added in comments.js\n  newFeedback.date = new Date().toISOString();\n\n  return fetch(baseUrl + '/feedback' + \".json\", {\n    method: \"POST\",\n    body: JSON.stringify(newFeedback),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    //related to the backend \n    credentials: \"same-origin\"\n  })\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        throw error;\n      })\n    .then(response => response.json())\n    .then(response => {\n      dispatch(addFeedback(response));\n      alert('Your feedback was submited successfully');\n    })\n    .catch(error => {\n      console.log('submmit feedback', error.message);\n      alert('Your feedback could not be submited\\nError: ' + error.message);\n    });\n};\n\nexport const addFeedback = (feedback) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: feedback\n});\n\n\n\n///////////comments////////////\n\n//since this is a punc, I need to add the dispatch. So, I'll send the function of a function\nexport const postComment = (id, rating, author, comment) => (dispatch) => {\n\n\n  const newComment =\n  {\n    dishId: id,\n    rating: rating,\n    author: author,\n    comment: comment,\n    date: new Date().toISOString()\n  }\n\n  // add the comment place and id\n  return fetch(baseUrl + \"/comments.json\", {\n    method: \"POST\",\n    body: JSON.stringify(newComment),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    //related to the backend \n    credentials: \"same-origin\"\n  })\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        throw error;\n      })\n    // add the comment value\n    /*\n  .then( (originResponse) => \n      fetch(baseUrl + \"/comments/\"+count+\".json\", {\n        method: \"PATCH\",\n        body: JSON.stringify(newCommentContent),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        //related to the backend \n        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n  )*/\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error => {\n      console.log('post comments', error.message);\n      alert('Your comment could not be posted\\nError: ' + error.message);\n    });\n};\n\n\nexport const addComment = (comment) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment\n});\n\n\n\n//////////// LEADERS //////////////\n\nexport const fetchLeaders = () => (dispatch) => {\n\n  dispatch(leadersLoading(true));\n\n  return fetch(baseUrl + '/leaders' + \".json\")\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(leaders => dispatch(addLeaders(leaders)))\n    .catch(error => dispatch(leadersFailed(error.message)));\n\n}\n\n\nexport const leadersLoading = () => ({\n  type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = ((errmess) => {\n  return ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n  });\n});\n\nexport const addLeaders = (leaders) => {\n  //alert(\"action creator, leader: \"+ JSON.stringify(leaders))\n  return ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n  });\n}\n\n/*\nexport const addLeaders = (leaders) => ({\n  type: ActionTypes.ADD_LEADERS,\n  payload: leaders\n});\n*/\n\n//////////// DISHES //////////////\n\n\nexport const fetchDishes = () => (dispatch) => {\n  console.log(\"ActionCreator-fetchDishes\");\n  dispatch(dishesLoading(true));\n\n  return fetch(baseUrl + '/dishes' + \".json\")\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(dishes => dispatch(addDishes(dishes)))\n    .catch(error => dispatch(dishesFailed(error.message)));\n\n}\n\n\n//returning an action\nexport const dishesLoading = () => {\n  console.log(\"ActionCreator-dishesLoading\");\n  return { type: ActionTypes.DISHES_LOADING }\n}\n\nexport const dishesFailed = ((errmess) => {\n  //alert(\"actionCreator.js - dishesFailed: \"+ errmess);\n  return ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n  });\n});\n\nexport const addDishes = (dishes) => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n});\n\n\n//////////// COMMENTS //////////////\n\nexport const fetchComments = () => (dispatch) => {\n  return fetch(baseUrl + '/comments' + \".json\")\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\n\nexport const addComments = (comments) => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\n\n\n//////////// PROMOTIONS //////////////\n\nexport const fetchPromos = () => (dispatch) => {\n\n  dispatch(promosLoading());\n\n  return fetch(baseUrl + '/promotions' + \".json\")\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)))\n    .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});"]},"metadata":{},"sourceType":"module"}