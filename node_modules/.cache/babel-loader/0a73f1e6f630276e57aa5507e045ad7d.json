{"ast":null,"code":"var _jsxFileName = \"/home/eilon/programing/full-stack/confusion-new/confusion/src/component/UploadS3.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport 'react-dropzone-uploader/dist/styles.css';\nimport Dropzone from 'react-dropzone-uploader';\nimport '../uploadS3.css';\n\nconst UploadS3 = ({\n  type,\n  contentId,\n  itemId,\n  imgUrl,\n  setImgUrl\n}) => {\n  const [progress, setprogress] = useState(imgUrl ? \"showImg\" : \"p0\");\n  const [canCancel, setCancancel] = useState(false); // specify upload params and url for your files\n  // responsible for the progress bar\n  //const getUploadParams = ({ meta }) => { return { url: 'https://httpbin.org/post' } }\n  //const handleSubmit2 = () => {  console.log(\"onsubmit\");  }\n  // called every time a file's `status` changes\n\n  const handleChangeStatus = ({\n    meta,\n    file\n  }, status) => {\n    console.log(\"uploader\", status, meta, file); // turn in to progress bar\n    //use the rejected files\n\n    if (status === \"removed\") {\n      console.log(\"removed\");\n      setprogress(\"p0\");\n    }\n\n    if (status === \"preparing\") setprogress(\"p1\");\n\n    if (status === \"done\") {\n      setprogress(\"p2\");\n      var data = new FormData();\n      var ending = file.name.split('.'); //const imgName = \"users/\"+props.type+\"/\"+props.myId+\"-\"+props.itemId+\".\"+ending[ending.length-1];\n\n      const imgName = \"users/dishes/test1.png\";\n      console.log(\"imgName, file\", imgName, file);\n      data.append('image', file, imgName);\n      var config = {\n        method: 'POST',\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Credentials\": true,\n        dirName: 'users/dishes',\n\n        /* optional, not working */\n        crossorigin: true,\n        //url: \"http://localhost:5001/upload\",\n        url: \"https://warm-fjord-92793.herokuapp.com/upload\",\n        // add to the end of the url the file name end take it from the backend\n        //url: process.env.BACKEND_PORT+\"/upload\",\n        data: data\n      };\n      axios(config).then(function (response) {\n        console.log(JSON.stringify(\"axios response\", JSON.stringify(response)));\n        setImgUrl(response.data);\n        setprogress(\"showImg\");\n        alert(\"axios res\");\n      }).catch(function (error) {\n        alert(\"axios error\");\n        console.log(\"error\", error);\n      });\n      setprogress(\"showImg\");\n    }\n  };\n  /*\n  from github https://github.com/fortana-co/react-dropzone-uploader/blob/master/src/Dropzone.tsx\n  Dropzone accept all those parameters as props\n    multiple,\n    maxFiles,\n    minSizeBytes,\n    maxSizeBytes,\n    onSubmit,\n    getUploadParams,\n    disabled,\n    canCancel,\n    canRemove,\n    canRestart,\n    inputContent,\n    inputWithFilesContent,\n    submitButtonDisabled,\n    submitButtonContent,\n    classNames,\n    styles,\n    addClassNames,\n    InputComponent,\n    PreviewComponent,\n    SubmitButtonComponent,\n    LayoutComponent,\n  */\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DropzoneContainer\",\n    id: \"container\" + progress,\n    style: {\n      backgroundImage: `url(${imgUrl})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone //onSubmit={handleSubmit2}\n  //getUploadParams={getUploadParams} // responsible for the progress bar\n  //onCancel={alert(\"true\")} for some reason it alert on every render\n  , {\n    canRemove: true,\n    onChangeStatus: handleChangeStatus,\n    accept: \"image/*\",\n    multiple: false,\n    inputContent: (files, extra) => extra.reject ? 'Only Image is allowed' : 'Drop Image Here',\n    styles: {\n      dropzoneReject: {\n        borderColor: '#F19373',\n        backgroundColor: '#F1BDAB'\n      },\n      inputLabel: (files, extra) => extra.reject ? {\n        color: '#A02800'\n      } : {}\n    },\n    id: \"Dropzone\" + progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    id: \"wrapper\" + progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    id: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  })));\n}; // to add submit button to the dropzone add in <Dropzone>   onSubmit={handleSubmit}\n\n\nexport default UploadS3;","map":{"version":3,"sources":["/home/eilon/programing/full-stack/confusion-new/confusion/src/component/UploadS3.js"],"names":["React","useState","axios","Dropzone","UploadS3","type","contentId","itemId","imgUrl","setImgUrl","progress","setprogress","canCancel","setCancancel","handleChangeStatus","meta","file","status","console","log","data","FormData","ending","name","split","imgName","append","config","method","dirName","crossorigin","url","then","response","JSON","stringify","alert","catch","error","backgroundImage","files","extra","reject","dropzoneReject","borderColor","backgroundColor","inputLabel","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport 'react-dropzone-uploader/dist/styles.css'\nimport Dropzone from 'react-dropzone-uploader'\nimport '../uploadS3.css';\n\n\n\n\nconst UploadS3 = ({ type, contentId, itemId, imgUrl, setImgUrl }) => {\n\n    const [progress, setprogress] = useState(imgUrl?\"showImg\":\"p0\");\n    const [canCancel, setCancancel] = useState(false);\n\n\n    // specify upload params and url for your files\n    // responsible for the progress bar\n    //const getUploadParams = ({ meta }) => { return { url: 'https://httpbin.org/post' } }\n    //const handleSubmit2 = () => {  console.log(\"onsubmit\");  }\n    \n    // called every time a file's `status` changes\n    const handleChangeStatus = ({ meta, file }, status) => {\n        console.log(\"uploader\", status, meta, file) // turn in to progress bar\n        //use the rejected files\n        if (status === \"removed\"){\n            console.log(\"removed\");\n            setprogress(\"p0\");\n        }\n        if (status === \"preparing\") setprogress(\"p1\");\n        if (status === \"done\") {\n            setprogress(\"p2\");\n            var data = new FormData();\n            var ending = file.name.split('.');\n            //const imgName = \"users/\"+props.type+\"/\"+props.myId+\"-\"+props.itemId+\".\"+ending[ending.length-1];\n            const imgName = \"users/dishes/test1.png\";\n            console.log(\"imgName, file\", imgName, file)\n            data.append('image', file, imgName);\n\n            var config = {\n                method: 'POST',\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Access-Control-Allow-Credentials\": true,\n                dirName: 'users/dishes', /* optional, not working */\n                crossorigin: true,\n                //url: \"http://localhost:5001/upload\",\n                url: \"https://warm-fjord-92793.herokuapp.com/upload\",\n                // add to the end of the url the file name end take it from the backend\n                //url: process.env.BACKEND_PORT+\"/upload\",\n                data: data\n            };\n\n            axios(config)\n                .then(function (response) {\n                    console.log(JSON.stringify(\"axios response\", JSON.stringify(response)));\n                    setImgUrl(response.data);\n                    setprogress(\"showImg\");\n                    alert(\"axios res\");\n                })\n                .catch(function (error) {\n                    alert(\"axios error\");\n                    console.log(\"error\", error);\n                });\n            setprogress(\"showImg\");\n        }\n    }\n\n    /*\n    from github https://github.com/fortana-co/react-dropzone-uploader/blob/master/src/Dropzone.tsx\n    Dropzone accept all those parameters as props\n      multiple,\n      maxFiles,\n      minSizeBytes,\n      maxSizeBytes,\n      onSubmit,\n      getUploadParams,\n      disabled,\n      canCancel,\n      canRemove,\n      canRestart,\n      inputContent,\n      inputWithFilesContent,\n      submitButtonDisabled,\n      submitButtonContent,\n      classNames,\n      styles,\n      addClassNames,\n      InputComponent,\n      PreviewComponent,\n      SubmitButtonComponent,\n      LayoutComponent,\n    */\n\n\n    return (\n        <div className=\"DropzoneContainer\" id={\"container\"+progress}\n            style={{backgroundImage: `url(${imgUrl})`}}>\n            < Dropzone\n                //onSubmit={handleSubmit2}\n                //getUploadParams={getUploadParams} // responsible for the progress bar\n                //onCancel={alert(\"true\")} for some reason it alert on every render\n                canRemove={true}\n                onChangeStatus={handleChangeStatus}\n                accept=\"image/*\"\n                multiple={false}\n                inputContent={(files, extra) => (extra.reject ? 'Only Image is allowed' : 'Drop Image Here')}\n                styles={{\n                    dropzoneReject: { borderColor: '#F19373', backgroundColor: '#F1BDAB' },\n                    inputLabel: (files, extra) => (extra.reject ? { color: '#A02800' } : {}),\n                }}\n                id={\"Dropzone\"+progress}\n            />\n            <div className=\"wrapper\" id={\"wrapper\"+progress}>\n                <div className=\"progress\" id={progress}></div>\n            </div>\n        </div>\n    )\n}\n\n// to add submit button to the dropzone add in <Dropzone>   onSubmit={handleSubmit}\n\n\nexport default UploadS3;"]},"metadata":{},"sourceType":"module"}