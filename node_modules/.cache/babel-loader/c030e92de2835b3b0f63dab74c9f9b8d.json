{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nexport const Dishes = (state = {\n  isLoading: true,\n  errMess: null,\n  dishes: []\n}, action) => {\n  console.log(\"content.js: type: \" + action.type);\n\n  switch (action.type) {\n    case ActionTypes.ADD_DISHES:\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        dishes: action.payload\n      };\n\n    case ActionTypes.DISHES_LOADING:\n      // returning a new state (not chaning it) with the values given\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        dishes: []\n      };\n\n    case ActionTypes.DISHES_FAILED:\n      //alert(\"dishes.js- DISHES_FAILED: \"+ action.payload);\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload,\n        dishes: []\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/eilon/programing/full-stack/React/confusion/confusion-origin/confusion/src/redux/dishes.js"],"names":["ActionTypes","Dishes","state","isLoading","errMess","dishes","action","console","log","type","ADD_DISHES","payload","DISHES_LOADING","DISHES_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,KAAK,GAAG;AACHC,EAAAA,SAAS,EAAC,IADP;AAEHC,EAAAA,OAAO,EAAE,IAFN;AAGHC,EAAAA,MAAM,EAAE;AAHL,CAAT,EAIaC,MAJb,KAIwB;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBF,MAAM,CAACG,IAA1C;;AAEA,UAAQH,MAAM,CAACG,IAAf;AACQ,SAAKT,WAAW,CAACU,UAAjB;AACI,aAAO,EAAC,GAAGR,KAAJ;AAAWC,QAAAA,SAAS,EAAC,KAArB;AAA4BC,QAAAA,OAAO,EAAC,IAApC;AAA0CC,QAAAA,MAAM,EAAEC,MAAM,CAACK;AAAzD,OAAP;;AAEJ,SAAKX,WAAW,CAACY,cAAjB;AACI;AACA,aAAO,EAAC,GAAGV,KAAJ;AAAWC,QAAAA,SAAS,EAAC,IAArB;AAA2BC,QAAAA,OAAO,EAAC,IAAnC;AAAyCC,QAAAA,MAAM,EAAC;AAAhD,OAAP;;AAEJ,SAAKL,WAAW,CAACa,aAAjB;AACI;AACA,aAAO,EAAC,GAAGX,KAAJ;AAAWC,QAAAA,SAAS,EAAC,KAArB;AAA4BC,QAAAA,OAAO,EAAEE,MAAM,CAACK,OAA5C;AAAqDN,QAAAA,MAAM,EAAE;AAA7D,OAAP;;AAKJ;AACI,aAAOH,KAAP;AAhBZ;AAkBH,CAzBM","sourcesContent":["import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n                            isLoading:true, \n                            errMess: null,\n                            dishes: []\n                                }, action) => {\n    console.log(\"content.js: type: \" +(action.type));\n    \n    switch (action.type) {\n            case ActionTypes.ADD_DISHES:\n                return {...state, isLoading:false, errMess:null, dishes: action.payload}\n            \n            case ActionTypes.DISHES_LOADING:\n                // returning a new state (not chaning it) with the values given\n                return {...state, isLoading:true, errMess:null, dishes:[]}\n\n            case ActionTypes.DISHES_FAILED:\n                //alert(\"dishes.js- DISHES_FAILED: \"+ action.payload);\n                return {...state, isLoading:false, errMess: action.payload, dishes: []}\n\n                \n\n          \n            default:\n                return state;\n      }\n};"]},"metadata":{},"sourceType":"module"}